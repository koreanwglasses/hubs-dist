{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/three-ammo/constants.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/ammo.js/builds/ammo.wasm.js","webpack:///./node_modules/ammo.js/builds/ammo.wasm.wasm","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/three/build/three.module.js","webpack:///./node_modules/ammo-debug-drawer/AmmoDebugDrawer.js","webpack:///./node_modules/three-ammo/src/world.js","webpack:///./node_modules/three-ammo/src/body.js","webpack:///./node_modules/three-ammo/src/constraint.js","webpack:///./node_modules/three-to-ammo/index.js","webpack:///./node_modules/three-ammo/src/ammo.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","GRAVITY","MAX_INTERVAL","ITERATIONS","ACTIVATION_STATE","ACTIVE_TAG","ISLAND_SLEEPING","WANTS_DEACTIVATION","DISABLE_DEACTIVATION","DISABLE_SIMULATION","COLLISION_FLAG","STATIC_OBJECT","KINEMATIC_OBJECT","NO_CONTACT_RESPONSE","CUSTOM_MATERIAL_CALLBACK","CHARACTER_OBJECT","DISABLE_VISUALIZE_OBJECT","DISABLE_SPU_COLLISION_PROCESSING","TYPE","STATIC","DYNAMIC","KINEMATIC","SHAPE","BOX","CYLINDER","SPHERE","CAPSULE","CONE","HULL","HACD","VHACD","MESH","HEIGHTFIELD","FIT","ALL","MANUAL","CONSTRAINT","LOCK","FIXED","SPRING","SLIDER","HINGE","CONE_TWIST","POINT_TO_POINT","MESSAGE_TYPES","INIT","READY","ADD_BODY","BODY_READY","UPDATE_BODY","REMOVE_BODY","ADD_SHAPES","REMOVE_SHAPES","ADD_CONSTRAINT","REMOVE_CONSTRAINT","ENABLE_DEBUG","RESET_DYNAMIC_BODY","ACTIVATE_BODY","TRANSFER_DATA","BUFFER_CONFIG","HEADER_LENGTH","MAX_BODIES","MATRIX_OFFSET","LINEAR_VELOCITY_OFFSET","ANGULAR_VELOCITY_OFFSET","COLLISIONS_OFFSET","BODY_DATA_SIZE","BUFFER_STATE","UNINITIALIZED","CONSUMED","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","_scriptDir","Ammo","document","currentScript","src","undefined","b","g","ca","aa","fa","ia","da","ea","window","importScripts","node","ka","la","ma","na","ja","__dirname","a","normalize","readFileSync","buffer","Uint8Array","assert","replace","slice","oa","inspect","read","readbuffer","print","console","log","warn","error","printErr","self","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","pa","qa","sa","ra","f64-rem","debugger","wasmBinary","WebAssembly","ta","ua","Table","initial","maximum","element","wa","Ea","Aa","h","Fa","Ga","xa","TextDecoder","ya","subarray","decode","f","String","fromCharCode","za","Ba","charCodeAt","Ca","Da","Ha","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","Ja","TOTAL_MEMORY","Ka","shift","it","$s","dynCall_v","dynCall_vi","wasmMemory","Memory","byteLength","La","Ma","Na","Oa","Pa","Qa","preRun","unshift","Ra","Math","cos","Sa","sin","Ta","Ua","Va","onAbort","RuntimeError","Wa","Xa","startsWith","preloadedImages","preloadedAudios","Ya","locateFile","Za","asm","monitorRunDependencies","clearInterval","instance","fetch","Promise","credentials","then","ok","arrayBuffer","catch","instantiate","ab","wasi_unstable","global","NaN","Infinity","global.Math","asm2wasm","instantiateWasm","instantiateStreaming","bb","N","getCache","ConcreteContactResultCallback","addSingleResult","DebugDrawer","drawLine","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","db","___errno_location","cb","eb","fb","gb","hb","mb","nb","ob","sb","Ls","tb","ub","vb","wb","xb","yb","Date","getTime","getMonth","getFullYear","getDate","setDate","setMonth","setFullYear","Ab","hrtime","dateNow","performance","now","rb","Bb","Uv","Bu","$v","Yv","fd","Wv","flags","bw","Vv","qb","aw","gt","q","Zv","Xv","u","ba","Ia","va","Jb","__memory_base","__table_base","D","C","B","A","z","j","y","set","max","min","grow","k","pb","dt","x","w","splice","Cb","v","toString","getDay","Cs","Zs","Sv","Rv","Xs","Us","Ks","Ys","cw","Qv","Tv","%c","%D","%F","%h","%r","%R","%T","%x","%X","%Ec","%EC","%Ex","%EX","%Ey","%EY","%Od","%Oe","%OH","%OI","%Om","%OM","%OS","%Ou","%OU","%OV","%Ow","%OW","%Oy","RegExp","split","Ec","%a","substring","%A","%b","%B","%C","%d","%e","%g","%G","%H","%I","%j","%m","%M","%n","%p","%S","%t","%u","%U","ceil","%V","%w","%W","%y","%Y","%z","abs","%Z","%%","zb","memory","table","Db","Su","__ZSt18uncaught_exceptionv","E","Eb","_emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2","F","Fb","_emscripten_bind_AllHitsRayResultCallback___destroy___0","G","Gb","_emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0","H","Hb","_emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0","I","Ib","_emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0","J","Kb","_emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0","K","Lb","_emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0","L","Mb","_emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0","M","Nb","_emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0","Ob","_emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0","O","Pb","_emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0","P","Qb","_emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0","Q","Rb","_emscripten_bind_AllHitsRayResultCallback_hasHit_0","R","Sb","_emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1","S","Tb","_emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1","T","Ub","_emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1","U","Vb","_emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1","V","Wb","_emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1","W","Xb","_emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1","X","Yb","_emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1","Y","Zb","_emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1","Z","$b","_emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1","_","ac","_emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1","$","bc","_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2","cc","_emscripten_bind_ClosestConvexResultCallback___destroy___0","dc","_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0","ec","_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0","fc","_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0","hc","_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0","ic","_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0","ga","jc","_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0","ha","kc","_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0","lc","_emscripten_bind_ClosestConvexResultCallback_hasHit_0","mc","_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1","nc","_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1","oc","_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1","pc","_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1","qc","_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1","rc","_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1","sc","_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1","tc","_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2","uc","_emscripten_bind_ClosestRayResultCallback___destroy___0","vc","_emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0","wc","_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0","xc","_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0","yc","_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0","zc","_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0","Ac","_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0","Bc","_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0","Cc","_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0","Dc","_emscripten_bind_ClosestRayResultCallback_hasHit_0","Fc","_emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1","Gc","_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1","Hc","_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1","Ic","_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1","Jc","_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1","Kc","_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1","Lc","_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1","Mc","_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1","Nc","_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0","Oc","_emscripten_bind_ConcreteContactResultCallback___destroy___0","Pc","_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7","Qc","_emscripten_bind_ContactResultCallback___destroy___0","Rc","_emscripten_bind_ContactResultCallback_addSingleResult_7","Sc","_emscripten_bind_ConvexHull_ConvexHull_0","Tc","_emscripten_bind_ConvexHull___destroy___0","Uc","_emscripten_bind_ConvexHull_get_m_nPoints_0","Vc","_emscripten_bind_ConvexHull_get_m_nTriangles_0","Wc","_emscripten_bind_ConvexHull_get_m_points_1","Xc","_emscripten_bind_ConvexHull_get_m_triangles_1","Yc","_emscripten_bind_ConvexResultCallback___destroy___0","Zc","_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0","$c","_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0","ad","_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0","bd","_emscripten_bind_ConvexResultCallback_hasHit_0","cd","_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1","_a","dd","_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1","$a","ed","_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1","_emscripten_bind_DebugDrawer_DebugDrawer_0","gd","_emscripten_bind_DebugDrawer___destroy___0","hd","_emscripten_bind_DebugDrawer_draw3dText_2","id","_emscripten_bind_DebugDrawer_drawContactPoint_5","jd","_emscripten_bind_DebugDrawer_drawLine_3","kd","_emscripten_bind_DebugDrawer_getDebugMode_0","ld","_emscripten_bind_DebugDrawer_reportErrorWarning_1","md","_emscripten_bind_DebugDrawer_setDebugMode_1","ib","nd","_emscripten_bind_HACD_Compute_0","jb","od","_emscripten_bind_HACD_GetCH_3","kb","pd","_emscripten_bind_HACD_GetNClusters_0","lb","qd","_emscripten_bind_HACD_GetNPointsCH_1","rd","_emscripten_bind_HACD_GetNTrianglesCH_1","sd","_emscripten_bind_HACD_HACD_0","td","_emscripten_bind_HACD_SetCompacityWeight_1","ud","_emscripten_bind_HACD_SetConcavity_1","vd","_emscripten_bind_HACD_SetNClusters_1","wd","_emscripten_bind_HACD_SetNPoints_1","xd","_emscripten_bind_HACD_SetNTriangles_1","yd","_emscripten_bind_HACD_SetNVerticesPerCH_1","zd","_emscripten_bind_HACD_SetPoints_1","Ad","_emscripten_bind_HACD_SetTriangles_1","Bd","_emscripten_bind_HACD_SetVolumeWeight_1","Cd","_emscripten_bind_HACD___destroy___0","Dd","_emscripten_bind_LocalConvexResult_LocalConvexResult_5","Ed","_emscripten_bind_LocalConvexResult___destroy___0","Fd","_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0","Gd","_emscripten_bind_LocalConvexResult_get_m_hitFraction_0","Hd","_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0","Id","_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0","Jd","_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0","Kd","_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1","Ld","_emscripten_bind_LocalConvexResult_set_m_hitFraction_1","Md","_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1","Nd","_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1","Od","_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1","Pd","_emscripten_bind_LocalShapeInfo___destroy___0","Qd","_emscripten_bind_LocalShapeInfo_get_m_shapePart_0","Rd","_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0","Sd","_emscripten_bind_LocalShapeInfo_set_m_shapePart_1","Td","_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1","Ud","_emscripten_bind_Parameters_Parameters_0","Vd","_emscripten_bind_Parameters___destroy___0","Wd","_emscripten_bind_Parameters_get_m_alpha_0","Xd","_emscripten_bind_Parameters_get_m_beta_0","Yd","_emscripten_bind_Parameters_get_m_concavity_0","Zd","_emscripten_bind_Parameters_get_m_convexhullApproximation_0","$d","_emscripten_bind_Parameters_get_m_convexhullDownsampling_0","ae","_emscripten_bind_Parameters_get_m_depth_0","be","_emscripten_bind_Parameters_get_m_gamma_0","ce","_emscripten_bind_Parameters_get_m_maxNumVerticesPerCH_0","de","_emscripten_bind_Parameters_get_m_minVolumePerCH_0","_b","ee","_emscripten_bind_Parameters_get_m_mode_0","fe","_emscripten_bind_Parameters_get_m_oclAcceleration_0","ge","_emscripten_bind_Parameters_get_m_pca_0","he","_emscripten_bind_Parameters_get_m_planeDownsampling_0","ie","_emscripten_bind_Parameters_get_m_resolution_0","je","_emscripten_bind_Parameters_set_m_alpha_1","ke","_emscripten_bind_Parameters_set_m_beta_1","le","_emscripten_bind_Parameters_set_m_concavity_1","gc","me","_emscripten_bind_Parameters_set_m_convexhullApproximation_1","ne","_emscripten_bind_Parameters_set_m_convexhullDownsampling_1","oe","_emscripten_bind_Parameters_set_m_depth_1","pe","_emscripten_bind_Parameters_set_m_gamma_1","qe","_emscripten_bind_Parameters_set_m_maxNumVerticesPerCH_1","re","_emscripten_bind_Parameters_set_m_minVolumePerCH_1","se","_emscripten_bind_Parameters_set_m_mode_1","te","_emscripten_bind_Parameters_set_m_oclAcceleration_1","ue","_emscripten_bind_Parameters_set_m_pca_1","ve","_emscripten_bind_Parameters_set_m_planeDownsampling_1","we","_emscripten_bind_Parameters_set_m_resolution_1","xe","_emscripten_bind_RayResultCallback___destroy___0","ye","_emscripten_bind_RayResultCallback_get_m_closestHitFraction_0","ze","_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0","Ae","_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0","Be","_emscripten_bind_RayResultCallback_get_m_collisionObject_0","Ce","_emscripten_bind_RayResultCallback_hasHit_0","De","_emscripten_bind_RayResultCallback_set_m_closestHitFraction_1","Ee","_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1","Fe","_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1","Ge","_emscripten_bind_RayResultCallback_set_m_collisionObject_1","He","_emscripten_bind_VHACD_Cancel_0","Ie","_emscripten_bind_VHACD_Clean_0","Je","_emscripten_bind_VHACD_Compute_7","Ke","_emscripten_bind_VHACD_GetConvexHull_2","Le","_emscripten_bind_VHACD_GetNConvexHulls_0","Me","_emscripten_bind_VHACD_Release_0","Ne","_emscripten_bind_VHACD_VHACD_0","Oe","_emscripten_bind_VHACD___destroy___0","Pe","_emscripten_bind_Vec3Long_Vec3Long_3","Qe","_emscripten_bind_Vec3Long_X_0","Re","_emscripten_bind_Vec3Long_Y_0","Se","_emscripten_bind_Vec3Long_Z_0","Te","_emscripten_bind_Vec3Long___destroy___0","Ue","_emscripten_bind_Vec3Real_Vec3Real_3","Ve","_emscripten_bind_Vec3Real_X_0","We","_emscripten_bind_Vec3Real_Y_0","Xe","_emscripten_bind_Vec3Real_Z_0","Ye","_emscripten_bind_Vec3Real___destroy___0","Ze","_emscripten_bind_VoidPtr___destroy___0","$e","_emscripten_bind_btActionInterface___destroy___0","af","_emscripten_bind_btActionInterface_updateAction_2","bf","_emscripten_bind_btAxisSweep3___destroy___0","cf","_emscripten_bind_btAxisSweep3_btAxisSweep3_2","df","_emscripten_bind_btAxisSweep3_btAxisSweep3_3","ef","_emscripten_bind_btAxisSweep3_btAxisSweep3_4","_c","ff","_emscripten_bind_btAxisSweep3_btAxisSweep3_5","gf","_emscripten_bind_btBoxShape___destroy___0","hf","_emscripten_bind_btBoxShape_btBoxShape_1","jf","_emscripten_bind_btBoxShape_calculateLocalInertia_2","kf","_emscripten_bind_btBoxShape_getLocalScaling_0","lf","_emscripten_bind_btBoxShape_getMargin_0","mf","_emscripten_bind_btBoxShape_setLocalScaling_1","nf","_emscripten_bind_btBoxShape_setMargin_1","of","_emscripten_bind_btBroadphaseInterface___destroy___0","pf","_emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0","qf","_emscripten_bind_btBroadphaseProxy___destroy___0","rf","_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0","sf","_emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0","tf","_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1","uf","_emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1","vf","_emscripten_bind_btBvhTriangleMeshShape___destroy___0","wf","_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2","xf","_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3","yf","_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2","zf","_emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0","Af","_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1","Bf","_emscripten_bind_btCapsuleShapeX___destroy___0","Cf","_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2","Df","_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2","Ef","_emscripten_bind_btCapsuleShapeX_getHalfHeight_0","Ff","_emscripten_bind_btCapsuleShapeX_getLocalScaling_0","Gf","_emscripten_bind_btCapsuleShapeX_getMargin_0","Hf","_emscripten_bind_btCapsuleShapeX_getRadius_0","If","_emscripten_bind_btCapsuleShapeX_getUpAxis_0","Jf","_emscripten_bind_btCapsuleShapeX_setLocalScaling_1","Kf","_emscripten_bind_btCapsuleShapeX_setMargin_1","Lf","_emscripten_bind_btCapsuleShapeZ___destroy___0","Mf","_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2","Nf","_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2","Of","_emscripten_bind_btCapsuleShapeZ_getHalfHeight_0","Pf","_emscripten_bind_btCapsuleShapeZ_getLocalScaling_0","Qf","_emscripten_bind_btCapsuleShapeZ_getMargin_0","Rf","_emscripten_bind_btCapsuleShapeZ_getRadius_0","Sf","_emscripten_bind_btCapsuleShapeZ_getUpAxis_0","Tf","_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1","Uf","_emscripten_bind_btCapsuleShapeZ_setMargin_1","Vf","_emscripten_bind_btCapsuleShape___destroy___0","Wf","_emscripten_bind_btCapsuleShape_btCapsuleShape_2","Xf","_emscripten_bind_btCapsuleShape_calculateLocalInertia_2","Yf","_emscripten_bind_btCapsuleShape_getHalfHeight_0","Zf","_emscripten_bind_btCapsuleShape_getLocalScaling_0","$f","_emscripten_bind_btCapsuleShape_getMargin_0","ag","_emscripten_bind_btCapsuleShape_getRadius_0","bg","_emscripten_bind_btCapsuleShape_getUpAxis_0","cg","_emscripten_bind_btCapsuleShape_setLocalScaling_1","dg","_emscripten_bind_btCapsuleShape_setMargin_1","eg","_emscripten_bind_btCollisionConfiguration___destroy___0","fg","_emscripten_bind_btCollisionDispatcher___destroy___0","gg","_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1","_d","hg","_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1","ig","_emscripten_bind_btCollisionDispatcher_getNumManifolds_0","jg","_emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0","kg","_emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0","lg","_emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0","mg","_emscripten_bind_btCollisionObject___destroy___0","ng","_emscripten_bind_btCollisionObject_activate_0","og","_emscripten_bind_btCollisionObject_activate_1","pg","_emscripten_bind_btCollisionObject_forceActivationState_1","qg","_emscripten_bind_btCollisionObject_getBroadphaseHandle_0","rg","_emscripten_bind_btCollisionObject_getCollisionFlags_0","sg","_emscripten_bind_btCollisionObject_getCollisionShape_0","tg","_emscripten_bind_btCollisionObject_getFriction_0","ug","_emscripten_bind_btCollisionObject_getRestitution_0","vg","_emscripten_bind_btCollisionObject_getRollingFriction_0","wg","_emscripten_bind_btCollisionObject_getUserIndex_0","xg","_emscripten_bind_btCollisionObject_getUserPointer_0","yg","_emscripten_bind_btCollisionObject_getWorldTransform_0","zg","_emscripten_bind_btCollisionObject_isActive_0","Ag","_emscripten_bind_btCollisionObject_isKinematicObject_0","Bg","_emscripten_bind_btCollisionObject_isStaticObject_0","Cg","_emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0","Dg","_emscripten_bind_btCollisionObject_setActivationState_1","Eg","_emscripten_bind_btCollisionObject_setAnisotropicFriction_2","Fg","_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1","Gg","_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1","Hg","_emscripten_bind_btCollisionObject_setCollisionFlags_1","Ig","_emscripten_bind_btCollisionObject_setCollisionShape_1","Jg","_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1","Kg","_emscripten_bind_btCollisionObject_setFriction_1","Lg","_emscripten_bind_btCollisionObject_setRestitution_1","Mg","_emscripten_bind_btCollisionObject_setRollingFriction_1","Ng","_emscripten_bind_btCollisionObject_setUserIndex_1","Og","_emscripten_bind_btCollisionObject_setUserPointer_1","Pg","_emscripten_bind_btCollisionObject_setWorldTransform_1","Qg","_emscripten_bind_btCollisionShape___destroy___0","Rg","_emscripten_bind_btCollisionShape_calculateLocalInertia_2","Sg","_emscripten_bind_btCollisionShape_getLocalScaling_0","Tg","_emscripten_bind_btCollisionShape_getMargin_0","Ug","_emscripten_bind_btCollisionShape_setLocalScaling_1","Vg","_emscripten_bind_btCollisionShape_setMargin_1","Wg","_emscripten_bind_btCollisionWorld___destroy___0","Xg","_emscripten_bind_btCollisionWorld_addCollisionObject_1","Yg","_emscripten_bind_btCollisionWorld_addCollisionObject_2","Zg","_emscripten_bind_btCollisionWorld_addCollisionObject_3","$g","_emscripten_bind_btCollisionWorld_contactPairTest_3","ah","_emscripten_bind_btCollisionWorld_contactTest_2","bh","_emscripten_bind_btCollisionWorld_convexSweepTest_5","ch","_emscripten_bind_btCollisionWorld_debugDrawObject_3","dh","_emscripten_bind_btCollisionWorld_debugDrawWorld_0","eh","_emscripten_bind_btCollisionWorld_getBroadphase_0","fh","_emscripten_bind_btCollisionWorld_getDebugDrawer_0","gh","_emscripten_bind_btCollisionWorld_getDispatchInfo_0","hh","_emscripten_bind_btCollisionWorld_getDispatcher_0","_e","ih","_emscripten_bind_btCollisionWorld_getPairCache_0","jh","_emscripten_bind_btCollisionWorld_rayTest_3","kh","_emscripten_bind_btCollisionWorld_removeCollisionObject_1","lh","_emscripten_bind_btCollisionWorld_setDebugDrawer_1","mh","_emscripten_bind_btCollisionWorld_setForceUpdateAllAabbs_1","nh","_emscripten_bind_btCollisionWorld_updateSingleAabb_1","oh","_emscripten_bind_btCompoundShape___destroy___0","ph","_emscripten_bind_btCompoundShape_addChildShape_2","qh","_emscripten_bind_btCompoundShape_btCompoundShape_0","rh","_emscripten_bind_btCompoundShape_btCompoundShape_1","sh","_emscripten_bind_btCompoundShape_calculateLocalInertia_2","th","_emscripten_bind_btCompoundShape_getChildShape_1","uh","_emscripten_bind_btCompoundShape_getLocalScaling_0","vh","_emscripten_bind_btCompoundShape_getMargin_0","wh","_emscripten_bind_btCompoundShape_getNumChildShapes_0","xh","_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1","yh","_emscripten_bind_btCompoundShape_removeChildShape_1","zh","_emscripten_bind_btCompoundShape_setLocalScaling_1","Ah","_emscripten_bind_btCompoundShape_setMargin_1","Bh","_emscripten_bind_btCompoundShape_updateChildTransform_2","Ch","_emscripten_bind_btCompoundShape_updateChildTransform_3","Dh","_emscripten_bind_btConcaveShape___destroy___0","Eh","_emscripten_bind_btConcaveShape_calculateLocalInertia_2","Fh","_emscripten_bind_btConcaveShape_getLocalScaling_0","Gh","_emscripten_bind_btConcaveShape_setLocalScaling_1","Hh","_emscripten_bind_btConeShapeX___destroy___0","Ih","_emscripten_bind_btConeShapeX_btConeShapeX_2","Jh","_emscripten_bind_btConeShapeX_calculateLocalInertia_2","Kh","_emscripten_bind_btConeShapeX_getLocalScaling_0","Lh","_emscripten_bind_btConeShapeX_setLocalScaling_1","Mh","_emscripten_bind_btConeShapeZ___destroy___0","Nh","_emscripten_bind_btConeShapeZ_btConeShapeZ_2","Oh","_emscripten_bind_btConeShapeZ_calculateLocalInertia_2","Ph","_emscripten_bind_btConeShapeZ_getLocalScaling_0","Qh","_emscripten_bind_btConeShapeZ_setLocalScaling_1","Rh","_emscripten_bind_btConeShape___destroy___0","Sh","_emscripten_bind_btConeShape_btConeShape_2","Th","_emscripten_bind_btConeShape_calculateLocalInertia_2","Uh","_emscripten_bind_btConeShape_getLocalScaling_0","Vh","_emscripten_bind_btConeShape_setLocalScaling_1","Wh","_emscripten_bind_btConeTwistConstraint___destroy___0","Xh","_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2","Yh","_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4","Zh","_emscripten_bind_btConeTwistConstraint_enableFeedback_1","$h","_emscripten_bind_btConeTwistConstraint_enableMotor_1","ai","_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0","bi","_emscripten_bind_btConeTwistConstraint_getParam_2","ci","_emscripten_bind_btConeTwistConstraint_setAngularOnly_1","di","_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1","ei","_emscripten_bind_btConeTwistConstraint_setDamping_1","fi","_emscripten_bind_btConeTwistConstraint_setLimit_2","gi","_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1","hi","_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1","_f","ii","_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1","ji","_emscripten_bind_btConeTwistConstraint_setMotorTarget_1","ki","_emscripten_bind_btConeTwistConstraint_setParam_3","li","_emscripten_bind_btConstCollisionObjectArray___destroy___0","mi","_emscripten_bind_btConstCollisionObjectArray_at_1","ni","_emscripten_bind_btConstCollisionObjectArray_size_0","oi","_emscripten_bind_btConstraintSetting___destroy___0","pi","_emscripten_bind_btConstraintSetting_btConstraintSetting_0","qi","_emscripten_bind_btConstraintSetting_get_m_damping_0","ri","_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0","si","_emscripten_bind_btConstraintSetting_get_m_tau_0","ti","_emscripten_bind_btConstraintSetting_set_m_damping_1","ui","_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1","vi","_emscripten_bind_btConstraintSetting_set_m_tau_1","wi","_emscripten_bind_btConstraintSolver___destroy___0","xi","_emscripten_bind_btContactSolverInfo___destroy___0","yi","_emscripten_bind_btContactSolverInfo_get_m_numIterations_0","zi","_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0","Ai","_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0","Bi","_emscripten_bind_btContactSolverInfo_set_m_numIterations_1","Ci","_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1","Di","_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1","Ei","_emscripten_bind_btConvexHullShape___destroy___0","Fi","_emscripten_bind_btConvexHullShape_addPoint_1","Gi","_emscripten_bind_btConvexHullShape_addPoint_2","Hi","_emscripten_bind_btConvexHullShape_btConvexHullShape_0","Ii","_emscripten_bind_btConvexHullShape_btConvexHullShape_1","Ji","_emscripten_bind_btConvexHullShape_btConvexHullShape_2","Ki","_emscripten_bind_btConvexHullShape_calculateLocalInertia_2","Li","_emscripten_bind_btConvexHullShape_getConvexPolyhedron_0","Mi","_emscripten_bind_btConvexHullShape_getLocalScaling_0","Ni","_emscripten_bind_btConvexHullShape_getMargin_0","Oi","_emscripten_bind_btConvexHullShape_getNumVertices_0","Pi","_emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1","Qi","_emscripten_bind_btConvexHullShape_recalcLocalAabb_0","Ri","_emscripten_bind_btConvexHullShape_setLocalScaling_1","Si","_emscripten_bind_btConvexHullShape_setMargin_1","Ti","_emscripten_bind_btConvexPolyhedron___destroy___0","Ui","_emscripten_bind_btConvexPolyhedron_get_m_faces_0","Vi","_emscripten_bind_btConvexPolyhedron_get_m_vertices_0","Wi","_emscripten_bind_btConvexPolyhedron_set_m_faces_1","Xi","_emscripten_bind_btConvexPolyhedron_set_m_vertices_1","Yi","_emscripten_bind_btConvexShape___destroy___0","Zi","_emscripten_bind_btConvexShape_calculateLocalInertia_2","$i","_emscripten_bind_btConvexShape_getLocalScaling_0","aj","_emscripten_bind_btConvexShape_getMargin_0","bj","_emscripten_bind_btConvexShape_setLocalScaling_1","cj","_emscripten_bind_btConvexShape_setMargin_1","dj","_emscripten_bind_btConvexTriangleMeshShape___destroy___0","ej","_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1","fj","_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2","gj","_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2","hj","_emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0","ij","_emscripten_bind_btConvexTriangleMeshShape_getMargin_0","_g","jj","_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1","kj","_emscripten_bind_btConvexTriangleMeshShape_setMargin_1","lj","_emscripten_bind_btCylinderShapeX___destroy___0","mj","_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1","nj","_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2","oj","_emscripten_bind_btCylinderShapeX_getLocalScaling_0","pj","_emscripten_bind_btCylinderShapeX_getMargin_0","qj","_emscripten_bind_btCylinderShapeX_setLocalScaling_1","rj","_emscripten_bind_btCylinderShapeX_setMargin_1","sj","_emscripten_bind_btCylinderShapeZ___destroy___0","tj","_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1","uj","_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2","vj","_emscripten_bind_btCylinderShapeZ_getLocalScaling_0","wj","_emscripten_bind_btCylinderShapeZ_getMargin_0","xj","_emscripten_bind_btCylinderShapeZ_setLocalScaling_1","yj","_emscripten_bind_btCylinderShapeZ_setMargin_1","zj","_emscripten_bind_btCylinderShape___destroy___0","Aj","_emscripten_bind_btCylinderShape_btCylinderShape_1","Bj","_emscripten_bind_btCylinderShape_calculateLocalInertia_2","Cj","_emscripten_bind_btCylinderShape_getLocalScaling_0","Dj","_emscripten_bind_btCylinderShape_getMargin_0","Ej","_emscripten_bind_btCylinderShape_setLocalScaling_1","Fj","_emscripten_bind_btCylinderShape_setMargin_1","Gj","_emscripten_bind_btDbvtBroadphase___destroy___0","Hj","_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0","Ij","_emscripten_bind_btDbvtBroadphase_getOverlappingPairCache_0","Jj","_emscripten_bind_btDefaultCollisionConfiguration___destroy___0","Kj","_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0","Lj","_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1","Mj","_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0","Nj","_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0","Oj","_emscripten_bind_btDefaultMotionState___destroy___0","Pj","_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0","Qj","_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1","Rj","_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2","Sj","_emscripten_bind_btDefaultMotionState_getWorldTransform_1","Tj","_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0","Uj","_emscripten_bind_btDefaultMotionState_setWorldTransform_1","Vj","_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1","Wj","_emscripten_bind_btDiscreteDynamicsWorld___destroy___0","Xj","_emscripten_bind_btDiscreteDynamicsWorld_addAction_1","Yj","_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1","Zj","_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2","ak","_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3","bk","_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1","ck","_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2","dk","_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1","ek","_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3","fk","_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4","gk","_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3","hk","_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2","ik","_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5","jk","_emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3","kk","_emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0","_h","lk","_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0","mk","_emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0","nk","_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0","_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0","pk","_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0","qk","_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0","rk","_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0","sk","_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3","tk","_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1","uk","_emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1","vk","_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1","wk","_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1","xk","_emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1","yk","_emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1","zk","_emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1","Ak","_emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1","Bk","_emscripten_bind_btDiscreteDynamicsWorld_setForceUpdateAllAabbs_1","Ck","_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1","Dk","_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1","Ek","_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2","Fk","_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3","Gk","_emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1","Hk","_emscripten_bind_btDispatcherInfo___destroy___0","Ik","_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0","Jk","_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0","Kk","_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0","Lk","_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0","Mk","_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0","Nk","_emscripten_bind_btDispatcherInfo_get_m_stepCount_0","Ok","_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0","Pk","_emscripten_bind_btDispatcherInfo_get_m_timeStep_0","Qk","_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0","Rk","_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0","Sk","_emscripten_bind_btDispatcherInfo_get_m_useEpa_0","Tk","_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1","Uk","_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1","Vk","_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1","Wk","_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1","Xk","_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1","Yk","_emscripten_bind_btDispatcherInfo_set_m_stepCount_1","Zk","_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1","$k","_emscripten_bind_btDispatcherInfo_set_m_timeStep_1","al","_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1","bl","_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1","cl","_emscripten_bind_btDispatcherInfo_set_m_useEpa_1","dl","_emscripten_bind_btDispatcher___destroy___0","el","_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1","fl","_emscripten_bind_btDispatcher_getNumManifolds_0","gl","_emscripten_bind_btDynamicsWorld___destroy___0","hl","_emscripten_bind_btDynamicsWorld_addAction_1","il","_emscripten_bind_btDynamicsWorld_addCollisionObject_1","jl","_emscripten_bind_btDynamicsWorld_addCollisionObject_2","kl","_emscripten_bind_btDynamicsWorld_addCollisionObject_3","ll","_emscripten_bind_btDynamicsWorld_contactPairTest_3","_i","ml","_emscripten_bind_btDynamicsWorld_contactTest_2","nl","_emscripten_bind_btDynamicsWorld_convexSweepTest_5","ol","_emscripten_bind_btDynamicsWorld_debugDrawObject_3","pl","_emscripten_bind_btDynamicsWorld_debugDrawWorld_0","ql","_emscripten_bind_btDynamicsWorld_getBroadphase_0","rl","_emscripten_bind_btDynamicsWorld_getDebugDrawer_0","sl","_emscripten_bind_btDynamicsWorld_getDispatchInfo_0","tl","_emscripten_bind_btDynamicsWorld_getDispatcher_0","ul","_emscripten_bind_btDynamicsWorld_getPairCache_0","vl","_emscripten_bind_btDynamicsWorld_getSolverInfo_0","wl","_emscripten_bind_btDynamicsWorld_rayTest_3","xl","_emscripten_bind_btDynamicsWorld_removeAction_1","yl","_emscripten_bind_btDynamicsWorld_removeCollisionObject_1","zl","_emscripten_bind_btDynamicsWorld_setDebugDrawer_1","Al","_emscripten_bind_btDynamicsWorld_setForceUpdateAllAabbs_1","Bl","_emscripten_bind_btDynamicsWorld_updateSingleAabb_1","Cl","_emscripten_bind_btEmptyShape___destroy___0","Dl","_emscripten_bind_btEmptyShape_btEmptyShape_0","El","_emscripten_bind_btEmptyShape_calculateLocalInertia_2","Fl","_emscripten_bind_btEmptyShape_getLocalScaling_0","Gl","_emscripten_bind_btEmptyShape_setLocalScaling_1","Hl","_emscripten_bind_btFaceArray___destroy___0","Il","_emscripten_bind_btFaceArray_at_1","Jl","_emscripten_bind_btFaceArray_size_0","Kl","_emscripten_bind_btFace___destroy___0","Ll","_emscripten_bind_btFace_get_m_indices_0","Ml","_emscripten_bind_btFace_get_m_plane_1","Nl","_emscripten_bind_btFace_set_m_indices_1","Ol","_emscripten_bind_btFace_set_m_plane_2","Pl","_emscripten_bind_btFixedConstraint___destroy___0","Ql","_emscripten_bind_btFixedConstraint_btFixedConstraint_4","Rl","_emscripten_bind_btFixedConstraint_enableFeedback_1","Sl","_emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0","Tl","_emscripten_bind_btFixedConstraint_getParam_2","Ul","_emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1","Vl","_emscripten_bind_btFixedConstraint_setParam_3","Wl","_emscripten_bind_btGeneric6DofConstraint___destroy___0","Xl","_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3","Yl","_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5","Zl","_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1","$l","_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0","am","_emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0","bm","_emscripten_bind_btGeneric6DofConstraint_getParam_2","cm","_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1","dm","_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1","em","_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1","fm","_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1","gm","_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1","hm","_emscripten_bind_btGeneric6DofConstraint_setParam_3","im","_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0","jm","_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3","km","_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5","lm","_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1","mm","_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2","_j","nm","_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0","$j","om","_emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0","pm","_emscripten_bind_btGeneric6DofSpringConstraint_getParam_2","qm","_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1","rm","_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1","sm","_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1","tm","_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2","um","_emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0","wm","_emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1","xm","_emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2","ym","_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1","zm","_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1","Am","_emscripten_bind_btGeneric6DofSpringConstraint_setParam_3","Bm","_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2","Cm","_emscripten_bind_btGhostObject___destroy___0","Dm","_emscripten_bind_btGhostObject_activate_0","Em","_emscripten_bind_btGhostObject_activate_1","Fm","_emscripten_bind_btGhostObject_btGhostObject_0","Gm","_emscripten_bind_btGhostObject_forceActivationState_1","Hm","_emscripten_bind_btGhostObject_getBroadphaseHandle_0","Im","_emscripten_bind_btGhostObject_getCollisionFlags_0","Jm","_emscripten_bind_btGhostObject_getCollisionShape_0","Km","_emscripten_bind_btGhostObject_getFriction_0","Lm","_emscripten_bind_btGhostObject_getNumOverlappingObjects_0","Mm","_emscripten_bind_btGhostObject_getOverlappingObject_1","Nm","_emscripten_bind_btGhostObject_getRestitution_0","Om","_emscripten_bind_btGhostObject_getRollingFriction_0","Pm","_emscripten_bind_btGhostObject_getUserIndex_0","Qm","_emscripten_bind_btGhostObject_getUserPointer_0","Rm","_emscripten_bind_btGhostObject_getWorldTransform_0","Sm","_emscripten_bind_btGhostObject_isActive_0","Tm","_emscripten_bind_btGhostObject_isKinematicObject_0","Um","_emscripten_bind_btGhostObject_isStaticObject_0","Vm","_emscripten_bind_btGhostObject_isStaticOrKinematicObject_0","Wm","_emscripten_bind_btGhostObject_setActivationState_1","Xm","_emscripten_bind_btGhostObject_setAnisotropicFriction_2","Ym","_emscripten_bind_btGhostObject_setCcdMotionThreshold_1","Zm","_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1","$m","_emscripten_bind_btGhostObject_setCollisionFlags_1","an","_emscripten_bind_btGhostObject_setCollisionShape_1","bn","_emscripten_bind_btGhostObject_setContactProcessingThreshold_1","cn","_emscripten_bind_btGhostObject_setFriction_1","dn","_emscripten_bind_btGhostObject_setRestitution_1","en","_emscripten_bind_btGhostObject_setRollingFriction_1","fn","_emscripten_bind_btGhostObject_setUserIndex_1","gn","_emscripten_bind_btGhostObject_setUserPointer_1","hn","_emscripten_bind_btGhostObject_setWorldTransform_1","jn","_emscripten_bind_btGhostPairCallback___destroy___0","kn","_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0","ln","_emscripten_bind_btHeightfieldTerrainShape___destroy___0","mn","_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9","nn","_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2","_emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0","pn","_emscripten_bind_btHeightfieldTerrainShape_getMargin_0","_k","qn","_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1","rn","_emscripten_bind_btHeightfieldTerrainShape_setMargin_1","sn","_emscripten_bind_btHingeConstraint___destroy___0","tn","_emscripten_bind_btHingeConstraint_btHingeConstraint_2","un","_emscripten_bind_btHingeConstraint_btHingeConstraint_3","vn","_emscripten_bind_btHingeConstraint_btHingeConstraint_4","wn","_emscripten_bind_btHingeConstraint_btHingeConstraint_5","xn","_emscripten_bind_btHingeConstraint_btHingeConstraint_6","yn","_emscripten_bind_btHingeConstraint_btHingeConstraint_7","zn","_emscripten_bind_btHingeConstraint_enableAngularMotor_3","An","_emscripten_bind_btHingeConstraint_enableFeedback_1","Bn","_emscripten_bind_btHingeConstraint_enableMotor_1","Cn","_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0","Dn","_emscripten_bind_btHingeConstraint_getParam_2","En","_emscripten_bind_btHingeConstraint_setAngularOnly_1","Fn","_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1","Gn","_emscripten_bind_btHingeConstraint_setLimit_4","Hn","_emscripten_bind_btHingeConstraint_setLimit_5","In","_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1","Jn","_emscripten_bind_btHingeConstraint_setMotorTarget_2","Kn","_emscripten_bind_btHingeConstraint_setParam_3","Ln","_emscripten_bind_btIDebugDraw___destroy___0","Mn","_emscripten_bind_btIDebugDraw_draw3dText_2","Nn","_emscripten_bind_btIDebugDraw_drawContactPoint_5","On","_emscripten_bind_btIDebugDraw_drawLine_3","Pn","_emscripten_bind_btIDebugDraw_getDebugMode_0","Qn","_emscripten_bind_btIDebugDraw_reportErrorWarning_1","Rn","_emscripten_bind_btIDebugDraw_setDebugMode_1","Sn","_emscripten_bind_btIndexedMeshArray___destroy___0","Tn","_emscripten_bind_btIndexedMeshArray_at_1","Un","_emscripten_bind_btIndexedMeshArray_size_0","Vn","_emscripten_bind_btIndexedMesh___destroy___0","Wn","_emscripten_bind_btIndexedMesh_get_m_numTriangles_0","Xn","_emscripten_bind_btIndexedMesh_set_m_numTriangles_1","Yn","_emscripten_bind_btIntArray___destroy___0","Zn","_emscripten_bind_btIntArray_at_1","$n","_emscripten_bind_btIntArray_size_0","ao","_emscripten_bind_btKinematicCharacterController___destroy___0","bo","_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3","co","_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4","eo","_emscripten_bind_btKinematicCharacterController_canJump_0","fo","_emscripten_bind_btKinematicCharacterController_getGhostObject_0","go","_emscripten_bind_btKinematicCharacterController_getGravity_0","ho","_emscripten_bind_btKinematicCharacterController_getMaxSlope_0","io","_emscripten_bind_btKinematicCharacterController_jump_0","jo","_emscripten_bind_btKinematicCharacterController_onGround_0","ko","_emscripten_bind_btKinematicCharacterController_playerStep_2","lo","_emscripten_bind_btKinematicCharacterController_preStep_1","mo","_emscripten_bind_btKinematicCharacterController_setFallSpeed_1","no","_emscripten_bind_btKinematicCharacterController_setGravity_1","oo","_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1","po","_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1","qo","_emscripten_bind_btKinematicCharacterController_setMaxSlope_1","ro","_emscripten_bind_btKinematicCharacterController_setUpAxis_1","_l","so","_emscripten_bind_btKinematicCharacterController_setUpInterpolate_1","to","_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1","uo","_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2","vo","_emscripten_bind_btKinematicCharacterController_setWalkDirection_1","wo","_emscripten_bind_btKinematicCharacterController_updateAction_2","xo","_emscripten_bind_btKinematicCharacterController_warp_1","yo","_emscripten_bind_btManifoldPoint___destroy___0","zo","_emscripten_bind_btManifoldPoint_getAppliedImpulse_0","Ao","_emscripten_bind_btManifoldPoint_getDistance_0","Bo","_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0","Co","_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0","Do","_emscripten_bind_btManifoldPoint_get_m_localPointA_0","Eo","_emscripten_bind_btManifoldPoint_get_m_localPointB_0","Fo","_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0","Go","_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0","Ho","_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0","Io","_emscripten_bind_btManifoldPoint_get_m_userPersistentData_0","Jo","_emscripten_bind_btManifoldPoint_set_m_localPointA_1","Ko","_emscripten_bind_btManifoldPoint_set_m_localPointB_1","Lo","_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1","Mo","_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1","No","_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1","Oo","_emscripten_bind_btManifoldPoint_set_m_userPersistentData_1","vm","Po","_emscripten_bind_btMatrix3x3___destroy___0","Qo","_emscripten_bind_btMatrix3x3_getRotation_1","Ro","_emscripten_bind_btMatrix3x3_getRow_1","So","_emscripten_bind_btMatrix3x3_setEulerZYX_3","To","_emscripten_bind_btMotionState___destroy___0","Uo","_emscripten_bind_btMotionState_getWorldTransform_1","Vo","_emscripten_bind_btMotionState_setWorldTransform_1","Wo","_emscripten_bind_btMultiSphereShape___destroy___0","Xo","_emscripten_bind_btMultiSphereShape_btMultiSphereShape_3","Yo","_emscripten_bind_btMultiSphereShape_calculateLocalInertia_2","Zo","_emscripten_bind_btMultiSphereShape_getLocalScaling_0","$o","_emscripten_bind_btMultiSphereShape_setLocalScaling_1","ap","_emscripten_bind_btOverlappingPairCache___destroy___0","bp","_emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0","cp","_emscripten_bind_btOverlappingPairCache_removeOverlappingPairsContainingProxy_2","dp","_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1","ep","_emscripten_bind_btOverlappingPairCallback___destroy___0","fp","_emscripten_bind_btPairCachingGhostObject___destroy___0","gp","_emscripten_bind_btPairCachingGhostObject_activate_0","hp","_emscripten_bind_btPairCachingGhostObject_activate_1","ip","_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0","jp","_emscripten_bind_btPairCachingGhostObject_forceActivationState_1","kp","_emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0","lp","_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0","mp","_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0","np","_emscripten_bind_btPairCachingGhostObject_getFriction_0","op","_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0","pp","_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1","qp","_emscripten_bind_btPairCachingGhostObject_getRestitution_0","rp","_emscripten_bind_btPairCachingGhostObject_getRollingFriction_0","sp","_emscripten_bind_btPairCachingGhostObject_getUserIndex_0","_m","tp","_emscripten_bind_btPairCachingGhostObject_getUserPointer_0","up","_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0","vp","_emscripten_bind_btPairCachingGhostObject_isActive_0","wp","_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0","xp","_emscripten_bind_btPairCachingGhostObject_isStaticObject_0","yp","_emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0","zp","_emscripten_bind_btPairCachingGhostObject_setActivationState_1","Ap","_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2","Bp","_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1","Cp","_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1","Dp","_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1","Ep","_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1","Fp","_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1","Gp","_emscripten_bind_btPairCachingGhostObject_setFriction_1","Hp","_emscripten_bind_btPairCachingGhostObject_setRestitution_1","Ip","_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1","Jp","_emscripten_bind_btPairCachingGhostObject_setUserIndex_1","Kp","_emscripten_bind_btPairCachingGhostObject_setUserPointer_1","Lp","_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1","Mp","_emscripten_bind_btPersistentManifold___destroy___0","Np","_emscripten_bind_btPersistentManifold_btPersistentManifold_0","Op","_emscripten_bind_btPersistentManifold_getBody0_0","Pp","_emscripten_bind_btPersistentManifold_getBody1_0","Qp","_emscripten_bind_btPersistentManifold_getContactPoint_1","Rp","_emscripten_bind_btPersistentManifold_getNumContacts_0","Sp","_emscripten_bind_btPoint2PointConstraint___destroy___0","Tp","_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2","Up","_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4","Vp","_emscripten_bind_btPoint2PointConstraint_enableFeedback_1","Wp","_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0","Xp","_emscripten_bind_btPoint2PointConstraint_getParam_2","Yp","_emscripten_bind_btPoint2PointConstraint_getPivotInA_0","Zp","_emscripten_bind_btPoint2PointConstraint_getPivotInB_0","$p","_emscripten_bind_btPoint2PointConstraint_get_m_setting_0","aq","_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1","bq","_emscripten_bind_btPoint2PointConstraint_setParam_3","cq","_emscripten_bind_btPoint2PointConstraint_setPivotA_1","dq","_emscripten_bind_btPoint2PointConstraint_setPivotB_1","eq","_emscripten_bind_btPoint2PointConstraint_set_m_setting_1","fq","_emscripten_bind_btQuadWord___destroy___0","gq","_emscripten_bind_btQuadWord_setW_1","hq","_emscripten_bind_btQuadWord_setX_1","iq","_emscripten_bind_btQuadWord_setY_1","jq","_emscripten_bind_btQuadWord_setZ_1","kq","_emscripten_bind_btQuadWord_w_0","lq","_emscripten_bind_btQuadWord_x_0","mq","_emscripten_bind_btQuadWord_y_0","nq","_emscripten_bind_btQuadWord_z_0","oq","_emscripten_bind_btQuaternion___destroy___0","pq","_emscripten_bind_btQuaternion_angleShortestPath_1","qq","_emscripten_bind_btQuaternion_angle_1","rq","_emscripten_bind_btQuaternion_btQuaternion_4","sq","_emscripten_bind_btQuaternion_dot_1","_n","tq","_emscripten_bind_btQuaternion_getAngleShortestPath_0","uq","_emscripten_bind_btQuaternion_getAngle_0","vq","_emscripten_bind_btQuaternion_getAxis_0","wq","_emscripten_bind_btQuaternion_inverse_0","xq","_emscripten_bind_btQuaternion_length2_0","yq","_emscripten_bind_btQuaternion_length_0","zq","_emscripten_bind_btQuaternion_normalize_0","Aq","_emscripten_bind_btQuaternion_normalized_0","Bq","_emscripten_bind_btQuaternion_op_add_1","Cq","_emscripten_bind_btQuaternion_op_div_1","Dq","_emscripten_bind_btQuaternion_op_mul_1","Eq","_emscripten_bind_btQuaternion_op_mulq_1","Fq","_emscripten_bind_btQuaternion_op_sub_1","Gq","_emscripten_bind_btQuaternion_setEulerZYX_3","Hq","_emscripten_bind_btQuaternion_setRotation_2","Iq","_emscripten_bind_btQuaternion_setValue_4","Jq","_emscripten_bind_btQuaternion_setW_1","Kq","_emscripten_bind_btQuaternion_setX_1","Lq","_emscripten_bind_btQuaternion_setY_1","Mq","_emscripten_bind_btQuaternion_setZ_1","Nq","_emscripten_bind_btQuaternion_w_0","Oq","_emscripten_bind_btQuaternion_x_0","Pq","_emscripten_bind_btQuaternion_y_0","Qq","_emscripten_bind_btQuaternion_z_0","Rq","_emscripten_bind_btRigidBodyConstructionInfo___destroy___0","Sq","_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3","Tq","_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4","Uq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0","Vq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0","Wq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0","Xq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0","Yq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0","Zq","_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0","$q","_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0","ar","_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0","br","_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0","cr","_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0","dr","_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0","er","_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0","fr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1","gr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1","hr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1","ir","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1","jr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1","kr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1","lr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1","mr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1","nr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1","or","_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1","pr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1","qr","_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1","rr","_emscripten_bind_btRigidBody___destroy___0","sr","_emscripten_bind_btRigidBody_activate_0","_o","tr","_emscripten_bind_btRigidBody_activate_1","ur","_emscripten_bind_btRigidBody_applyCentralForce_1","vr","_emscripten_bind_btRigidBody_applyCentralImpulse_1","wr","_emscripten_bind_btRigidBody_applyCentralLocalForce_1","xr","_emscripten_bind_btRigidBody_applyForce_2","yr","_emscripten_bind_btRigidBody_applyGravity_0","zr","_emscripten_bind_btRigidBody_applyImpulse_2","Ar","_emscripten_bind_btRigidBody_applyLocalTorque_1","Br","_emscripten_bind_btRigidBody_applyTorqueImpulse_1","Cr","_emscripten_bind_btRigidBody_applyTorque_1","Dr","_emscripten_bind_btRigidBody_btRigidBody_1","Er","_emscripten_bind_btRigidBody_forceActivationState_1","Fr","_emscripten_bind_btRigidBody_getAabb_2","Gr","_emscripten_bind_btRigidBody_getAngularDamping_0","Hr","_emscripten_bind_btRigidBody_getAngularFactor_0","Ir","_emscripten_bind_btRigidBody_getAngularVelocity_0","Jr","_emscripten_bind_btRigidBody_getBroadphaseHandle_0","Kr","_emscripten_bind_btRigidBody_getBroadphaseProxy_0","Lr","_emscripten_bind_btRigidBody_getCenterOfMassTransform_0","Mr","_emscripten_bind_btRigidBody_getCollisionFlags_0","Nr","_emscripten_bind_btRigidBody_getCollisionShape_0","Or","_emscripten_bind_btRigidBody_getFlags_0","Pr","_emscripten_bind_btRigidBody_getFriction_0","Qr","_emscripten_bind_btRigidBody_getGravity_0","Rr","_emscripten_bind_btRigidBody_getLinearDamping_0","Sr","_emscripten_bind_btRigidBody_getLinearFactor_0","Tr","_emscripten_bind_btRigidBody_getLinearVelocity_0","Ur","_emscripten_bind_btRigidBody_getMotionState_0","Vr","_emscripten_bind_btRigidBody_getRestitution_0","Wr","_emscripten_bind_btRigidBody_getRollingFriction_0","Xr","_emscripten_bind_btRigidBody_getUserIndex_0","Yr","_emscripten_bind_btRigidBody_getUserPointer_0","Zr","_emscripten_bind_btRigidBody_getWorldTransform_0","$r","_emscripten_bind_btRigidBody_isActive_0","as","_emscripten_bind_btRigidBody_isKinematicObject_0","bs","_emscripten_bind_btRigidBody_isStaticObject_0","cs","_emscripten_bind_btRigidBody_isStaticOrKinematicObject_0","ds","_emscripten_bind_btRigidBody_setActivationState_1","es","_emscripten_bind_btRigidBody_setAngularFactor_1","gs","_emscripten_bind_btRigidBody_setAngularVelocity_1","hs","_emscripten_bind_btRigidBody_setAnisotropicFriction_2","is","_emscripten_bind_btRigidBody_setCcdMotionThreshold_1","js","_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1","ks","_emscripten_bind_btRigidBody_setCenterOfMassTransform_1","ls","_emscripten_bind_btRigidBody_setCollisionFlags_1","ms","_emscripten_bind_btRigidBody_setCollisionShape_1","_emscripten_bind_btRigidBody_setContactProcessingThreshold_1","ps","_emscripten_bind_btRigidBody_setDamping_2","qs","_emscripten_bind_btRigidBody_setFlags_1","rs","_emscripten_bind_btRigidBody_setFriction_1","ss","_emscripten_bind_btRigidBody_setGravity_1","ts","_emscripten_bind_btRigidBody_setLinearFactor_1","us","_emscripten_bind_btRigidBody_setLinearVelocity_1","vs","_emscripten_bind_btRigidBody_setMassProps_2","_p","xs","_emscripten_bind_btRigidBody_setMotionState_1","ys","_emscripten_bind_btRigidBody_setRestitution_1","zs","_emscripten_bind_btRigidBody_setRollingFriction_1","As","_emscripten_bind_btRigidBody_setSleepingThresholds_2","Bs","_emscripten_bind_btRigidBody_setUserIndex_1","_emscripten_bind_btRigidBody_setUserPointer_1","Ds","_emscripten_bind_btRigidBody_setWorldTransform_1","Es","_emscripten_bind_btRigidBody_upcast_1","Fs","_emscripten_bind_btRigidBody_updateInertiaTensor_0","Gs","_emscripten_bind_btScalarArray___destroy___0","Hs","_emscripten_bind_btScalarArray_at_1","Is","_emscripten_bind_btScalarArray_size_0","Js","_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0","_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0","_emscripten_bind_btShapeHull___destroy___0","Ms","_emscripten_bind_btShapeHull_btShapeHull_1","Ns","_emscripten_bind_btShapeHull_buildHull_1","Os","_emscripten_bind_btShapeHull_getVertexPointer_0","Ps","_emscripten_bind_btShapeHull_numVertices_0","Qs","_emscripten_bind_btSliderConstraint___destroy___0","Rs","_emscripten_bind_btSliderConstraint_btSliderConstraint_3","Ss","_emscripten_bind_btSliderConstraint_btSliderConstraint_5","Ts","_emscripten_bind_btSliderConstraint_enableFeedback_1","_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0","Vs","_emscripten_bind_btSliderConstraint_getParam_2","Ws","_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1","_emscripten_bind_btSliderConstraint_setLowerAngLimit_1","_emscripten_bind_btSliderConstraint_setLowerLinLimit_1","_emscripten_bind_btSliderConstraint_setParam_3","_emscripten_bind_btSliderConstraint_setUpperAngLimit_1","at","_emscripten_bind_btSliderConstraint_setUpperLinLimit_1","bt","_emscripten_bind_btSphereShape___destroy___0","ct","_emscripten_bind_btSphereShape_btSphereShape_1","_emscripten_bind_btSphereShape_calculateLocalInertia_2","et","_emscripten_bind_btSphereShape_getLocalScaling_0","ft","_emscripten_bind_btSphereShape_getMargin_0","_emscripten_bind_btSphereShape_setLocalScaling_1","ht","_emscripten_bind_btSphereShape_setMargin_1","_emscripten_bind_btStaticPlaneShape___destroy___0","jt","_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2","kt","_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2","lt","_emscripten_bind_btStaticPlaneShape_getLocalScaling_0","mt","_emscripten_bind_btStaticPlaneShape_setLocalScaling_1","nt","_emscripten_bind_btStridingMeshInterface___destroy___0","ot","_emscripten_bind_btStridingMeshInterface_setScaling_1","pt","_emscripten_bind_btTransform___destroy___0","qt","_emscripten_bind_btTransform_btTransform_0","rt","_emscripten_bind_btTransform_btTransform_2","st","_emscripten_bind_btTransform_getBasis_0","tt","_emscripten_bind_btTransform_getOrigin_0","ut","_emscripten_bind_btTransform_getRotation_0","vt","_emscripten_bind_btTransform_inverse_0","wt","_emscripten_bind_btTransform_op_mul_1","xt","_emscripten_bind_btTransform_setFromOpenGLMatrix_1","_q","yt","_emscripten_bind_btTransform_setIdentity_0","zt","_emscripten_bind_btTransform_setOrigin_1","At","_emscripten_bind_btTransform_setRotation_1","Bt","_emscripten_bind_btTriangleMeshShape___destroy___0","Ct","_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2","Dt","_emscripten_bind_btTriangleMeshShape_getLocalScaling_0","Et","_emscripten_bind_btTriangleMeshShape_setLocalScaling_1","Ft","_emscripten_bind_btTriangleMesh___destroy___0","Gt","_emscripten_bind_btTriangleMesh_addIndex_1","Ht","_emscripten_bind_btTriangleMesh_addTriangle_3","It","_emscripten_bind_btTriangleMesh_addTriangle_4","Jt","_emscripten_bind_btTriangleMesh_btTriangleMesh_0","Kt","_emscripten_bind_btTriangleMesh_btTriangleMesh_1","Lt","_emscripten_bind_btTriangleMesh_btTriangleMesh_2","Mt","_emscripten_bind_btTriangleMesh_findOrAddVertex_2","Nt","_emscripten_bind_btTriangleMesh_getIndexedMeshArray_0","Ot","_emscripten_bind_btTriangleMesh_setScaling_1","Pt","_emscripten_bind_btTypedConstraint___destroy___0","Qt","_emscripten_bind_btTypedConstraint_enableFeedback_1","Rt","_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0","St","_emscripten_bind_btTypedConstraint_getParam_2","Tt","_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1","Ut","_emscripten_bind_btTypedConstraint_setParam_3","Vt","_emscripten_bind_btVector3Array___destroy___0","Wt","_emscripten_bind_btVector3Array_at_1","Xt","_emscripten_bind_btVector3Array_size_0","Yt","_emscripten_bind_btVector3___destroy___0","Zt","_emscripten_bind_btVector3_btVector3_0","$t","_emscripten_bind_btVector3_btVector3_3","au","_emscripten_bind_btVector3_dot_1","bu","_emscripten_bind_btVector3_length2_0","cu","_emscripten_bind_btVector3_length_0","du","_emscripten_bind_btVector3_normalize_0","eu","_emscripten_bind_btVector3_op_add_1","fu","_emscripten_bind_btVector3_op_mul_1","gu","_emscripten_bind_btVector3_op_sub_1","hu","_emscripten_bind_btVector3_rotate_2","iu","_emscripten_bind_btVector3_setValue_3","ju","_emscripten_bind_btVector3_setX_1","ku","_emscripten_bind_btVector3_setY_1","lu","_emscripten_bind_btVector3_setZ_1","mu","_emscripten_bind_btVector3_x_0","nu","_emscripten_bind_btVector3_y_0","ou","_emscripten_bind_btVector3_z_0","pu","_emscripten_bind_btVector4___destroy___0","qu","_emscripten_bind_btVector4_btVector4_0","ru","_emscripten_bind_btVector4_btVector4_4","su","_emscripten_bind_btVector4_dot_1","tu","_emscripten_bind_btVector4_length2_0","uu","_emscripten_bind_btVector4_length_0","vu","_emscripten_bind_btVector4_normalize_0","wu","_emscripten_bind_btVector4_op_add_1","xu","_emscripten_bind_btVector4_op_mul_1","yu","_emscripten_bind_btVector4_op_sub_1","_r","zu","_emscripten_bind_btVector4_rotate_2","Au","_emscripten_bind_btVector4_setValue_4","_emscripten_bind_btVector4_setX_1","Cu","_emscripten_bind_btVector4_setY_1","Du","_emscripten_bind_btVector4_setZ_1","Eu","_emscripten_bind_btVector4_w_0","Fu","_emscripten_bind_btVector4_x_0","fs","Gu","_emscripten_bind_btVector4_y_0","Hu","_emscripten_bind_btVector4_z_0","Iu","_emscripten_enum_PHY_ScalarType_PHY_DOUBLE","Ju","_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88","Ku","_emscripten_enum_PHY_ScalarType_PHY_FLOAT","Lu","_emscripten_enum_PHY_ScalarType_PHY_INTEGER","Mu","_emscripten_enum_PHY_ScalarType_PHY_SHORT","Nu","_emscripten_enum_PHY_ScalarType_PHY_UCHAR","Ou","_emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM","os","Pu","_emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP","Qu","_emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM","Ru","_emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP","_free","_malloc","globalCtors","ws","stackRestore","stackSave","Uu","onRuntimeInitialized","postRun","setStatus","UTF8ToString","Tu","preInit","pop","Vu","copy","Wu","Yu","cv","dv","bv","ev","fv","gv","_emscripten_bind_btVector3_btVector3_1","_emscripten_bind_btVector3_btVector3_2","hv","iv","jv","Zu","lv","_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4","mv","nv","ov","pv","qv","rv","av","sv","tv","kv","uv","xv","yv","zv","Bv","Cv","Dv","Ev","Xu","_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3","Fv","Gv","Hv","Iv","Jv","Kv","Lv","Mv","_emscripten_bind_btVector4_btVector4_1","_emscripten_bind_btVector4_btVector4_2","_emscripten_bind_btVector4_btVector4_3","Nv","wv","Ov","Pv","$u","Av","_emscripten_bind_btTransform_btTransform_1","vv","_emscripten_bind_btSliderConstraint_btSliderConstraint_4","_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3","dw","ew","fw","gw","_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4","hw","constructor","WrapperObject","wrapPointer","castObject","NULL","destroy","__destroy__","compare","getPointer","getClass","size","BYTES_PER_ELEMENT","btCollisionShape","setLocalScaling","getLocalScaling","calculateLocalInertia","setMargin","getMargin","btCollisionObject","setAnisotropicFriction","getCollisionShape","setContactProcessingThreshold","setActivationState","forceActivationState","activate","isActive","isKinematicObject","isStaticObject","isStaticOrKinematicObject","getRestitution","getFriction","getRollingFriction","setRestitution","setFriction","setRollingFriction","getWorldTransform","getCollisionFlags","setCollisionFlags","setWorldTransform","setCollisionShape","setCcdMotionThreshold","setCcdSweptSphereRadius","getUserIndex","setUserIndex","getUserPointer","setUserPointer","getBroadphaseHandle","btTypedConstraint","enableFeedback","getBreakingImpulseThreshold","setBreakingImpulseThreshold","getParam","setParam","btCollisionWorld","getDispatcher","rayTest","getPairCache","getDispatchInfo","addCollisionObject","removeCollisionObject","getBroadphase","convexSweepTest","contactPairTest","contactTest","setForceUpdateAllAabbs","updateSingleAabb","setDebugDrawer","getDebugDrawer","debugDrawWorld","debugDrawObject","btConcaveShape","btCapsuleShape","getUpAxis","getRadius","getHalfHeight","btIDebugDraw","btDynamicsWorld","addAction","removeAction","getSolverInfo","btTriangleMeshShape","btGhostObject","getNumOverlappingObjects","getOverlappingObject","btConeShape","btActionInterface","updateAction","btVector3","length2","setX","setY","setZ","setValue","rotate","dot","op_mul","op_add","op_sub","btQuadWord","setW","btCylinderShape","btConvexShape","btDispatcher","getNumManifolds","getManifoldByIndexInternal","btGeneric6DofConstraint","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","getFrameOffsetA","btStridingMeshInterface","setScaling","btMotionState","ConvexResultCallback","hasHit","get_m_collisionFilterGroup","set_m_collisionFilterGroup","get_m_collisionFilterMask","set_m_collisionFilterMask","get_m_closestHitFraction","set_m_closestHitFraction","ContactResultCallback","RayResultCallback","get_m_collisionObject","set_m_collisionObject","btMatrix3x3","setEulerZYX","getRotation","getRow","btScalarArray","btDispatcherInfo","get_m_timeStep","set_m_timeStep","get_m_stepCount","set_m_stepCount","get_m_dispatchFunc","set_m_dispatchFunc","get_m_timeOfImpact","set_m_timeOfImpact","get_m_useContinuous","set_m_useContinuous","get_m_enableSatConvex","set_m_enableSatConvex","get_m_enableSPU","set_m_enableSPU","get_m_useEpa","set_m_useEpa","get_m_allowedCcdPenetration","set_m_allowedCcdPenetration","get_m_useConvexConservativeDistanceUtil","set_m_useConvexConservativeDistanceUtil","get_m_convexConservativeDistanceThreshold","set_m_convexConservativeDistanceThreshold","btConvexTriangleMeshShape","btBroadphaseInterface","getOverlappingPairCache","btDefaultCollisionConfiguration","btRigidBodyConstructionInfo","get_m_linearDamping","set_m_linearDamping","get_m_angularDamping","set_m_angularDamping","get_m_friction","set_m_friction","get_m_rollingFriction","set_m_rollingFriction","get_m_restitution","set_m_restitution","get_m_linearSleepingThreshold","set_m_linearSleepingThreshold","get_m_angularSleepingThreshold","set_m_angularSleepingThreshold","get_m_additionalDamping","set_m_additionalDamping","get_m_additionalDampingFactor","set_m_additionalDampingFactor","get_m_additionalLinearDampingThresholdSqr","set_m_additionalLinearDampingThresholdSqr","get_m_additionalAngularDampingThresholdSqr","set_m_additionalAngularDampingThresholdSqr","get_m_additionalAngularDampingFactor","set_m_additionalAngularDampingFactor","btCollisionConfiguration","btPersistentManifold","getBody0","getBody1","getNumContacts","getContactPoint","btCompoundShape","addChildShape","removeChildShape","removeChildShapeByIndex","getNumChildShapes","getChildShape","updateChildTransform","ClosestConvexResultCallback","get_m_convexFromWorld","set_m_convexFromWorld","get_m_convexToWorld","set_m_convexToWorld","get_m_hitNormalWorld","set_m_hitNormalWorld","get_m_hitPointWorld","set_m_hitPointWorld","AllHitsRayResultCallback","get_m_collisionObjects","set_m_collisionObjects","get_m_rayFromWorld","set_m_rayFromWorld","get_m_rayToWorld","set_m_rayToWorld","get_m_hitFractions","set_m_hitFractions","Compute","GetNConvexHulls","GetConvexHull","Cancel","Clean","Release","btEmptyShape","btConstraintSetting","get_m_tau","set_m_tau","get_m_damping","set_m_damping","get_m_impulseClamp","set_m_impulseClamp","LocalShapeInfo","get_m_shapePart","set_m_shapePart","get_m_triangleIndex","set_m_triangleIndex","btRigidBody","getCenterOfMassTransform","setCenterOfMassTransform","setSleepingThresholds","getLinearDamping","getAngularDamping","setDamping","setMassProps","getLinearFactor","setLinearFactor","applyTorque","applyLocalTorque","applyForce","applyCentralForce","applyCentralLocalForce","applyTorqueImpulse","applyImpulse","applyCentralImpulse","updateInertiaTensor","getLinearVelocity","getAngularVelocity","setLinearVelocity","setAngularVelocity","getMotionState","setMotionState","getAngularFactor","setAngularFactor","upcast","getAabb","applyGravity","getGravity","setGravity","getBroadphaseProxy","getFlags","setFlags","btIndexedMeshArray","btDbvtBroadphase","btHeightfieldTerrainShape","Parameters","get_m_concavity","set_m_concavity","get_m_alpha","set_m_alpha","get_m_beta","set_m_beta","get_m_gamma","set_m_gamma","get_m_minVolumePerCH","set_m_minVolumePerCH","get_m_resolution","set_m_resolution","get_m_maxNumVerticesPerCH","set_m_maxNumVerticesPerCH","get_m_depth","set_m_depth","get_m_planeDownsampling","set_m_planeDownsampling","get_m_convexhullDownsampling","set_m_convexhullDownsampling","get_m_pca","set_m_pca","get_m_mode","set_m_mode","get_m_convexhullApproximation","set_m_convexhullApproximation","get_m_oclAcceleration","set_m_oclAcceleration","btCollisionDispatcher","btAxisSweep3","SetCompacityWeight","SetVolumeWeight","SetConcavity","SetNClusters","SetNVerticesPerCH","SetPoints","SetNPoints","SetTriangles","SetNTriangles","GetNClusters","GetNPointsCH","GetNTrianglesCH","GetCH","VoidPtr","btConeTwistConstraint","setLimit","setAngularOnly","enableMotor","setMaxMotorImpulse","setMaxMotorImpulseNormalized","setMotorTarget","setMotorTargetInConstraintSpace","btHingeConstraint","enableAngularMotor","btConeShapeZ","btConeShapeX","btTriangleMesh","addTriangle","findOrAddVertex","addIndex","getIndexedMeshArray","btConvexHullShape","addPoint","getNumVertices","initializePolyhedralFeatures","recalcLocalAabb","getConvexPolyhedron","btCollisionObjectWrapper","getCollisionObject","btShapeHull","buildHull","numVertices","getVertexPointer","btDefaultMotionState","get_m_graphicsWorldTrans","set_m_graphicsWorldTrans","btVector4","btDefaultCollisionConstructionInfo","btVector3Array","btConstraintSolver","btCylinderShapeX","btCylinderShapeZ","btConvexPolyhedron","get_m_vertices","set_m_vertices","get_m_faces","set_m_faces","btSequentialImpulseConstraintSolver","btMultiSphereShape","btIntArray","btDiscreteDynamicsWorld","addRigidBody","_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2","removeRigidBody","addConstraint","removeConstraint","stepSimulation","setContactAddedCallback","setContactProcessedCallback","setContactDestroyedCallback","btGhostPairCallback","btOverlappingPairCallback","btKinematicCharacterController","setUpAxis","setWalkDirection","setVelocityForTimeInterval","warp","preStep","playerStep","setFallSpeed","setJumpSpeed","setMaxJumpHeight","canJump","jump","setMaxSlope","getMaxSlope","getGhostObject","setUseGhostSweepTest","onGround","setUpInterpolate","btFaceArray","btStaticPlaneShape","btOverlappingPairCache","setInternalGhostPairCallback","removeOverlappingPairsContainingProxy","getNumOverlappingPairs","btIndexedMesh","get_m_numTriangles","set_m_numTriangles","Vec3Real","btFixedConstraint","btTransform","setIdentity","setOrigin","setRotation","getOrigin","getBasis","setFromOpenGLMatrix","inverse","ClosestRayResultCallback","btBvhTriangleMeshShape","Vec3Long","btConstCollisionObjectArray","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","btPairCachingGhostObject","btManifoldPoint","getPositionWorldOnA","getPositionWorldOnB","getAppliedImpulse","getDistance","get_m_localPointA","set_m_localPointA","get_m_localPointB","set_m_localPointB","get_m_positionWorldOnB","set_m_positionWorldOnB","get_m_positionWorldOnA","set_m_positionWorldOnA","get_m_normalWorldOnB","set_m_normalWorldOnB","get_m_userPersistentData","set_m_userPersistentData","btPoint2PointConstraint","setPivotA","setPivotB","getPivotInA","getPivotInB","get_m_setting","set_m_setting","btBroadphaseProxy","btBoxShape","btFace","get_m_indices","set_m_indices","get_m_plane","set_m_plane","btCapsuleShapeX","btQuaternion","normalized","getAxis","getAngle","getAngleShortestPath","angle","angleShortestPath","op_mulq","op_div","btCapsuleShapeZ","btContactSolverInfo","get_m_splitImpulse","set_m_splitImpulse","get_m_splitImpulsePenetrationThreshold","set_m_splitImpulsePenetrationThreshold","get_m_numIterations","set_m_numIterations","btGeneric6DofSpringConstraint","enableSpring","setStiffness","setEquilibriumPoint","btSphereShape","ConvexHull","get_m_points","get_m_triangles","get_m_nPoints","get_m_nTriangles","LocalConvexResult","get_m_hitCollisionObject","set_m_hitCollisionObject","get_m_localShapeInfo","set_m_localShapeInfo","get_m_hitNormalLocal","set_m_hitNormalLocal","get_m_hitPointLocal","set_m_hitPointLocal","get_m_hitFraction","set_m_hitFraction","BT_CONSTRAINT_ERP","BT_CONSTRAINT_STOP_ERP","BT_CONSTRAINT_CFM","BT_CONSTRAINT_STOP_CFM","PHY_FLOAT","PHY_DOUBLE","PHY_INTEGER","PHY_SHORT","PHY_FIXEDPOINT88","PHY_UCHAR","normalizeArray","parts","allowAboveRoot","last","splitPathRe","splitPath","filename","exec","filter","res","resolve","resolvedPath","resolvedAbsolute","path","TypeError","charAt","join","isAbsolute","trailingSlash","paths","index","relative","from","trim","arr","start","end","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","result","root","basename","ext","extname","str","EventDispatcher","Number","EPSILON","pow","isInteger","isFinite","floor","sign","Function","match","assign","target","output","source","nextKey","addEventListener","type","listener","_listeners","hasEventListener","removeEventListener","listenerArray","dispatchEvent","event","v1","quaternion","_canvas","REVISION","CullFaceNone","CullFaceBack","CullFaceFront","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopRepeat","ZeroCurvatureEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","toUpperCase","clamp","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","LN2","floorPowerOfTwo","Vector2","Quaternion","_x","_y","_z","_w","Vector3","Matrix3","elements","defineProperties","width","height","isVector2","setScalar","scalar","setComponent","getComponent","clone","add","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","cross","lengthSq","sqrt","manhattanLength","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","slerp","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","tDir","onChangeCallback","isQuaternion","setFromEuler","euler","update","isEuler","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","angleTo","acos","rotateTowards","step","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","theta","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","getZ","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","setFromMatrix4","applyToBufferAttribute","count","setXYZ","multiplyMatrices","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","getInverse","matrix","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotation","cx","cy","scale","translate","points","closestPoint","box","sphere","zero","one","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","uuid","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLMultisampleRenderTarget","samples","WebGLRenderTargetCube","DataTexture","data","Box3","Sphere","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","Matrix4","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","isArray","dispose","transformUv","isVector4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","xx","yy","zz","xy","xz","yz","getW","isWebGLRenderTarget","setSize","isWebGLMultisampleRenderTarget","isWebGLRenderTargetCube","fromEquirectangularTexture","renderer","scene","THREE","Scene","shader","uniforms","tEquirect","vertexShader","fragmentShader","material","ShaderMaterial","UniformsUtils","side","blending","mesh","Mesh","BoxBufferGeometry","CubeCamera","renderTarget","geometry","isDataTexture","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","setFromObject","expandByObject","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","isGeometry","vertices","isBufferGeometry","attributes","position","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","clampPoint","intersectsPlane","plane","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","triangle","distanceToPoint","getBoundingSphere","intersect","union","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","makeRotationFromQuaternion","compose","lookAt","eye","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","x2","y2","z2","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_physical_pars_fragment","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","cloneUniforms","isColor","mergeUniforms","merged","hslA","hslB","hsl","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","color","components","parseInt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","UniformsLib","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","lightProbe","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","matcap","dashed","dashSize","totalSize","depth","background","t2D","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","buffers","WeakMap","isInterleavedBufferAttribute","remove","deleteBuffer","delete","bufferType","usage","dynamic","createBuffer","bindBuffer","bufferData","onUploadCallback","bytesPerElement","updateRange","bufferSubData","updateBuffer","Face3","materialIndex","vertexNormals","vertexColors","Euler","_order","DefaultOrder","Layers","mask","physical","clearCoat","clearCoatRoughness","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","enable","toggle","disable","test","layers","q1","object3DId","Object3D","parent","children","DefaultUp","configurable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","updateWorldMatrix","isCamera","isLight","attach","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","serialize","library","JSON","stringify","isMesh","drawMode","isLine","isPoints","parameters","shape","uuids","extractFromCache","cache","values","recursive","parse","child","obj","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","_array","_itemSize","_normalized","versionVAO","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","normals","uvs","uvs2","groups","arrayMax","face","computeBoundingBox","fromBufferGeometry","indices","positions","uv2","addFace","group","computeFaceNormals","vA","vB","vC","computeVertexNormals","areaWeighted","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","unique","changes","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","sort","newUvs1","newUvs2","vertex","normalsHash","colorsHash","uvsHash","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","needsUpdate","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","getIndex","getAttribute","removeAttribute","clearGroups","setDrawRange","tangent","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","isNaN","boxMorphTargets","pA","pB","pC","normalizeNormals","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","keys","attributeData","hasMorphAttributes","attributeArray","materialId","Material","flatShading","vertexTangents","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","combine","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","segCenter","segDir","barycoord","vab","vac","vbc","vap","vbp","vcp","default_vertex","default_fragment","defines","uniformsGroups","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","Ray","origin","Triangle","MeshBasicMaterial","updateMorphTargets","WebGLBackground","state","objects","planeMesh","boxMesh","clearColor","clearAlpha","currentBackground","currentBackgroundVersion","setClear","getClearColor","setClearColor","getClearAlpha","setClearAlpha","render","renderList","forceClear","session","getSession","environmentBlendMode","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","WebGLBindingStates","capabilities","maxVertexAttributes","extension","isWebGL2","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","bindVertexArrayObject","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","newAttributes","enabledAttributes","attributeDivisors","program","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","reset","resetDefaultState","setup","updateBuffers","programMap","stateMap","createVertexArray","createVertexArrayOES","getBindingState","cachedAttributes","geometryAttributes","cachedAttribute","geometryAttribute","saveCache","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","stride","isInstancedInterleavedBuffer","maxInstancedCount","vertexAttribPointer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","setupVertexAttributes","programId","releaseStatesOfGeometry","releaseStatesOfProgram","WebGLBufferRenderer","info","setMode","drawArrays","renderInstances","WebGLCapabilities","maxAnisotropy","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","floatVertexTextures","maxSamples","multiview","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","i4","init","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","programs","autoReset","instanceCount","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphInfluences","workInfluences","objectInfluences","morphTargetInfluences","influences","influence","MAX_SAFE_INTEGER","getUniforms","WebGLObjects","updateList","CubeTexture","DataTexture2DArray","wrapR","DataTexture3D","isShaderMaterial","cloneUniformsGroups","ray","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getUV","uv1","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","d5","d6","isMeshBasicMaterial","setDrawMode","morphTargetDictionary","inverseMatrix","tempA","tempB","tempC","morphA","morphB","morphC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","checkIntersection","raycaster","checkBufferGeometryIntersection","morphPosition","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","uvs_f","isDataTexture2DArray","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","SingleUniform","activeInfo","getSingularSetter","PureArrayUniform","getPureArraySetter","StructuredUniform","seq","updateCache","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","WebGLShader","createShader","shaderSource","compileShader","setOptional","upload","seqWithValue","programIdCount","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","addLineNumbers","getShaderSource","getTexelDecodingFunction","functionName","getToneMappingFunction","toneMapping","toneMappingName","filterEmptyLine","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","rendererExtensions","envMapCubeUV","objectSpaceNormalMap","generateExtensions","customDefines","chunks","generateDefines","createProgram","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","v300es","cachedUniforms","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","getActiveAttrib","getAttribLocation","fetchAttributeLocations","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","bones","skeleton","nVertexUniforms","nVertexMatrices","allocateBones","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","programInfo","releaseProgram","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","WebGLRenderLists","lists","onSceneDispose","list","cameras","UniformsCache","light","halfWidth","halfHeight","nextVersion","WebGLLights","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","probe","vector3","matrix42","intensity","isAmbientLight","isLightProbe","coefficients","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","setupLights","pushLight","pushShadow","shadowLight","WebGLRenderStates","renderStates","renderState","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","0","1","2","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","getDepthMaterial","lightPositionWorld","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","isMeshDistanceMaterial","renderObject","shadowCamera","renderBufferDirect","autoUpdate","faceCount","activeCubeFace","getActiveCubeFace","activeMipMapLevel","getActiveMipMapLevel","_state","setBlending","setTest","setScissorTest","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","WebGLState","utils","colorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","uboBindings","uboProgamMap","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","blendEquationSeparate","convert","blendFuncSeparate","blendFunc","setFlipSided","frontFace","setCullFace","cullFace","setPolygonOffset","factor","activeTexture","webglSlot","getCompressedTextureFormats","formats","useProgram","setMaterial","frontFaceCW","setLineWidth","lineWidth","webglType","webglTexture","boundTexture","compressedTexImage2D","texImage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","WebGLTextures","_gl","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","textureProperties","__webglInit","deleteTexture","__webglTexture","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","deallocateRenderTarget","textureUnits","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","glInternalFormat","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","textureNeedsPowerOfTwo","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthRenderbuffer","isCube","webglDepthTexture","setupDepthTexture","createRenderbuffer","warnedTexture2D","warnedTextureCube","textureUnit","resetTextureUnits","setupRenderTarget","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","WebGLUniformsGroups","allocatedBindingPoints","maxBindingPoints","hasUniformChanged","cachedObject","getUniformSize","boundary","storage","onUniformsGroupsDispose","isRawUniformsGroup","chunkOffset","__data","__offset","remainingSizeInChunk","__size","__cache","prepareUniformsGroup","bindingPointIndex","allocateBindingPointIndex","bindBufferBase","updateBufferData","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","Group","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","ArrayCamera","isMeshDepthMaterial","isGroup","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isArrayCamera","matrixPosition","offsetMatrix","identityMatrix","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","renderWidth","renderHeight","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","referenceSpaceType","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraVR","multiviewAvailability","isPresenting","currentPixelRatio","currentSize","eyeParameters","getEyeParameters","getPixelRatio","setDrawingBufferSize","getViews","views","checkMultiviewAvailability","setFramebuffer","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","updateViewportFromBounds","bounds","getController","controller","getDevice","setDevice","setFramebufferScaleFactor","setReferenceSpaceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","pose","poseObject","orientation","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","hasPosition","buttonId","buttons","pressed","updateControllers","getStandingMatrix","submitFrame","setFrameOfReferenceType","WebXRManager","referenceSpace","inputSources","onSessionEvent","inputSource","onSessionEnd","onRequestReferenceSpace","updateCamera","setSession","updateRenderState","baseLayer","XRWebGLLayer","requestReferenceSpace","getCameraPose","onAnimationFrameCallback","getViewerPose","getViewport","transform","inputPose","getPose","targetRaySpace","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","_forceWebVR","forceWebVR","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","videoTextures","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","xrCompatible","onContextLost","onContextRestore","rangeMin","rangeMax","message","initGLContext","inProgress","preventDefault","onMaterialDispose","releaseMaterialProgramReference","deallocateMaterial","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compileAndUploadMaterials","compile","initMaterial","renderObjects","overrideMaterial","camera2","isImmediateRenderObject","renderObjectImmediate","materialProperties","lightsStateVersion","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","isMeshPhongMaterial","isMeshStandardMaterial","cameraPosition","cameraPosition2","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","isFog","density","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsPhong","refreshUniformsToon","isMeshPhysicalMaterial","refreshUniformsStandard","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","webglProgram","uvScaleMap","projectObject","preuploadVideos","opaqueObjects","transparentObjects","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","InterleavedBuffer","_stride","InterleavedBufferAttribute","interleavedBuffer","_data","_offset","Sprite","LOD","levels","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","Skeleton","boneInverses","calculateInverses","Bone","linecap","linejoin","Line","LineSegments","LineLoop","Points","VideoTexture","video","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","rows","pushVertex","getVertexByIndex","correctUV","azimuth","inclination","subdivide","appplyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateSegment","getPointAt","generateIndices","generateBufferData","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","quOverP","TorusGeometry","arc","TorusBufferGeometry","isScene","isInterleavedBuffer","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","_camera","isLOD","addLevel","getObjectForDistance","normalizeSkinWeights","skinWeight","bone","isBone","getBoneByName","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","nbVertices","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","readyState","HAVE_CURRENT_DATA","isCanvasTexture","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","steiner","getLeftmost","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","sum","signedArea","insertNode","removeNode","again","three_module_area","prev","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","locallyInside","isValidDiagonal","splitPolygon","hole","hx","hy","mx","my","tanMin","findHoleBridge","leftmost","px","py","intersectsPolygon","inside","middleInside","q2","Node","ShapeUtils","area","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","splineTube","binormal","position2","ahole","extrudeByPath","getSpacedPoints","shapePoints","extractPoints","reverse","scalePt2","vec","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","sidewalls","layeroffset","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","buildLidFaces","buildSideFaces","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","shapeHole","indexOffset","shapeVertices","shapeHoles","toJSON$1","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","STANDARD","PHYSICAL","TOON","MATCAP","Materials","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","parseKeyframeTrack","json","trackType","typeName","toLowerCase","getTrackTypeForValueTypeName","evaluate","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","track","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","DefaultLoadingManager","loading","FileLoader","manager","DataTextureLoader","_parser","ImageLoader","CubeTextureLoader","TextureLoader","Curve","arcLengthDivisions","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","ArcCurve","aRadius","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","t2","calc","load","cached","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","Blob","parser","DOMParser","parseFromString","request","header","callbacks","withCredentials","overrideMimeType","requestHeader","setRequestHeader","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","onImageLoad","onImageError","setCrossOrigin","urls","isJPEG","search","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","getTangent","pt1","getTangentAt","mat","MAX_VALUE","tz","fromJSON","isEllipseCurve","twoPi","deltaAngle","samePoints","isArcCurve","pz","CatmullRomCurve3","curveType","CatmullRom","QuadraticBezier","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","v3","CubicBezierCurve3","LineCurve","LineCurve3","QuadraticBezierCurve","QuadraticBezierCurve3","SplineCurve","isCatmullRomCurve3","intPoint","weight","isCubicBezierCurve","isCubicBezierCurve3","isLineCurve","isLineCurve3","isQuadraticBezierCurve","isQuadraticBezierCurve3","isSplineCurve","Curves","CurvePath","curves","autoClose","Path","currentPoint","Shape","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","OrthographicCamera","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","MaterialLoader","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","segmentLength","lens","cacheLengths","sums","resolution","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","getTexture","shading","setTextures","LoaderUtils","InstancedBufferGeometry","InstancedBufferAttribute","_meshPerAttribute","BufferGeometryLoader","typedArray","TYPED_ARRAYS","bufferAttribute","drawcalls","offsets","ObjectLoader","resourcePath","setResourcePath","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","LegacyJSONLoader","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","BlendingMode","textureLoader","materialLoader","UVMapping","ImageBitmapLoader","createImageBitmap","ShapePath","subPaths","currentPath","Font","createPath","char","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","Loader","setOptions","blob","imageBitmap","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","hole_unassigned","s2Idx","froms","tos","chars","line_height","yMax","yMin","underlineThickness","ret","createPaths","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","AudioContext","webkitAudioContext","AudioLoader","SphericalHarmonics3","LightProbe","HemisphereLightProbe","sky","ground","AmbientLightProbe","bufferCopy","decodeAudioData","audioBuffer","isSphericalHarmonics3","getAt","coeff","getIrradianceAt","getBasisAt","shBasis","isHemisphereLightProbe","isAmbientLightProbe","eyeSep","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","Clock","autoStart","oldTime","elapsedTime","running","AudioListener","gain","createGain","connect","destination","timeDelta","Audio","getInput","autoplay","detune","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","panningModel","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","getElapsedTime","getDelta","newTime","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","clock","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","reservedRe","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_root","_initMemoryManager","_accuIndex","Uniform","firstValidIndex","nCachedObjects_","bindings","unbind","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","startP","startEnd","lineGeometry","coneGeometry","UniformsGroup","RawUniformsGroup","InstancedInterleavedBuffer","ascSort","intersectObject","Box2","Line3","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","boneList","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","LightProbeHelper","GAMMA_OUTPUT","GridHelper","PolarGridHelper","radials","circles","PositionalAudioHelper","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","BoxHelper","Box3Helper","PlaneHelper","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","isUniformsGroup","setName","uniformsSource","_uniform","PointCloud","setFromCamera","coords","intersectObjects","other","makeSafe","setFromCartesianCoords","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","halfConeInnerAngle","halfConeOuterAngle","setPoint","setColor","Spline","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","extractUrlBase","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","DefaultBufferSize","AmmoDebugConstants","AmmoDebugDrawer","colorsArray","world","debugDrawMode","Atomics","store","debugDrawer","heap","fromX","fromY","fromZ","toX","toY","toZ","pointOnB","normalOnB","lifeTime","warningString","warnedOnce","textString","debugMode","World","worldConfig","collisionConfiguration","dispatcher","broadphase","solver","physicsWorld","object3Ds","Map","collisions","collisionKeys","epsilon","maxSubSteps","fixedTimeStep","gravity","constants_default","solverIterations","isDebugEnabled","addBody","body","object3D","removeBody","bodyptr","updateBody","has","numManifolds","persistentManifold","numContacts","body0ptr","body1ptr","debugIndexArray","debugMatricesArray","debugColorsArray","src_world","ACTIVATION_STATES","RIGID_BODY_FLAGS","almostEqualsVector3","almostEqualsBtVector3","Body","bodyConfig","loadedEvent","mass","worldGravity","linearDamping","angularDamping","linearSleepingThreshold","angularSleepingThreshold","angularFactor","activationState","emitCollisionEvents","disableCollision","collisionFilterGroup","collisionFilterMask","scaleAutoUpdate","_initBody","pos","quat","localScaling","prevScale","prevNumChildShapes","msTransform","motionState","localInertia","compoundShape","rbInfo","physicsBody","updateCollisionFlags","updateShapes","needsPolyhedralInitialization","updated","shapesChanged","updateMass","polyHedralFeaturesInitialized","collisionShape","broadphaseProxy","triMesh","syncToPhysics","almostEqualsQuaternion","syncFromPhysics","localTransform","removeShape","getVelocity","CONSTRAINTS","Constraint","constraintConfig","targetBody","physicsConstraint","bodyTransform","targetTransform","pivot","targetPivot","targetAxis","pivotTransform","src_constraint","three_to_ammo_TYPE","three_to_ammo_FIT","createCollisionShapes","matrices","indexes","createBoxShape","createCylinderShape","createCapsuleShape","createConeShape","createSphereShape","createHullShape","createHACDShapes","createVHACDShapes","createTriMeshShape","createHeightfieldTerrainShape","_setOptions","fit","halfExtents","_computeHalfExtents","_computeBounds","minHalfExtent","maxHalfExtent","btHalfExtents","_finishCollisionShape","_computeScale","cylinderAxis","sphereRadius","_computeRadius","btVertex","originalHull","margin","vertexCount","maxVertices","hullMaxVertices","isLastVertex","shapeHull","triCount","hacd","compacityWeight","volumeWeight","nClusters","nVerticesPerCH","concavity","pptr","tptr","hull","nPoints","nTriangles","hullPoints","hullTriangles","vhacd","planeDownsampling","convexhullDownsampling","beta","gamma","pca","maxNumVerticesPerCH","minVolumePerCH","convexhullApproximation","oclAcceleration","nHulls","bta","btb","btc","localScale","resources","heightfieldDistance","heightfieldData","upAxis","hdt","heightDataType","flipQuadEdges","heightStickLength","heightStickWidth","ptr","minHeight","POSITIVE_INFINITY","maxHeight","NEGATIVE_INFINITY","includeInvisible","cz","_iterateVertices","ammo_worker_TYPE","ammo_worker_SHAPE","ammo_worker_CONSTRAINT","bodies","constraints","ammo_worker_matrices","ammo_worker_indexes","ptrToIndex","messageQueue","stepDuration","freeIndex","freeIndexArray","ammo_worker_world","headerIntArray","headerFloatArray","objectMatricesFloatArray","objectMatricesIntArray","lastTick","usingSharedArrayBuffer","tick","addShapes","resetDynamicBody","activateBody","collidingPtr","postMessage","nextFreeIndex","IDENTITY_MATRIX","bodyUuid","shapesUuid","physicsShapes","constraintId","targetUuid","constraint","onmessage","async","wasmUrl","ammo_wasm_default","endsWith","URL","builds_ammo_wasm_default","initializeWasm","AmmoModule","sharedArrayBuffer","initSharedArrayBuffer","initTransferrables","setInterval","debugSharedArrayBuffer","debugVerticesArray","initDebug"],"mappings":"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","file":"assets/js/ammo.worker-b4780f81b896e6c217c0.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = {\n  GRAVITY: -9.8,\n  MAX_INTERVAL: 4 / 60,\n  ITERATIONS: 10,\n  ACTIVATION_STATE: {\n    ACTIVE_TAG: \"active\",\n    ISLAND_SLEEPING: \"islandSleeping\",\n    WANTS_DEACTIVATION: \"wantsDeactivation\",\n    DISABLE_DEACTIVATION: \"disableDeactivation\",\n    DISABLE_SIMULATION: \"disableSimulation\"\n  },\n  COLLISION_FLAG: {\n    STATIC_OBJECT: 1,\n    KINEMATIC_OBJECT: 2,\n    NO_CONTACT_RESPONSE: 4,\n    CUSTOM_MATERIAL_CALLBACK: 8, //this allows per-triangle material (friction/restitution)\n    CHARACTER_OBJECT: 16,\n    DISABLE_VISUALIZE_OBJECT: 32, //disable debug drawing\n    DISABLE_SPU_COLLISION_PROCESSING: 64 //disable parallel/SPU processing\n  },\n  TYPE: {\n    STATIC: \"static\",\n    DYNAMIC: \"dynamic\",\n    KINEMATIC: \"kinematic\"\n  },\n  SHAPE: {\n    BOX: \"box\",\n    CYLINDER: \"cylinder\",\n    SPHERE: \"sphere\",\n    CAPSULE: \"capsule\",\n    CONE: \"cone\",\n    HULL: \"hull\",\n    HACD: \"hacd\",\n    VHACD: \"vhacd\",\n    MESH: \"mesh\",\n    HEIGHTFIELD: \"heightfield\"\n  },\n  FIT: {\n    ALL: \"all\",\n    MANUAL: \"manual\"\n  },\n  CONSTRAINT: {\n    LOCK: \"lock\",\n    FIXED: \"fixed\",\n    SPRING: \"spring\",\n    SLIDER: \"slider\",\n    HINGE: \"hinge\",\n    CONE_TWIST: \"coneTwist\",\n    POINT_TO_POINT: \"pointToPoint\"\n  },\n  MESSAGE_TYPES: {\n    INIT: 0,\n    READY: 1,\n    ADD_BODY: 2,\n    BODY_READY: 3,\n    UPDATE_BODY: 4,\n    REMOVE_BODY: 5,\n    ADD_SHAPES: 6,\n    REMOVE_SHAPES: 7,\n    ADD_CONSTRAINT: 8,\n    REMOVE_CONSTRAINT: 9,\n    ENABLE_DEBUG: 10,\n    RESET_DYNAMIC_BODY: 11,\n    ACTIVATE_BODY: 12,\n    TRANSFER_DATA: 13\n  },\n  BUFFER_CONFIG: {\n    HEADER_LENGTH: 2,\n    MAX_BODIES: 10000,\n    MATRIX_OFFSET: 0,\n    LINEAR_VELOCITY_OFFSET: 16,\n    ANGULAR_VELOCITY_OFFSET: 17,\n    COLLISIONS_OFFSET: 18,\n    BODY_DATA_SIZE: 26\n  },\n  BUFFER_STATE: {\n    UNINITIALIZED: 0,\n    READY: 1,\n    CONSUMED: 2\n  }\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\n  // This is ammo.js, a port of Bullet Physics to JavaScript. zlib licensed.\n  \nvar Ammo = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(Ammo) {\n  Ammo = Ammo || {};\n\nvar b;var g;g||(g=typeof Ammo !== 'undefined' ? Ammo : {});var aa={},ca;for(ca in g)g.hasOwnProperty(ca)&&(aa[ca]=g[ca]);var da=!1,ea=!1,fa=!1,ha=!1,ia=!1;da=\"object\"===typeof window;ea=\"function\"===typeof importScripts;fa=(ha=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node)&&!da&&!ea;ia=!da&&!fa&&!ea;var ja=\"\",ka,la,ma,na;\nif(fa)ja=__dirname+\"/\",ka=function(a,c){ma||(ma=require(\"fs\"));na||(na=require(\"path\"));a=na.normalize(a);return ma.readFileSync(a,c?null:\"utf8\")},la=function(a){a=ka(a,!0);a.buffer||(a=new Uint8Array(a));assert(a.buffer);return a},1<process.argv.length&&process.argv[1].replace(/\\\\/g,\"/\"),process.argv.slice(2),process.on(\"uncaughtException\",function(a){throw a;}),process.on(\"unhandledRejection\",oa),g.inspect=function(){return\"[Emscripten Module object]\"};else if(ia)\"undefined\"!=typeof read&&(ka=function(a){return read(a)}),\nla=function(a){if(\"function\"===typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,\"binary\");assert(\"object\"===typeof a);return a},\"undefined\"!==typeof print&&(\"undefined\"===typeof console&&(console={}),console.log=print,console.warn=console.error=\"undefined\"!==typeof printErr?printErr:print);else if(da||ea)ea?ja=self.location.href:document.currentScript&&(ja=document.currentScript.src),_scriptDir&&(ja=_scriptDir),ja=0!==ja.indexOf(\"blob:\")?ja.substr(0,ja.lastIndexOf(\"/\")+1):\"\",ka=function(a){var c=\nnew XMLHttpRequest;c.open(\"GET\",a,!1);c.send(null);return c.responseText},ea&&(la=function(a){var c=new XMLHttpRequest;c.open(\"GET\",a,!1);c.responseType=\"arraybuffer\";c.send(null);return new Uint8Array(c.response)});var pa=g.print||console.log.bind(console),qa=g.printErr||console.warn.bind(console);for(ca in aa)aa.hasOwnProperty(ca)&&(g[ca]=aa[ca]);aa=null;var ra={\"f64-rem\":function(a,c){return a%c},\"debugger\":function(){}},sa;g.wasmBinary&&(sa=g.wasmBinary);\"object\"!==typeof WebAssembly&&qa(\"no native wasm support detected\");\nvar ta,ua=new WebAssembly.Table({initial:1832,maximum:1832,element:\"anyfunc\"}),wa=!1;function assert(a,c){a||oa(\"Assertion failed: \"+c)}var xa=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ya(a,c,d){var e=c+d;for(d=c;a[d]&&!(d>=e);)++d;if(16<d-c&&a.subarray&&xa)return xa.decode(a.subarray(c,d));for(e=\"\";c<d;){var f=a[c++];if(f&128){var n=a[c++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|n);else{var r=a[c++]&63;f=224==(f&240)?(f&15)<<12|n<<6|r:(f&7)<<18|n<<12|r<<6|a[c++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else e+=String.fromCharCode(f)}return e}function za(a,c){return a?ya(Aa,a,c):\"\"}\nfunction Ba(a,c,d,e){if(!(0<e))return 0;var f=d;e=d+e-1;for(var n=0;n<a.length;++n){var r=a.charCodeAt(n);if(55296<=r&&57343>=r){var N=a.charCodeAt(++n);r=65536+((r&1023)<<10)|N&1023}if(127>=r){if(d>=e)break;c[d++]=r}else{if(2047>=r){if(d+1>=e)break;c[d++]=192|r>>6}else{if(65535>=r){if(d+2>=e)break;c[d++]=224|r>>12}else{if(d+3>=e)break;c[d++]=240|r>>18;c[d++]=128|r>>12&63}c[d++]=128|r>>6&63}c[d++]=128|r&63}}c[d]=0;return d-f}\nfunction Ca(a){for(var c=0,d=0;d<a.length;++d){var e=a.charCodeAt(d);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++d)&1023);127>=e?++c:c=2047>=e?c+2:65535>=e?c+3:c+4}return c}\"undefined\"!==typeof TextDecoder&&new TextDecoder(\"utf-16le\");function Da(a){0<a%65536&&(a+=65536-a%65536);return a}var buffer,Ea,Aa,h,Fa,Ga;\nfunction Ha(a){buffer=a;g.HEAP8=Ea=new Int8Array(a);g.HEAP16=new Int16Array(a);g.HEAP32=h=new Int32Array(a);g.HEAPU8=Aa=new Uint8Array(a);g.HEAPU16=new Uint16Array(a);g.HEAPU32=new Uint32Array(a);g.HEAPF32=Fa=new Float32Array(a);g.HEAPF64=Ga=new Float64Array(a)}var Ja=g.TOTAL_MEMORY||67108864;if(ta=g.wasmMemory?g.wasmMemory:new WebAssembly.Memory({initial:Ja/65536}))buffer=ta.buffer;Ja=buffer.byteLength;Ha(buffer);h[11868]=5290544;\nfunction Ka(a){for(;0<a.length;){var c=a.shift();if(\"function\"==typeof c)c();else{var d=c.it;\"number\"===typeof d?void 0===c.$s?g.dynCall_v(d):g.dynCall_vi(d,c.$s):d(void 0===c.$s?null:c.$s)}}}var La=[],Ma=[],Na=[],Oa=[],Pa=!1;function Qa(){var a=g.preRun.shift();La.unshift(a)}var Ra=Math.cos,Sa=Math.sin,Ta=0,Ua=null,Va=null;g.preloadedImages={};g.preloadedAudios={};\nfunction oa(a){if(g.onAbort)g.onAbort(a);a+=\"\";pa(a);qa(a);wa=!0;throw new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");}function Wa(){var a=Xa;return String.prototype.startsWith?a.startsWith(\"data:application/octet-stream;base64,\"):0===a.indexOf(\"data:application/octet-stream;base64,\")}var Xa=\"ammo.wasm.wasm\";if(!Wa()){var Ya=Xa;Xa=g.locateFile?g.locateFile(Ya,ja):ja+Ya}\nfunction Za(){try{if(sa)return new Uint8Array(sa);if(la)return la(Xa);throw\"both async and sync fetching of the wasm failed\";}catch(a){oa(a)}}function $a(){return sa||!da&&!ea||\"function\"!==typeof fetch?new Promise(function(a){a(Za())}):fetch(Xa,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+Xa+\"'\";return a.arrayBuffer()}).catch(function(){return Za()})}\ng.asm=function(){function a(a){g.asm=a.exports;Ta--;g.monitorRunDependencies&&g.monitorRunDependencies(Ta);0==Ta&&(null!==Ua&&(clearInterval(Ua),Ua=null),Va&&(a=Va,Va=null,a()))}function c(c){a(c.instance)}function d(a){return $a().then(function(a){return WebAssembly.instantiate(a,e)}).then(a,function(a){qa(\"failed to asynchronously prepare wasm: \"+a);oa(a)})}var e={env:ab,wasi_unstable:ab,global:{NaN:NaN,Infinity:Infinity},\"global.Math\":Math,asm2wasm:ra};Ta++;g.monitorRunDependencies&&g.monitorRunDependencies(Ta);\nif(g.instantiateWasm)try{return g.instantiateWasm(e,a)}catch(f){return qa(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){if(sa||\"function\"!==typeof WebAssembly.instantiateStreaming||Wa()||\"function\"!==typeof fetch)return d(c);fetch(Xa,{credentials:\"same-origin\"}).then(function(a){return WebAssembly.instantiateStreaming(a,e).then(c,function(a){qa(\"wasm streaming compile failed: \"+a);qa(\"falling back to ArrayBuffer instantiation\");d(c)})})})();return{}};\nvar bb=[function(a,c,d,e,f,n,r,N){a=g.getCache(g.ConcreteContactResultCallback)[a];if(!a.hasOwnProperty(\"addSingleResult\"))throw\"a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.\";return a.addSingleResult(c,d,e,f,n,r,N)},function(a,c,d,e){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"drawLine\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::drawLine.\";a.drawLine(c,d,e)},function(a,c,d,e,f,n){a=g.getCache(g.DebugDrawer)[a];\nif(!a.hasOwnProperty(\"drawContactPoint\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::drawContactPoint.\";a.drawContactPoint(c,d,e,f,n)},function(a,c){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"reportErrorWarning\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::reportErrorWarning.\";a.reportErrorWarning(c)},function(a,c,d){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"draw3dText\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::draw3dText.\";\na.draw3dText(c,d)},function(a,c){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"setDebugMode\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::setDebugMode.\";a.setDebugMode(c)},function(a){a=g.getCache(g.DebugDrawer)[a];if(!a.hasOwnProperty(\"getDebugMode\"))throw\"a JSImplementation must implement all functions, you forgot DebugDrawer::getDebugMode.\";return a.getDebugMode()}];Ma.push({it:function(){cb()}});\nfunction db(a){g.___errno_location&&(h[g.___errno_location()>>2]=a)}var eb=[null,[],[]],fb=0;function gb(){fb+=4;return h[fb-4>>2]}var hb={};function ib(){return 0}function jb(a,c,d,e){try{var f=hb.Zv(a),n=hb.Xv(f,c,d);h[e>>2]=n;return 0}catch(r){return oa(r),r.gt}}function kb(){return 0}\nfunction lb(a,c,d,e){try{for(var f=0,n=0;n<d;n++){for(var r=h[c+8*n>>2],N=h[c+(8*n+4)>>2],ba=0;ba<N;ba++){var Ia=Aa[r+ba],va=eb[a];0===Ia||10===Ia?((1===a?pa:qa)(ya(va,0)),va.length=0):va.push(Ia)}f+=N}h[e>>2]=f;return 0}catch(Jb){return oa(Jb),Jb.gt}}function mb(){oa()}function nb(){return Ea.length}var ob={};function pb(a){if(0===a)return 0;a=za(a);if(!ob.hasOwnProperty(a))return 0;pb.dt&&qb(pb.dt);a=ob[a];var c=Ca(a)+1,d=rb(c);d&&Ba(a,Ea,d,c);pb.dt=d;return pb.dt}\nfunction sb(){sb.Ls||(sb.Ls=[]);sb.Ls.push(tb());return sb.Ls.length-1}function ub(a){return 0===a%4&&(0!==a%100||0===a%400)}function vb(a,c){for(var d=0,e=0;e<=c;d+=a[e++]);return d}var wb=[31,29,31,30,31,30,31,31,30,31,30,31],xb=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction yb(a,c){for(a=new Date(a.getTime());0<c;){var d=a.getMonth(),e=(ub(a.getFullYear())?wb:xb)[d];if(c>e-a.getDate())c-=e-a.getDate()+1,a.setDate(1),11>d?a.setMonth(d+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+c);break}}return a}\nfunction zb(a,c,d,e){function f(a,c,d){for(a=\"number\"===typeof a?a.toString():a||\"\";a.length<c;)a=d[0]+a;return a}function n(a,c){return f(a,c,\"0\")}function r(a,c){function d(a){return 0>a?-1:0<a?1:0}var e;0===(e=d(a.getFullYear()-c.getFullYear()))&&0===(e=d(a.getMonth()-c.getMonth()))&&(e=d(a.getDate()-c.getDate()));return e}function N(a){switch(a.getDay()){case 0:return new Date(a.getFullYear()-1,11,29);case 1:return a;case 2:return new Date(a.getFullYear(),0,3);case 3:return new Date(a.getFullYear(),\n0,2);case 4:return new Date(a.getFullYear(),0,1);case 5:return new Date(a.getFullYear()-1,11,31);case 6:return new Date(a.getFullYear()-1,11,30)}}function ba(a){a=yb(new Date(a.Cs+1900,0,1),a.Zs);var c=N(new Date(a.getFullYear()+1,0,4));return 0>=r(N(new Date(a.getFullYear(),0,4)),a)?0>=r(c,a)?a.getFullYear()+1:a.getFullYear():a.getFullYear()-1}var Ia=h[e+40>>2];e={Sv:h[e>>2],Rv:h[e+4>>2],Xs:h[e+8>>2],Us:h[e+12>>2],Ks:h[e+16>>2],Cs:h[e+20>>2],Ys:h[e+24>>2],Zs:h[e+28>>2],cw:h[e+32>>2],Qv:h[e+36>>2],\nTv:Ia?za(Ia):\"\"};d=za(d);Ia={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var va in Ia)d=d.replace(new RegExp(va,\"g\"),Ia[va]);var Jb=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nEc=\"January February March April May June July August September October November December\".split(\" \");Ia={\"%a\":function(a){return Jb[a.Ys].substring(0,3)},\"%A\":function(a){return Jb[a.Ys]},\"%b\":function(a){return Ec[a.Ks].substring(0,3)},\"%B\":function(a){return Ec[a.Ks]},\"%C\":function(a){return n((a.Cs+1900)/100|0,2)},\"%d\":function(a){return n(a.Us,2)},\"%e\":function(a){return f(a.Us,2,\" \")},\"%g\":function(a){return ba(a).toString().substring(2)},\"%G\":function(a){return ba(a)},\"%H\":function(a){return n(a.Xs,\n2)},\"%I\":function(a){a=a.Xs;0==a?a=12:12<a&&(a-=12);return n(a,2)},\"%j\":function(a){return n(a.Us+vb(ub(a.Cs+1900)?wb:xb,a.Ks-1),3)},\"%m\":function(a){return n(a.Ks+1,2)},\"%M\":function(a){return n(a.Rv,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(a){return 0<=a.Xs&&12>a.Xs?\"AM\":\"PM\"},\"%S\":function(a){return n(a.Sv,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(a){return a.Ys||7},\"%U\":function(a){var c=new Date(a.Cs+1900,0,1),d=0===c.getDay()?c:yb(c,7-c.getDay());a=new Date(a.Cs+1900,a.Ks,a.Us);return 0>\nr(d,a)?n(Math.ceil((31-d.getDate()+(vb(ub(a.getFullYear())?wb:xb,a.getMonth()-1)-31)+a.getDate())/7),2):0===r(d,c)?\"01\":\"00\"},\"%V\":function(a){var c=N(new Date(a.Cs+1900,0,4)),d=N(new Date(a.Cs+1901,0,4)),e=yb(new Date(a.Cs+1900,0,1),a.Zs);return 0>r(e,c)?\"53\":0>=r(d,e)?\"01\":n(Math.ceil((c.getFullYear()<a.Cs+1900?a.Zs+32-c.getDate():a.Zs+1-c.getDate())/7),2)},\"%w\":function(a){return a.Ys},\"%W\":function(a){var c=new Date(a.Cs,0,1),d=1===c.getDay()?c:yb(c,0===c.getDay()?1:7-c.getDay()+1);a=new Date(a.Cs+\n1900,a.Ks,a.Us);return 0>r(d,a)?n(Math.ceil((31-d.getDate()+(vb(ub(a.getFullYear())?wb:xb,a.getMonth()-1)-31)+a.getDate())/7),2):0===r(d,c)?\"01\":\"00\"},\"%y\":function(a){return(a.Cs+1900).toString().substring(2)},\"%Y\":function(a){return a.Cs+1900},\"%z\":function(a){a=a.Qv;var c=0<=a;a=Math.abs(a)/60;return(c?\"+\":\"-\")+String(\"0000\"+(a/60*100+a%60)).slice(-4)},\"%Z\":function(a){return a.Tv},\"%%\":function(){return\"%\"}};for(va in Ia)0<=d.indexOf(va)&&(d=d.replace(new RegExp(va,\"g\"),Ia[va](e)));va=Ab(d,!1);\nif(va.length>c)return 0;Ea.set(va,a);return va.length-1}mb=fa?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:\"undefined\"!==typeof dateNow?dateNow:\"object\"===typeof performance&&performance&&\"function\"===typeof performance.now?function(){return performance.now()}:Date.now;function Ab(a,c){var d=Array(Ca(a)+1);a=Ba(a,d,0,d.length);c&&(d.length=a);return d}\nvar ab={f:function(a){return rb(a)},d:function(a){\"uncaught_exception\"in Bb?Bb.Uv++:Bb.Uv=1;throw a;},m:function(){},t:function(){db(63);return-1},s:function(a,c){fb=c;try{var d=gb();var e=gb();if(-1===d||0===e)var f=-28;else{var n=hb.Bu[d];if(n&&e===n.$v){var r=(void 0).Yv(n.fd);hb.Wv(d,r,e,n.flags);(void 0).bw(r);hb.Bu[d]=null;n.Vv&&qb(n.aw)}f=0}return f}catch(N){return oa(N),-N.gt}},l:function(){},r:function(){return ib.apply(null,arguments)},q:function(){return jb.apply(null,arguments)},u:function(){return kb.apply(null,\narguments)},p:function(){return lb.apply(null,arguments)},__memory_base:1024,__table_base:0,a:function(){oa()},e:function(a,c){if(0===a)a=Date.now();else if(1===a&&(fa||\"undefined\"!==typeof dateNow||\"object\"===typeof performance&&performance&&\"function\"===typeof performance.now))a=mb();else return db(28),-1;h[c>>2]=a/1E3|0;h[c+4>>2]=a%1E3*1E6|0;return 0},D:function(a,c,d,e,f,n,r,N,ba){return bb[a](c,d,e,f,n,r,N,ba)},C:function(a,c){return bb[a](c)},o:function(a,c,d){return bb[a](c,d)},B:function(a,\nc,d,e){return bb[a](c,d,e)},A:function(a,c,d,e,f,n,r){return bb[a](c,d,e,f,n,r)},z:function(a,c,d,e,f){return bb[a](c,d,e,f)},j:nb,y:function(a,c,d){Aa.set(Aa.subarray(c,c+d),a)},i:function(a){if(2147418112<a)return!1;for(var c=Math.max(nb(),16777216);c<a;)c=536870912>=c?Da(2*c):Math.min(Da((3*c+2147483648)/4),2147418112);a:{try{ta.grow(c-buffer.byteLength+65535>>16);Ha(ta.buffer);var d=1;break a}catch(e){}d=void 0}return d?!0:!1},k:pb,c:function(a){var c=Date.now();h[a>>2]=c/1E3|0;h[a+4>>2]=c%1E3*\n1E3|0;return 0},x:Ra,w:Sa,h:function(a){var c=sb.Ls[a];sb.Ls.splice(a,1);Cb(c)},g:sb,n:function(){oa(\"trap!\")},v:function(a,c,d,e){return zb(a,c,d,e)},b:oa,memory:ta,table:ua},Db=g.asm({},ab,buffer);g.asm=Db;\nvar Bb=g.__ZSt18uncaught_exceptionv=function(){return g.asm.E.apply(null,arguments)},Eb=g._emscripten_bind_AllHitsRayResultCallback_AllHitsRayResultCallback_2=function(){return g.asm.F.apply(null,arguments)},Fb=g._emscripten_bind_AllHitsRayResultCallback___destroy___0=function(){return g.asm.G.apply(null,arguments)},Gb=g._emscripten_bind_AllHitsRayResultCallback_get_m_closestHitFraction_0=function(){return g.asm.H.apply(null,arguments)},Hb=g._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterGroup_0=\nfunction(){return g.asm.I.apply(null,arguments)},Ib=g._emscripten_bind_AllHitsRayResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.J.apply(null,arguments)},Kb=g._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObject_0=function(){return g.asm.K.apply(null,arguments)},Lb=g._emscripten_bind_AllHitsRayResultCallback_get_m_collisionObjects_0=function(){return g.asm.L.apply(null,arguments)},Mb=g._emscripten_bind_AllHitsRayResultCallback_get_m_hitFractions_0=function(){return g.asm.M.apply(null,\narguments)},Nb=g._emscripten_bind_AllHitsRayResultCallback_get_m_hitNormalWorld_0=function(){return g.asm.N.apply(null,arguments)},Ob=g._emscripten_bind_AllHitsRayResultCallback_get_m_hitPointWorld_0=function(){return g.asm.O.apply(null,arguments)},Pb=g._emscripten_bind_AllHitsRayResultCallback_get_m_rayFromWorld_0=function(){return g.asm.P.apply(null,arguments)},Qb=g._emscripten_bind_AllHitsRayResultCallback_get_m_rayToWorld_0=function(){return g.asm.Q.apply(null,arguments)},Rb=g._emscripten_bind_AllHitsRayResultCallback_hasHit_0=\nfunction(){return g.asm.R.apply(null,arguments)},Sb=g._emscripten_bind_AllHitsRayResultCallback_set_m_closestHitFraction_1=function(){return g.asm.S.apply(null,arguments)},Tb=g._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterGroup_1=function(){return g.asm.T.apply(null,arguments)},Ub=g._emscripten_bind_AllHitsRayResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.U.apply(null,arguments)},Vb=g._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObject_1=function(){return g.asm.V.apply(null,\narguments)},Wb=g._emscripten_bind_AllHitsRayResultCallback_set_m_collisionObjects_1=function(){return g.asm.W.apply(null,arguments)},Xb=g._emscripten_bind_AllHitsRayResultCallback_set_m_hitFractions_1=function(){return g.asm.X.apply(null,arguments)},Yb=g._emscripten_bind_AllHitsRayResultCallback_set_m_hitNormalWorld_1=function(){return g.asm.Y.apply(null,arguments)},Zb=g._emscripten_bind_AllHitsRayResultCallback_set_m_hitPointWorld_1=function(){return g.asm.Z.apply(null,arguments)},$b=g._emscripten_bind_AllHitsRayResultCallback_set_m_rayFromWorld_1=\nfunction(){return g.asm._.apply(null,arguments)},ac=g._emscripten_bind_AllHitsRayResultCallback_set_m_rayToWorld_1=function(){return g.asm.$.apply(null,arguments)},bc=g._emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2=function(){return g.asm.aa.apply(null,arguments)},cc=g._emscripten_bind_ClosestConvexResultCallback___destroy___0=function(){return g.asm.ba.apply(null,arguments)},dc=g._emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0=function(){return g.asm.ca.apply(null,\narguments)},ec=g._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0=function(){return g.asm.da.apply(null,arguments)},fc=g._emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.ea.apply(null,arguments)},hc=g._emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0=function(){return g.asm.fa.apply(null,arguments)},ic=g._emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0=function(){return g.asm.ga.apply(null,\narguments)},jc=g._emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0=function(){return g.asm.ha.apply(null,arguments)},kc=g._emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0=function(){return g.asm.ia.apply(null,arguments)},lc=g._emscripten_bind_ClosestConvexResultCallback_hasHit_0=function(){return g.asm.ja.apply(null,arguments)},mc=g._emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1=function(){return g.asm.ka.apply(null,arguments)},nc=g._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1=\nfunction(){return g.asm.la.apply(null,arguments)},oc=g._emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.ma.apply(null,arguments)},pc=g._emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1=function(){return g.asm.na.apply(null,arguments)},qc=g._emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1=function(){return g.asm.oa.apply(null,arguments)},rc=g._emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1=function(){return g.asm.pa.apply(null,\narguments)},sc=g._emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1=function(){return g.asm.qa.apply(null,arguments)},tc=g._emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2=function(){return g.asm.ra.apply(null,arguments)},uc=g._emscripten_bind_ClosestRayResultCallback___destroy___0=function(){return g.asm.sa.apply(null,arguments)},vc=g._emscripten_bind_ClosestRayResultCallback_get_m_closestHitFraction_0=function(){return g.asm.ta.apply(null,arguments)},wc=g._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0=\nfunction(){return g.asm.ua.apply(null,arguments)},xc=g._emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.va.apply(null,arguments)},yc=g._emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0=function(){return g.asm.wa.apply(null,arguments)},zc=g._emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0=function(){return g.asm.xa.apply(null,arguments)},Ac=g._emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0=function(){return g.asm.ya.apply(null,\narguments)},Bc=g._emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0=function(){return g.asm.za.apply(null,arguments)},Cc=g._emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0=function(){return g.asm.Aa.apply(null,arguments)},Dc=g._emscripten_bind_ClosestRayResultCallback_hasHit_0=function(){return g.asm.Ba.apply(null,arguments)},Fc=g._emscripten_bind_ClosestRayResultCallback_set_m_closestHitFraction_1=function(){return g.asm.Ca.apply(null,arguments)},Gc=g._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1=\nfunction(){return g.asm.Da.apply(null,arguments)},Hc=g._emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.Ea.apply(null,arguments)},Ic=g._emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1=function(){return g.asm.Fa.apply(null,arguments)},Jc=g._emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1=function(){return g.asm.Ga.apply(null,arguments)},Kc=g._emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1=function(){return g.asm.Ha.apply(null,\narguments)},Lc=g._emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1=function(){return g.asm.Ia.apply(null,arguments)},Mc=g._emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1=function(){return g.asm.Ja.apply(null,arguments)},Nc=g._emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0=function(){return g.asm.Ka.apply(null,arguments)},Oc=g._emscripten_bind_ConcreteContactResultCallback___destroy___0=function(){return g.asm.La.apply(null,arguments)},Pc=g._emscripten_bind_ConcreteContactResultCallback_addSingleResult_7=\nfunction(){return g.asm.Ma.apply(null,arguments)},Qc=g._emscripten_bind_ContactResultCallback___destroy___0=function(){return g.asm.Na.apply(null,arguments)},Rc=g._emscripten_bind_ContactResultCallback_addSingleResult_7=function(){return g.asm.Oa.apply(null,arguments)},Sc=g._emscripten_bind_ConvexHull_ConvexHull_0=function(){return g.asm.Pa.apply(null,arguments)},Tc=g._emscripten_bind_ConvexHull___destroy___0=function(){return g.asm.Qa.apply(null,arguments)},Uc=g._emscripten_bind_ConvexHull_get_m_nPoints_0=\nfunction(){return g.asm.Ra.apply(null,arguments)},Vc=g._emscripten_bind_ConvexHull_get_m_nTriangles_0=function(){return g.asm.Sa.apply(null,arguments)},Wc=g._emscripten_bind_ConvexHull_get_m_points_1=function(){return g.asm.Ta.apply(null,arguments)},Xc=g._emscripten_bind_ConvexHull_get_m_triangles_1=function(){return g.asm.Ua.apply(null,arguments)},Yc=g._emscripten_bind_ConvexResultCallback___destroy___0=function(){return g.asm.Va.apply(null,arguments)},Zc=g._emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0=\nfunction(){return g.asm.Wa.apply(null,arguments)},$c=g._emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0=function(){return g.asm.Xa.apply(null,arguments)},ad=g._emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.Ya.apply(null,arguments)},bd=g._emscripten_bind_ConvexResultCallback_hasHit_0=function(){return g.asm.Za.apply(null,arguments)},cd=g._emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1=function(){return g.asm._a.apply(null,\narguments)},dd=g._emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1=function(){return g.asm.$a.apply(null,arguments)},ed=g._emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.ab.apply(null,arguments)},fd=g._emscripten_bind_DebugDrawer_DebugDrawer_0=function(){return g.asm.bb.apply(null,arguments)},gd=g._emscripten_bind_DebugDrawer___destroy___0=function(){return g.asm.cb.apply(null,arguments)},hd=g._emscripten_bind_DebugDrawer_draw3dText_2=function(){return g.asm.db.apply(null,\narguments)},id=g._emscripten_bind_DebugDrawer_drawContactPoint_5=function(){return g.asm.eb.apply(null,arguments)},jd=g._emscripten_bind_DebugDrawer_drawLine_3=function(){return g.asm.fb.apply(null,arguments)},kd=g._emscripten_bind_DebugDrawer_getDebugMode_0=function(){return g.asm.gb.apply(null,arguments)},ld=g._emscripten_bind_DebugDrawer_reportErrorWarning_1=function(){return g.asm.hb.apply(null,arguments)},md=g._emscripten_bind_DebugDrawer_setDebugMode_1=function(){return g.asm.ib.apply(null,\narguments)},nd=g._emscripten_bind_HACD_Compute_0=function(){return g.asm.jb.apply(null,arguments)},od=g._emscripten_bind_HACD_GetCH_3=function(){return g.asm.kb.apply(null,arguments)},pd=g._emscripten_bind_HACD_GetNClusters_0=function(){return g.asm.lb.apply(null,arguments)},qd=g._emscripten_bind_HACD_GetNPointsCH_1=function(){return g.asm.mb.apply(null,arguments)},rd=g._emscripten_bind_HACD_GetNTrianglesCH_1=function(){return g.asm.nb.apply(null,arguments)},sd=g._emscripten_bind_HACD_HACD_0=function(){return g.asm.ob.apply(null,\narguments)},td=g._emscripten_bind_HACD_SetCompacityWeight_1=function(){return g.asm.pb.apply(null,arguments)},ud=g._emscripten_bind_HACD_SetConcavity_1=function(){return g.asm.qb.apply(null,arguments)},vd=g._emscripten_bind_HACD_SetNClusters_1=function(){return g.asm.rb.apply(null,arguments)},wd=g._emscripten_bind_HACD_SetNPoints_1=function(){return g.asm.sb.apply(null,arguments)},xd=g._emscripten_bind_HACD_SetNTriangles_1=function(){return g.asm.tb.apply(null,arguments)},yd=g._emscripten_bind_HACD_SetNVerticesPerCH_1=\nfunction(){return g.asm.ub.apply(null,arguments)},zd=g._emscripten_bind_HACD_SetPoints_1=function(){return g.asm.vb.apply(null,arguments)},Ad=g._emscripten_bind_HACD_SetTriangles_1=function(){return g.asm.wb.apply(null,arguments)},Bd=g._emscripten_bind_HACD_SetVolumeWeight_1=function(){return g.asm.xb.apply(null,arguments)},Cd=g._emscripten_bind_HACD___destroy___0=function(){return g.asm.yb.apply(null,arguments)},Dd=g._emscripten_bind_LocalConvexResult_LocalConvexResult_5=function(){return g.asm.zb.apply(null,\narguments)},Ed=g._emscripten_bind_LocalConvexResult___destroy___0=function(){return g.asm.Ab.apply(null,arguments)},Fd=g._emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0=function(){return g.asm.Bb.apply(null,arguments)},Gd=g._emscripten_bind_LocalConvexResult_get_m_hitFraction_0=function(){return g.asm.Cb.apply(null,arguments)},Hd=g._emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0=function(){return g.asm.Db.apply(null,arguments)},Id=g._emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0=\nfunction(){return g.asm.Eb.apply(null,arguments)},Jd=g._emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0=function(){return g.asm.Fb.apply(null,arguments)},Kd=g._emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1=function(){return g.asm.Gb.apply(null,arguments)},Ld=g._emscripten_bind_LocalConvexResult_set_m_hitFraction_1=function(){return g.asm.Hb.apply(null,arguments)},Md=g._emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1=function(){return g.asm.Ib.apply(null,arguments)},\nNd=g._emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1=function(){return g.asm.Jb.apply(null,arguments)},Od=g._emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1=function(){return g.asm.Kb.apply(null,arguments)},Pd=g._emscripten_bind_LocalShapeInfo___destroy___0=function(){return g.asm.Lb.apply(null,arguments)},Qd=g._emscripten_bind_LocalShapeInfo_get_m_shapePart_0=function(){return g.asm.Mb.apply(null,arguments)},Rd=g._emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0=function(){return g.asm.Nb.apply(null,\narguments)},Sd=g._emscripten_bind_LocalShapeInfo_set_m_shapePart_1=function(){return g.asm.Ob.apply(null,arguments)},Td=g._emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1=function(){return g.asm.Pb.apply(null,arguments)},Ud=g._emscripten_bind_Parameters_Parameters_0=function(){return g.asm.Qb.apply(null,arguments)},Vd=g._emscripten_bind_Parameters___destroy___0=function(){return g.asm.Rb.apply(null,arguments)},Wd=g._emscripten_bind_Parameters_get_m_alpha_0=function(){return g.asm.Sb.apply(null,\narguments)},Xd=g._emscripten_bind_Parameters_get_m_beta_0=function(){return g.asm.Tb.apply(null,arguments)},Yd=g._emscripten_bind_Parameters_get_m_concavity_0=function(){return g.asm.Ub.apply(null,arguments)},Zd=g._emscripten_bind_Parameters_get_m_convexhullApproximation_0=function(){return g.asm.Vb.apply(null,arguments)},$d=g._emscripten_bind_Parameters_get_m_convexhullDownsampling_0=function(){return g.asm.Wb.apply(null,arguments)},ae=g._emscripten_bind_Parameters_get_m_depth_0=function(){return g.asm.Xb.apply(null,\narguments)},be=g._emscripten_bind_Parameters_get_m_gamma_0=function(){return g.asm.Yb.apply(null,arguments)},ce=g._emscripten_bind_Parameters_get_m_maxNumVerticesPerCH_0=function(){return g.asm.Zb.apply(null,arguments)},de=g._emscripten_bind_Parameters_get_m_minVolumePerCH_0=function(){return g.asm._b.apply(null,arguments)},ee=g._emscripten_bind_Parameters_get_m_mode_0=function(){return g.asm.$b.apply(null,arguments)},fe=g._emscripten_bind_Parameters_get_m_oclAcceleration_0=function(){return g.asm.ac.apply(null,\narguments)},ge=g._emscripten_bind_Parameters_get_m_pca_0=function(){return g.asm.bc.apply(null,arguments)},he=g._emscripten_bind_Parameters_get_m_planeDownsampling_0=function(){return g.asm.cc.apply(null,arguments)},ie=g._emscripten_bind_Parameters_get_m_resolution_0=function(){return g.asm.dc.apply(null,arguments)},je=g._emscripten_bind_Parameters_set_m_alpha_1=function(){return g.asm.ec.apply(null,arguments)},ke=g._emscripten_bind_Parameters_set_m_beta_1=function(){return g.asm.fc.apply(null,arguments)},\nle=g._emscripten_bind_Parameters_set_m_concavity_1=function(){return g.asm.gc.apply(null,arguments)},me=g._emscripten_bind_Parameters_set_m_convexhullApproximation_1=function(){return g.asm.hc.apply(null,arguments)},ne=g._emscripten_bind_Parameters_set_m_convexhullDownsampling_1=function(){return g.asm.ic.apply(null,arguments)},oe=g._emscripten_bind_Parameters_set_m_depth_1=function(){return g.asm.jc.apply(null,arguments)},pe=g._emscripten_bind_Parameters_set_m_gamma_1=function(){return g.asm.kc.apply(null,\narguments)},qe=g._emscripten_bind_Parameters_set_m_maxNumVerticesPerCH_1=function(){return g.asm.lc.apply(null,arguments)},re=g._emscripten_bind_Parameters_set_m_minVolumePerCH_1=function(){return g.asm.mc.apply(null,arguments)},se=g._emscripten_bind_Parameters_set_m_mode_1=function(){return g.asm.nc.apply(null,arguments)},te=g._emscripten_bind_Parameters_set_m_oclAcceleration_1=function(){return g.asm.oc.apply(null,arguments)},ue=g._emscripten_bind_Parameters_set_m_pca_1=function(){return g.asm.pc.apply(null,\narguments)},ve=g._emscripten_bind_Parameters_set_m_planeDownsampling_1=function(){return g.asm.qc.apply(null,arguments)},we=g._emscripten_bind_Parameters_set_m_resolution_1=function(){return g.asm.rc.apply(null,arguments)},xe=g._emscripten_bind_RayResultCallback___destroy___0=function(){return g.asm.sc.apply(null,arguments)},ye=g._emscripten_bind_RayResultCallback_get_m_closestHitFraction_0=function(){return g.asm.tc.apply(null,arguments)},ze=g._emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0=\nfunction(){return g.asm.uc.apply(null,arguments)},Ae=g._emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0=function(){return g.asm.vc.apply(null,arguments)},Be=g._emscripten_bind_RayResultCallback_get_m_collisionObject_0=function(){return g.asm.wc.apply(null,arguments)},Ce=g._emscripten_bind_RayResultCallback_hasHit_0=function(){return g.asm.xc.apply(null,arguments)},De=g._emscripten_bind_RayResultCallback_set_m_closestHitFraction_1=function(){return g.asm.yc.apply(null,arguments)},Ee=\ng._emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1=function(){return g.asm.zc.apply(null,arguments)},Fe=g._emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1=function(){return g.asm.Ac.apply(null,arguments)},Ge=g._emscripten_bind_RayResultCallback_set_m_collisionObject_1=function(){return g.asm.Bc.apply(null,arguments)},He=g._emscripten_bind_VHACD_Cancel_0=function(){return g.asm.Cc.apply(null,arguments)},Ie=g._emscripten_bind_VHACD_Clean_0=function(){return g.asm.Dc.apply(null,\narguments)},Je=g._emscripten_bind_VHACD_Compute_7=function(){return g.asm.Ec.apply(null,arguments)},Ke=g._emscripten_bind_VHACD_GetConvexHull_2=function(){return g.asm.Fc.apply(null,arguments)},Le=g._emscripten_bind_VHACD_GetNConvexHulls_0=function(){return g.asm.Gc.apply(null,arguments)},Me=g._emscripten_bind_VHACD_Release_0=function(){return g.asm.Hc.apply(null,arguments)},Ne=g._emscripten_bind_VHACD_VHACD_0=function(){return g.asm.Ic.apply(null,arguments)},Oe=g._emscripten_bind_VHACD___destroy___0=\nfunction(){return g.asm.Jc.apply(null,arguments)},Pe=g._emscripten_bind_Vec3Long_Vec3Long_3=function(){return g.asm.Kc.apply(null,arguments)},Qe=g._emscripten_bind_Vec3Long_X_0=function(){return g.asm.Lc.apply(null,arguments)},Re=g._emscripten_bind_Vec3Long_Y_0=function(){return g.asm.Mc.apply(null,arguments)},Se=g._emscripten_bind_Vec3Long_Z_0=function(){return g.asm.Nc.apply(null,arguments)},Te=g._emscripten_bind_Vec3Long___destroy___0=function(){return g.asm.Oc.apply(null,arguments)},Ue=g._emscripten_bind_Vec3Real_Vec3Real_3=\nfunction(){return g.asm.Pc.apply(null,arguments)},Ve=g._emscripten_bind_Vec3Real_X_0=function(){return g.asm.Qc.apply(null,arguments)},We=g._emscripten_bind_Vec3Real_Y_0=function(){return g.asm.Rc.apply(null,arguments)},Xe=g._emscripten_bind_Vec3Real_Z_0=function(){return g.asm.Sc.apply(null,arguments)},Ye=g._emscripten_bind_Vec3Real___destroy___0=function(){return g.asm.Tc.apply(null,arguments)},Ze=g._emscripten_bind_VoidPtr___destroy___0=function(){return g.asm.Uc.apply(null,arguments)},$e=g._emscripten_bind_btActionInterface___destroy___0=\nfunction(){return g.asm.Vc.apply(null,arguments)},af=g._emscripten_bind_btActionInterface_updateAction_2=function(){return g.asm.Wc.apply(null,arguments)},bf=g._emscripten_bind_btAxisSweep3___destroy___0=function(){return g.asm.Xc.apply(null,arguments)},cf=g._emscripten_bind_btAxisSweep3_btAxisSweep3_2=function(){return g.asm.Yc.apply(null,arguments)},df=g._emscripten_bind_btAxisSweep3_btAxisSweep3_3=function(){return g.asm.Zc.apply(null,arguments)},ef=g._emscripten_bind_btAxisSweep3_btAxisSweep3_4=\nfunction(){return g.asm._c.apply(null,arguments)},ff=g._emscripten_bind_btAxisSweep3_btAxisSweep3_5=function(){return g.asm.$c.apply(null,arguments)},gf=g._emscripten_bind_btBoxShape___destroy___0=function(){return g.asm.ad.apply(null,arguments)},hf=g._emscripten_bind_btBoxShape_btBoxShape_1=function(){return g.asm.bd.apply(null,arguments)},jf=g._emscripten_bind_btBoxShape_calculateLocalInertia_2=function(){return g.asm.cd.apply(null,arguments)},kf=g._emscripten_bind_btBoxShape_getLocalScaling_0=\nfunction(){return g.asm.dd.apply(null,arguments)},lf=g._emscripten_bind_btBoxShape_getMargin_0=function(){return g.asm.ed.apply(null,arguments)},mf=g._emscripten_bind_btBoxShape_setLocalScaling_1=function(){return g.asm.fd.apply(null,arguments)},nf=g._emscripten_bind_btBoxShape_setMargin_1=function(){return g.asm.gd.apply(null,arguments)},of=g._emscripten_bind_btBroadphaseInterface___destroy___0=function(){return g.asm.hd.apply(null,arguments)},pf=g._emscripten_bind_btBroadphaseInterface_getOverlappingPairCache_0=\nfunction(){return g.asm.id.apply(null,arguments)},qf=g._emscripten_bind_btBroadphaseProxy___destroy___0=function(){return g.asm.jd.apply(null,arguments)},rf=g._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterGroup_0=function(){return g.asm.kd.apply(null,arguments)},sf=g._emscripten_bind_btBroadphaseProxy_get_m_collisionFilterMask_0=function(){return g.asm.ld.apply(null,arguments)},tf=g._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterGroup_1=function(){return g.asm.md.apply(null,arguments)},\nuf=g._emscripten_bind_btBroadphaseProxy_set_m_collisionFilterMask_1=function(){return g.asm.nd.apply(null,arguments)},vf=g._emscripten_bind_btBvhTriangleMeshShape___destroy___0=function(){return g.asm.od.apply(null,arguments)},wf=g._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2=function(){return g.asm.pd.apply(null,arguments)},xf=g._emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3=function(){return g.asm.qd.apply(null,arguments)},yf=g._emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2=\nfunction(){return g.asm.rd.apply(null,arguments)},zf=g._emscripten_bind_btBvhTriangleMeshShape_getLocalScaling_0=function(){return g.asm.sd.apply(null,arguments)},Af=g._emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1=function(){return g.asm.td.apply(null,arguments)},Bf=g._emscripten_bind_btCapsuleShapeX___destroy___0=function(){return g.asm.ud.apply(null,arguments)},Cf=g._emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2=function(){return g.asm.vd.apply(null,arguments)},Df=g._emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2=\nfunction(){return g.asm.wd.apply(null,arguments)},Ef=g._emscripten_bind_btCapsuleShapeX_getHalfHeight_0=function(){return g.asm.xd.apply(null,arguments)},Ff=g._emscripten_bind_btCapsuleShapeX_getLocalScaling_0=function(){return g.asm.yd.apply(null,arguments)},Gf=g._emscripten_bind_btCapsuleShapeX_getMargin_0=function(){return g.asm.zd.apply(null,arguments)},Hf=g._emscripten_bind_btCapsuleShapeX_getRadius_0=function(){return g.asm.Ad.apply(null,arguments)},If=g._emscripten_bind_btCapsuleShapeX_getUpAxis_0=\nfunction(){return g.asm.Bd.apply(null,arguments)},Jf=g._emscripten_bind_btCapsuleShapeX_setLocalScaling_1=function(){return g.asm.Cd.apply(null,arguments)},Kf=g._emscripten_bind_btCapsuleShapeX_setMargin_1=function(){return g.asm.Dd.apply(null,arguments)},Lf=g._emscripten_bind_btCapsuleShapeZ___destroy___0=function(){return g.asm.Ed.apply(null,arguments)},Mf=g._emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2=function(){return g.asm.Fd.apply(null,arguments)},Nf=g._emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2=\nfunction(){return g.asm.Gd.apply(null,arguments)},Of=g._emscripten_bind_btCapsuleShapeZ_getHalfHeight_0=function(){return g.asm.Hd.apply(null,arguments)},Pf=g._emscripten_bind_btCapsuleShapeZ_getLocalScaling_0=function(){return g.asm.Id.apply(null,arguments)},Qf=g._emscripten_bind_btCapsuleShapeZ_getMargin_0=function(){return g.asm.Jd.apply(null,arguments)},Rf=g._emscripten_bind_btCapsuleShapeZ_getRadius_0=function(){return g.asm.Kd.apply(null,arguments)},Sf=g._emscripten_bind_btCapsuleShapeZ_getUpAxis_0=\nfunction(){return g.asm.Ld.apply(null,arguments)},Tf=g._emscripten_bind_btCapsuleShapeZ_setLocalScaling_1=function(){return g.asm.Md.apply(null,arguments)},Uf=g._emscripten_bind_btCapsuleShapeZ_setMargin_1=function(){return g.asm.Nd.apply(null,arguments)},Vf=g._emscripten_bind_btCapsuleShape___destroy___0=function(){return g.asm.Od.apply(null,arguments)},Wf=g._emscripten_bind_btCapsuleShape_btCapsuleShape_2=function(){return g.asm.Pd.apply(null,arguments)},Xf=g._emscripten_bind_btCapsuleShape_calculateLocalInertia_2=\nfunction(){return g.asm.Qd.apply(null,arguments)},Yf=g._emscripten_bind_btCapsuleShape_getHalfHeight_0=function(){return g.asm.Rd.apply(null,arguments)},Zf=g._emscripten_bind_btCapsuleShape_getLocalScaling_0=function(){return g.asm.Sd.apply(null,arguments)},$f=g._emscripten_bind_btCapsuleShape_getMargin_0=function(){return g.asm.Td.apply(null,arguments)},ag=g._emscripten_bind_btCapsuleShape_getRadius_0=function(){return g.asm.Ud.apply(null,arguments)},bg=g._emscripten_bind_btCapsuleShape_getUpAxis_0=\nfunction(){return g.asm.Vd.apply(null,arguments)},cg=g._emscripten_bind_btCapsuleShape_setLocalScaling_1=function(){return g.asm.Wd.apply(null,arguments)},dg=g._emscripten_bind_btCapsuleShape_setMargin_1=function(){return g.asm.Xd.apply(null,arguments)},eg=g._emscripten_bind_btCollisionConfiguration___destroy___0=function(){return g.asm.Yd.apply(null,arguments)},fg=g._emscripten_bind_btCollisionDispatcher___destroy___0=function(){return g.asm.Zd.apply(null,arguments)},gg=g._emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1=\nfunction(){return g.asm._d.apply(null,arguments)},hg=g._emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1=function(){return g.asm.$d.apply(null,arguments)},ig=g._emscripten_bind_btCollisionDispatcher_getNumManifolds_0=function(){return g.asm.ae.apply(null,arguments)},jg=g._emscripten_bind_btCollisionObjectWrapper_getCollisionObject_0=function(){return g.asm.be.apply(null,arguments)},kg=g._emscripten_bind_btCollisionObjectWrapper_getCollisionShape_0=function(){return g.asm.ce.apply(null,\narguments)},lg=g._emscripten_bind_btCollisionObjectWrapper_getWorldTransform_0=function(){return g.asm.de.apply(null,arguments)},mg=g._emscripten_bind_btCollisionObject___destroy___0=function(){return g.asm.ee.apply(null,arguments)},ng=g._emscripten_bind_btCollisionObject_activate_0=function(){return g.asm.fe.apply(null,arguments)},og=g._emscripten_bind_btCollisionObject_activate_1=function(){return g.asm.ge.apply(null,arguments)},pg=g._emscripten_bind_btCollisionObject_forceActivationState_1=function(){return g.asm.he.apply(null,\narguments)},qg=g._emscripten_bind_btCollisionObject_getBroadphaseHandle_0=function(){return g.asm.ie.apply(null,arguments)},rg=g._emscripten_bind_btCollisionObject_getCollisionFlags_0=function(){return g.asm.je.apply(null,arguments)},sg=g._emscripten_bind_btCollisionObject_getCollisionShape_0=function(){return g.asm.ke.apply(null,arguments)},tg=g._emscripten_bind_btCollisionObject_getFriction_0=function(){return g.asm.le.apply(null,arguments)},ug=g._emscripten_bind_btCollisionObject_getRestitution_0=\nfunction(){return g.asm.me.apply(null,arguments)},vg=g._emscripten_bind_btCollisionObject_getRollingFriction_0=function(){return g.asm.ne.apply(null,arguments)},wg=g._emscripten_bind_btCollisionObject_getUserIndex_0=function(){return g.asm.oe.apply(null,arguments)},xg=g._emscripten_bind_btCollisionObject_getUserPointer_0=function(){return g.asm.pe.apply(null,arguments)},yg=g._emscripten_bind_btCollisionObject_getWorldTransform_0=function(){return g.asm.qe.apply(null,arguments)},zg=g._emscripten_bind_btCollisionObject_isActive_0=\nfunction(){return g.asm.re.apply(null,arguments)},Ag=g._emscripten_bind_btCollisionObject_isKinematicObject_0=function(){return g.asm.se.apply(null,arguments)},Bg=g._emscripten_bind_btCollisionObject_isStaticObject_0=function(){return g.asm.te.apply(null,arguments)},Cg=g._emscripten_bind_btCollisionObject_isStaticOrKinematicObject_0=function(){return g.asm.ue.apply(null,arguments)},Dg=g._emscripten_bind_btCollisionObject_setActivationState_1=function(){return g.asm.ve.apply(null,arguments)},Eg=g._emscripten_bind_btCollisionObject_setAnisotropicFriction_2=\nfunction(){return g.asm.we.apply(null,arguments)},Fg=g._emscripten_bind_btCollisionObject_setCcdMotionThreshold_1=function(){return g.asm.xe.apply(null,arguments)},Gg=g._emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1=function(){return g.asm.ye.apply(null,arguments)},Hg=g._emscripten_bind_btCollisionObject_setCollisionFlags_1=function(){return g.asm.ze.apply(null,arguments)},Ig=g._emscripten_bind_btCollisionObject_setCollisionShape_1=function(){return g.asm.Ae.apply(null,arguments)},Jg=\ng._emscripten_bind_btCollisionObject_setContactProcessingThreshold_1=function(){return g.asm.Be.apply(null,arguments)},Kg=g._emscripten_bind_btCollisionObject_setFriction_1=function(){return g.asm.Ce.apply(null,arguments)},Lg=g._emscripten_bind_btCollisionObject_setRestitution_1=function(){return g.asm.De.apply(null,arguments)},Mg=g._emscripten_bind_btCollisionObject_setRollingFriction_1=function(){return g.asm.Ee.apply(null,arguments)},Ng=g._emscripten_bind_btCollisionObject_setUserIndex_1=function(){return g.asm.Fe.apply(null,\narguments)},Og=g._emscripten_bind_btCollisionObject_setUserPointer_1=function(){return g.asm.Ge.apply(null,arguments)},Pg=g._emscripten_bind_btCollisionObject_setWorldTransform_1=function(){return g.asm.He.apply(null,arguments)},Qg=g._emscripten_bind_btCollisionShape___destroy___0=function(){return g.asm.Ie.apply(null,arguments)},Rg=g._emscripten_bind_btCollisionShape_calculateLocalInertia_2=function(){return g.asm.Je.apply(null,arguments)},Sg=g._emscripten_bind_btCollisionShape_getLocalScaling_0=\nfunction(){return g.asm.Ke.apply(null,arguments)},Tg=g._emscripten_bind_btCollisionShape_getMargin_0=function(){return g.asm.Le.apply(null,arguments)},Ug=g._emscripten_bind_btCollisionShape_setLocalScaling_1=function(){return g.asm.Me.apply(null,arguments)},Vg=g._emscripten_bind_btCollisionShape_setMargin_1=function(){return g.asm.Ne.apply(null,arguments)},Wg=g._emscripten_bind_btCollisionWorld___destroy___0=function(){return g.asm.Oe.apply(null,arguments)},Xg=g._emscripten_bind_btCollisionWorld_addCollisionObject_1=\nfunction(){return g.asm.Pe.apply(null,arguments)},Yg=g._emscripten_bind_btCollisionWorld_addCollisionObject_2=function(){return g.asm.Qe.apply(null,arguments)},Zg=g._emscripten_bind_btCollisionWorld_addCollisionObject_3=function(){return g.asm.Re.apply(null,arguments)},$g=g._emscripten_bind_btCollisionWorld_contactPairTest_3=function(){return g.asm.Se.apply(null,arguments)},ah=g._emscripten_bind_btCollisionWorld_contactTest_2=function(){return g.asm.Te.apply(null,arguments)},bh=g._emscripten_bind_btCollisionWorld_convexSweepTest_5=\nfunction(){return g.asm.Ue.apply(null,arguments)},ch=g._emscripten_bind_btCollisionWorld_debugDrawObject_3=function(){return g.asm.Ve.apply(null,arguments)},dh=g._emscripten_bind_btCollisionWorld_debugDrawWorld_0=function(){return g.asm.We.apply(null,arguments)},eh=g._emscripten_bind_btCollisionWorld_getBroadphase_0=function(){return g.asm.Xe.apply(null,arguments)},fh=g._emscripten_bind_btCollisionWorld_getDebugDrawer_0=function(){return g.asm.Ye.apply(null,arguments)},gh=g._emscripten_bind_btCollisionWorld_getDispatchInfo_0=\nfunction(){return g.asm.Ze.apply(null,arguments)},hh=g._emscripten_bind_btCollisionWorld_getDispatcher_0=function(){return g.asm._e.apply(null,arguments)},ih=g._emscripten_bind_btCollisionWorld_getPairCache_0=function(){return g.asm.$e.apply(null,arguments)},jh=g._emscripten_bind_btCollisionWorld_rayTest_3=function(){return g.asm.af.apply(null,arguments)},kh=g._emscripten_bind_btCollisionWorld_removeCollisionObject_1=function(){return g.asm.bf.apply(null,arguments)},lh=g._emscripten_bind_btCollisionWorld_setDebugDrawer_1=\nfunction(){return g.asm.cf.apply(null,arguments)},mh=g._emscripten_bind_btCollisionWorld_setForceUpdateAllAabbs_1=function(){return g.asm.df.apply(null,arguments)},nh=g._emscripten_bind_btCollisionWorld_updateSingleAabb_1=function(){return g.asm.ef.apply(null,arguments)},oh=g._emscripten_bind_btCompoundShape___destroy___0=function(){return g.asm.ff.apply(null,arguments)},ph=g._emscripten_bind_btCompoundShape_addChildShape_2=function(){return g.asm.gf.apply(null,arguments)},qh=g._emscripten_bind_btCompoundShape_btCompoundShape_0=\nfunction(){return g.asm.hf.apply(null,arguments)},rh=g._emscripten_bind_btCompoundShape_btCompoundShape_1=function(){return g.asm.jf.apply(null,arguments)},sh=g._emscripten_bind_btCompoundShape_calculateLocalInertia_2=function(){return g.asm.kf.apply(null,arguments)},th=g._emscripten_bind_btCompoundShape_getChildShape_1=function(){return g.asm.lf.apply(null,arguments)},uh=g._emscripten_bind_btCompoundShape_getLocalScaling_0=function(){return g.asm.mf.apply(null,arguments)},vh=g._emscripten_bind_btCompoundShape_getMargin_0=\nfunction(){return g.asm.nf.apply(null,arguments)},wh=g._emscripten_bind_btCompoundShape_getNumChildShapes_0=function(){return g.asm.of.apply(null,arguments)},xh=g._emscripten_bind_btCompoundShape_removeChildShapeByIndex_1=function(){return g.asm.pf.apply(null,arguments)},yh=g._emscripten_bind_btCompoundShape_removeChildShape_1=function(){return g.asm.qf.apply(null,arguments)},zh=g._emscripten_bind_btCompoundShape_setLocalScaling_1=function(){return g.asm.rf.apply(null,arguments)},Ah=g._emscripten_bind_btCompoundShape_setMargin_1=\nfunction(){return g.asm.sf.apply(null,arguments)},Bh=g._emscripten_bind_btCompoundShape_updateChildTransform_2=function(){return g.asm.tf.apply(null,arguments)},Ch=g._emscripten_bind_btCompoundShape_updateChildTransform_3=function(){return g.asm.uf.apply(null,arguments)},Dh=g._emscripten_bind_btConcaveShape___destroy___0=function(){return g.asm.vf.apply(null,arguments)},Eh=g._emscripten_bind_btConcaveShape_calculateLocalInertia_2=function(){return g.asm.wf.apply(null,arguments)},Fh=g._emscripten_bind_btConcaveShape_getLocalScaling_0=\nfunction(){return g.asm.xf.apply(null,arguments)},Gh=g._emscripten_bind_btConcaveShape_setLocalScaling_1=function(){return g.asm.yf.apply(null,arguments)},Hh=g._emscripten_bind_btConeShapeX___destroy___0=function(){return g.asm.zf.apply(null,arguments)},Ih=g._emscripten_bind_btConeShapeX_btConeShapeX_2=function(){return g.asm.Af.apply(null,arguments)},Jh=g._emscripten_bind_btConeShapeX_calculateLocalInertia_2=function(){return g.asm.Bf.apply(null,arguments)},Kh=g._emscripten_bind_btConeShapeX_getLocalScaling_0=\nfunction(){return g.asm.Cf.apply(null,arguments)},Lh=g._emscripten_bind_btConeShapeX_setLocalScaling_1=function(){return g.asm.Df.apply(null,arguments)},Mh=g._emscripten_bind_btConeShapeZ___destroy___0=function(){return g.asm.Ef.apply(null,arguments)},Nh=g._emscripten_bind_btConeShapeZ_btConeShapeZ_2=function(){return g.asm.Ff.apply(null,arguments)},Oh=g._emscripten_bind_btConeShapeZ_calculateLocalInertia_2=function(){return g.asm.Gf.apply(null,arguments)},Ph=g._emscripten_bind_btConeShapeZ_getLocalScaling_0=\nfunction(){return g.asm.Hf.apply(null,arguments)},Qh=g._emscripten_bind_btConeShapeZ_setLocalScaling_1=function(){return g.asm.If.apply(null,arguments)},Rh=g._emscripten_bind_btConeShape___destroy___0=function(){return g.asm.Jf.apply(null,arguments)},Sh=g._emscripten_bind_btConeShape_btConeShape_2=function(){return g.asm.Kf.apply(null,arguments)},Th=g._emscripten_bind_btConeShape_calculateLocalInertia_2=function(){return g.asm.Lf.apply(null,arguments)},Uh=g._emscripten_bind_btConeShape_getLocalScaling_0=\nfunction(){return g.asm.Mf.apply(null,arguments)},Vh=g._emscripten_bind_btConeShape_setLocalScaling_1=function(){return g.asm.Nf.apply(null,arguments)},Wh=g._emscripten_bind_btConeTwistConstraint___destroy___0=function(){return g.asm.Of.apply(null,arguments)},Xh=g._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2=function(){return g.asm.Pf.apply(null,arguments)},Yh=g._emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4=function(){return g.asm.Qf.apply(null,arguments)},Zh=g._emscripten_bind_btConeTwistConstraint_enableFeedback_1=\nfunction(){return g.asm.Rf.apply(null,arguments)},$h=g._emscripten_bind_btConeTwistConstraint_enableMotor_1=function(){return g.asm.Sf.apply(null,arguments)},ai=g._emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.Tf.apply(null,arguments)},bi=g._emscripten_bind_btConeTwistConstraint_getParam_2=function(){return g.asm.Uf.apply(null,arguments)},ci=g._emscripten_bind_btConeTwistConstraint_setAngularOnly_1=function(){return g.asm.Vf.apply(null,arguments)},di=\ng._emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.Wf.apply(null,arguments)},ei=g._emscripten_bind_btConeTwistConstraint_setDamping_1=function(){return g.asm.Xf.apply(null,arguments)},fi=g._emscripten_bind_btConeTwistConstraint_setLimit_2=function(){return g.asm.Yf.apply(null,arguments)},gi=g._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1=function(){return g.asm.Zf.apply(null,arguments)},hi=g._emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1=\nfunction(){return g.asm._f.apply(null,arguments)},ii=g._emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1=function(){return g.asm.$f.apply(null,arguments)},ji=g._emscripten_bind_btConeTwistConstraint_setMotorTarget_1=function(){return g.asm.ag.apply(null,arguments)},ki=g._emscripten_bind_btConeTwistConstraint_setParam_3=function(){return g.asm.bg.apply(null,arguments)},li=g._emscripten_bind_btConstCollisionObjectArray___destroy___0=function(){return g.asm.cg.apply(null,arguments)},\nmi=g._emscripten_bind_btConstCollisionObjectArray_at_1=function(){return g.asm.dg.apply(null,arguments)},ni=g._emscripten_bind_btConstCollisionObjectArray_size_0=function(){return g.asm.eg.apply(null,arguments)},oi=g._emscripten_bind_btConstraintSetting___destroy___0=function(){return g.asm.fg.apply(null,arguments)},pi=g._emscripten_bind_btConstraintSetting_btConstraintSetting_0=function(){return g.asm.gg.apply(null,arguments)},qi=g._emscripten_bind_btConstraintSetting_get_m_damping_0=function(){return g.asm.hg.apply(null,\narguments)},ri=g._emscripten_bind_btConstraintSetting_get_m_impulseClamp_0=function(){return g.asm.ig.apply(null,arguments)},si=g._emscripten_bind_btConstraintSetting_get_m_tau_0=function(){return g.asm.jg.apply(null,arguments)},ti=g._emscripten_bind_btConstraintSetting_set_m_damping_1=function(){return g.asm.kg.apply(null,arguments)},ui=g._emscripten_bind_btConstraintSetting_set_m_impulseClamp_1=function(){return g.asm.lg.apply(null,arguments)},vi=g._emscripten_bind_btConstraintSetting_set_m_tau_1=\nfunction(){return g.asm.mg.apply(null,arguments)},wi=g._emscripten_bind_btConstraintSolver___destroy___0=function(){return g.asm.ng.apply(null,arguments)},xi=g._emscripten_bind_btContactSolverInfo___destroy___0=function(){return g.asm.og.apply(null,arguments)},yi=g._emscripten_bind_btContactSolverInfo_get_m_numIterations_0=function(){return g.asm.pg.apply(null,arguments)},zi=g._emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0=function(){return g.asm.qg.apply(null,arguments)},\nAi=g._emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0=function(){return g.asm.rg.apply(null,arguments)},Bi=g._emscripten_bind_btContactSolverInfo_set_m_numIterations_1=function(){return g.asm.sg.apply(null,arguments)},Ci=g._emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1=function(){return g.asm.tg.apply(null,arguments)},Di=g._emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1=function(){return g.asm.ug.apply(null,arguments)},Ei=g._emscripten_bind_btConvexHullShape___destroy___0=\nfunction(){return g.asm.vg.apply(null,arguments)},Fi=g._emscripten_bind_btConvexHullShape_addPoint_1=function(){return g.asm.wg.apply(null,arguments)},Gi=g._emscripten_bind_btConvexHullShape_addPoint_2=function(){return g.asm.xg.apply(null,arguments)},Hi=g._emscripten_bind_btConvexHullShape_btConvexHullShape_0=function(){return g.asm.yg.apply(null,arguments)},Ii=g._emscripten_bind_btConvexHullShape_btConvexHullShape_1=function(){return g.asm.zg.apply(null,arguments)},Ji=g._emscripten_bind_btConvexHullShape_btConvexHullShape_2=\nfunction(){return g.asm.Ag.apply(null,arguments)},Ki=g._emscripten_bind_btConvexHullShape_calculateLocalInertia_2=function(){return g.asm.Bg.apply(null,arguments)},Li=g._emscripten_bind_btConvexHullShape_getConvexPolyhedron_0=function(){return g.asm.Cg.apply(null,arguments)},Mi=g._emscripten_bind_btConvexHullShape_getLocalScaling_0=function(){return g.asm.Dg.apply(null,arguments)},Ni=g._emscripten_bind_btConvexHullShape_getMargin_0=function(){return g.asm.Eg.apply(null,arguments)},Oi=g._emscripten_bind_btConvexHullShape_getNumVertices_0=\nfunction(){return g.asm.Fg.apply(null,arguments)},Pi=g._emscripten_bind_btConvexHullShape_initializePolyhedralFeatures_1=function(){return g.asm.Gg.apply(null,arguments)},Qi=g._emscripten_bind_btConvexHullShape_recalcLocalAabb_0=function(){return g.asm.Hg.apply(null,arguments)},Ri=g._emscripten_bind_btConvexHullShape_setLocalScaling_1=function(){return g.asm.Ig.apply(null,arguments)},Si=g._emscripten_bind_btConvexHullShape_setMargin_1=function(){return g.asm.Jg.apply(null,arguments)},Ti=g._emscripten_bind_btConvexPolyhedron___destroy___0=\nfunction(){return g.asm.Kg.apply(null,arguments)},Ui=g._emscripten_bind_btConvexPolyhedron_get_m_faces_0=function(){return g.asm.Lg.apply(null,arguments)},Vi=g._emscripten_bind_btConvexPolyhedron_get_m_vertices_0=function(){return g.asm.Mg.apply(null,arguments)},Wi=g._emscripten_bind_btConvexPolyhedron_set_m_faces_1=function(){return g.asm.Ng.apply(null,arguments)},Xi=g._emscripten_bind_btConvexPolyhedron_set_m_vertices_1=function(){return g.asm.Og.apply(null,arguments)},Yi=g._emscripten_bind_btConvexShape___destroy___0=\nfunction(){return g.asm.Pg.apply(null,arguments)},Zi=g._emscripten_bind_btConvexShape_calculateLocalInertia_2=function(){return g.asm.Qg.apply(null,arguments)},$i=g._emscripten_bind_btConvexShape_getLocalScaling_0=function(){return g.asm.Rg.apply(null,arguments)},aj=g._emscripten_bind_btConvexShape_getMargin_0=function(){return g.asm.Sg.apply(null,arguments)},bj=g._emscripten_bind_btConvexShape_setLocalScaling_1=function(){return g.asm.Tg.apply(null,arguments)},cj=g._emscripten_bind_btConvexShape_setMargin_1=\nfunction(){return g.asm.Ug.apply(null,arguments)},dj=g._emscripten_bind_btConvexTriangleMeshShape___destroy___0=function(){return g.asm.Vg.apply(null,arguments)},ej=g._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1=function(){return g.asm.Wg.apply(null,arguments)},fj=g._emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2=function(){return g.asm.Xg.apply(null,arguments)},gj=g._emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2=function(){return g.asm.Yg.apply(null,\narguments)},hj=g._emscripten_bind_btConvexTriangleMeshShape_getLocalScaling_0=function(){return g.asm.Zg.apply(null,arguments)},ij=g._emscripten_bind_btConvexTriangleMeshShape_getMargin_0=function(){return g.asm._g.apply(null,arguments)},jj=g._emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1=function(){return g.asm.$g.apply(null,arguments)},kj=g._emscripten_bind_btConvexTriangleMeshShape_setMargin_1=function(){return g.asm.ah.apply(null,arguments)},lj=g._emscripten_bind_btCylinderShapeX___destroy___0=\nfunction(){return g.asm.bh.apply(null,arguments)},mj=g._emscripten_bind_btCylinderShapeX_btCylinderShapeX_1=function(){return g.asm.ch.apply(null,arguments)},nj=g._emscripten_bind_btCylinderShapeX_calculateLocalInertia_2=function(){return g.asm.dh.apply(null,arguments)},oj=g._emscripten_bind_btCylinderShapeX_getLocalScaling_0=function(){return g.asm.eh.apply(null,arguments)},pj=g._emscripten_bind_btCylinderShapeX_getMargin_0=function(){return g.asm.fh.apply(null,arguments)},qj=g._emscripten_bind_btCylinderShapeX_setLocalScaling_1=\nfunction(){return g.asm.gh.apply(null,arguments)},rj=g._emscripten_bind_btCylinderShapeX_setMargin_1=function(){return g.asm.hh.apply(null,arguments)},sj=g._emscripten_bind_btCylinderShapeZ___destroy___0=function(){return g.asm.ih.apply(null,arguments)},tj=g._emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1=function(){return g.asm.jh.apply(null,arguments)},uj=g._emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2=function(){return g.asm.kh.apply(null,arguments)},vj=g._emscripten_bind_btCylinderShapeZ_getLocalScaling_0=\nfunction(){return g.asm.lh.apply(null,arguments)},wj=g._emscripten_bind_btCylinderShapeZ_getMargin_0=function(){return g.asm.mh.apply(null,arguments)},xj=g._emscripten_bind_btCylinderShapeZ_setLocalScaling_1=function(){return g.asm.nh.apply(null,arguments)},yj=g._emscripten_bind_btCylinderShapeZ_setMargin_1=function(){return g.asm.oh.apply(null,arguments)},zj=g._emscripten_bind_btCylinderShape___destroy___0=function(){return g.asm.ph.apply(null,arguments)},Aj=g._emscripten_bind_btCylinderShape_btCylinderShape_1=\nfunction(){return g.asm.qh.apply(null,arguments)},Bj=g._emscripten_bind_btCylinderShape_calculateLocalInertia_2=function(){return g.asm.rh.apply(null,arguments)},Cj=g._emscripten_bind_btCylinderShape_getLocalScaling_0=function(){return g.asm.sh.apply(null,arguments)},Dj=g._emscripten_bind_btCylinderShape_getMargin_0=function(){return g.asm.th.apply(null,arguments)},Ej=g._emscripten_bind_btCylinderShape_setLocalScaling_1=function(){return g.asm.uh.apply(null,arguments)},Fj=g._emscripten_bind_btCylinderShape_setMargin_1=\nfunction(){return g.asm.vh.apply(null,arguments)},Gj=g._emscripten_bind_btDbvtBroadphase___destroy___0=function(){return g.asm.wh.apply(null,arguments)},Hj=g._emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0=function(){return g.asm.xh.apply(null,arguments)},Ij=g._emscripten_bind_btDbvtBroadphase_getOverlappingPairCache_0=function(){return g.asm.yh.apply(null,arguments)},Jj=g._emscripten_bind_btDefaultCollisionConfiguration___destroy___0=function(){return g.asm.zh.apply(null,arguments)},Kj=g._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0=\nfunction(){return g.asm.Ah.apply(null,arguments)},Lj=g._emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1=function(){return g.asm.Bh.apply(null,arguments)},Mj=g._emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0=function(){return g.asm.Ch.apply(null,arguments)},Nj=g._emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0=function(){return g.asm.Dh.apply(null,arguments)},Oj=g._emscripten_bind_btDefaultMotionState___destroy___0=\nfunction(){return g.asm.Eh.apply(null,arguments)},Pj=g._emscripten_bind_btDefaultMotionState_btDefaultMotionState_0=function(){return g.asm.Fh.apply(null,arguments)},Qj=g._emscripten_bind_btDefaultMotionState_btDefaultMotionState_1=function(){return g.asm.Gh.apply(null,arguments)},Rj=g._emscripten_bind_btDefaultMotionState_btDefaultMotionState_2=function(){return g.asm.Hh.apply(null,arguments)},Sj=g._emscripten_bind_btDefaultMotionState_getWorldTransform_1=function(){return g.asm.Ih.apply(null,arguments)},\nTj=g._emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0=function(){return g.asm.Jh.apply(null,arguments)},Uj=g._emscripten_bind_btDefaultMotionState_setWorldTransform_1=function(){return g.asm.Kh.apply(null,arguments)},Vj=g._emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1=function(){return g.asm.Lh.apply(null,arguments)},Wj=g._emscripten_bind_btDiscreteDynamicsWorld___destroy___0=function(){return g.asm.Mh.apply(null,arguments)},Xj=g._emscripten_bind_btDiscreteDynamicsWorld_addAction_1=\nfunction(){return g.asm.Nh.apply(null,arguments)},Yj=g._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1=function(){return g.asm.Oh.apply(null,arguments)},Zj=g._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2=function(){return g.asm.Ph.apply(null,arguments)},ak=g._emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3=function(){return g.asm.Qh.apply(null,arguments)},bk=g._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1=function(){return g.asm.Rh.apply(null,\narguments)},ck=g._emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2=function(){return g.asm.Sh.apply(null,arguments)},dk=g._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1=function(){return g.asm.Th.apply(null,arguments)},ek=g._emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3=function(){return g.asm.Uh.apply(null,arguments)},fk=g._emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4=function(){return g.asm.Vh.apply(null,arguments)},gk=g._emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3=\nfunction(){return g.asm.Wh.apply(null,arguments)},hk=g._emscripten_bind_btDiscreteDynamicsWorld_contactTest_2=function(){return g.asm.Xh.apply(null,arguments)},ik=g._emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5=function(){return g.asm.Yh.apply(null,arguments)},jk=g._emscripten_bind_btDiscreteDynamicsWorld_debugDrawObject_3=function(){return g.asm.Zh.apply(null,arguments)},kk=g._emscripten_bind_btDiscreteDynamicsWorld_debugDrawWorld_0=function(){return g.asm._h.apply(null,arguments)},\nlk=g._emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0=function(){return g.asm.$h.apply(null,arguments)},mk=g._emscripten_bind_btDiscreteDynamicsWorld_getDebugDrawer_0=function(){return g.asm.ai.apply(null,arguments)},nk=g._emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0=function(){return g.asm.bi.apply(null,arguments)},ok=g._emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0=function(){return g.asm.ci.apply(null,arguments)},pk=g._emscripten_bind_btDiscreteDynamicsWorld_getGravity_0=\nfunction(){return g.asm.di.apply(null,arguments)},qk=g._emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0=function(){return g.asm.ei.apply(null,arguments)},rk=g._emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0=function(){return g.asm.fi.apply(null,arguments)},sk=g._emscripten_bind_btDiscreteDynamicsWorld_rayTest_3=function(){return g.asm.gi.apply(null,arguments)},tk=g._emscripten_bind_btDiscreteDynamicsWorld_removeAction_1=function(){return g.asm.hi.apply(null,arguments)},uk=g._emscripten_bind_btDiscreteDynamicsWorld_removeCollisionObject_1=\nfunction(){return g.asm.ii.apply(null,arguments)},vk=g._emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1=function(){return g.asm.ji.apply(null,arguments)},wk=g._emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1=function(){return g.asm.ki.apply(null,arguments)},xk=g._emscripten_bind_btDiscreteDynamicsWorld_setContactAddedCallback_1=function(){return g.asm.li.apply(null,arguments)},yk=g._emscripten_bind_btDiscreteDynamicsWorld_setContactDestroyedCallback_1=function(){return g.asm.mi.apply(null,\narguments)},zk=g._emscripten_bind_btDiscreteDynamicsWorld_setContactProcessedCallback_1=function(){return g.asm.ni.apply(null,arguments)},Ak=g._emscripten_bind_btDiscreteDynamicsWorld_setDebugDrawer_1=function(){return g.asm.oi.apply(null,arguments)},Bk=g._emscripten_bind_btDiscreteDynamicsWorld_setForceUpdateAllAabbs_1=function(){return g.asm.pi.apply(null,arguments)},Ck=g._emscripten_bind_btDiscreteDynamicsWorld_setGravity_1=function(){return g.asm.qi.apply(null,arguments)},Dk=g._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1=\nfunction(){return g.asm.ri.apply(null,arguments)},Ek=g._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2=function(){return g.asm.si.apply(null,arguments)},Fk=g._emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3=function(){return g.asm.ti.apply(null,arguments)},Gk=g._emscripten_bind_btDiscreteDynamicsWorld_updateSingleAabb_1=function(){return g.asm.ui.apply(null,arguments)},Hk=g._emscripten_bind_btDispatcherInfo___destroy___0=function(){return g.asm.vi.apply(null,arguments)},Ik=g._emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0=\nfunction(){return g.asm.wi.apply(null,arguments)},Jk=g._emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0=function(){return g.asm.xi.apply(null,arguments)},Kk=g._emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0=function(){return g.asm.yi.apply(null,arguments)},Lk=g._emscripten_bind_btDispatcherInfo_get_m_enableSPU_0=function(){return g.asm.zi.apply(null,arguments)},Mk=g._emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0=function(){return g.asm.Ai.apply(null,\narguments)},Nk=g._emscripten_bind_btDispatcherInfo_get_m_stepCount_0=function(){return g.asm.Bi.apply(null,arguments)},Ok=g._emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0=function(){return g.asm.Ci.apply(null,arguments)},Pk=g._emscripten_bind_btDispatcherInfo_get_m_timeStep_0=function(){return g.asm.Di.apply(null,arguments)},Qk=g._emscripten_bind_btDispatcherInfo_get_m_useContinuous_0=function(){return g.asm.Ei.apply(null,arguments)},Rk=g._emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0=\nfunction(){return g.asm.Fi.apply(null,arguments)},Sk=g._emscripten_bind_btDispatcherInfo_get_m_useEpa_0=function(){return g.asm.Gi.apply(null,arguments)},Tk=g._emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1=function(){return g.asm.Hi.apply(null,arguments)},Uk=g._emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1=function(){return g.asm.Ii.apply(null,arguments)},Vk=g._emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1=function(){return g.asm.Ji.apply(null,\narguments)},Wk=g._emscripten_bind_btDispatcherInfo_set_m_enableSPU_1=function(){return g.asm.Ki.apply(null,arguments)},Xk=g._emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1=function(){return g.asm.Li.apply(null,arguments)},Yk=g._emscripten_bind_btDispatcherInfo_set_m_stepCount_1=function(){return g.asm.Mi.apply(null,arguments)},Zk=g._emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1=function(){return g.asm.Ni.apply(null,arguments)},$k=g._emscripten_bind_btDispatcherInfo_set_m_timeStep_1=\nfunction(){return g.asm.Oi.apply(null,arguments)},al=g._emscripten_bind_btDispatcherInfo_set_m_useContinuous_1=function(){return g.asm.Pi.apply(null,arguments)},bl=g._emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1=function(){return g.asm.Qi.apply(null,arguments)},cl=g._emscripten_bind_btDispatcherInfo_set_m_useEpa_1=function(){return g.asm.Ri.apply(null,arguments)},dl=g._emscripten_bind_btDispatcher___destroy___0=function(){return g.asm.Si.apply(null,arguments)},el=g._emscripten_bind_btDispatcher_getManifoldByIndexInternal_1=\nfunction(){return g.asm.Ti.apply(null,arguments)},fl=g._emscripten_bind_btDispatcher_getNumManifolds_0=function(){return g.asm.Ui.apply(null,arguments)},gl=g._emscripten_bind_btDynamicsWorld___destroy___0=function(){return g.asm.Vi.apply(null,arguments)},hl=g._emscripten_bind_btDynamicsWorld_addAction_1=function(){return g.asm.Wi.apply(null,arguments)},il=g._emscripten_bind_btDynamicsWorld_addCollisionObject_1=function(){return g.asm.Xi.apply(null,arguments)},jl=g._emscripten_bind_btDynamicsWorld_addCollisionObject_2=\nfunction(){return g.asm.Yi.apply(null,arguments)},kl=g._emscripten_bind_btDynamicsWorld_addCollisionObject_3=function(){return g.asm.Zi.apply(null,arguments)},ll=g._emscripten_bind_btDynamicsWorld_contactPairTest_3=function(){return g.asm._i.apply(null,arguments)},ml=g._emscripten_bind_btDynamicsWorld_contactTest_2=function(){return g.asm.$i.apply(null,arguments)},nl=g._emscripten_bind_btDynamicsWorld_convexSweepTest_5=function(){return g.asm.aj.apply(null,arguments)},ol=g._emscripten_bind_btDynamicsWorld_debugDrawObject_3=\nfunction(){return g.asm.bj.apply(null,arguments)},pl=g._emscripten_bind_btDynamicsWorld_debugDrawWorld_0=function(){return g.asm.cj.apply(null,arguments)},ql=g._emscripten_bind_btDynamicsWorld_getBroadphase_0=function(){return g.asm.dj.apply(null,arguments)},rl=g._emscripten_bind_btDynamicsWorld_getDebugDrawer_0=function(){return g.asm.ej.apply(null,arguments)},sl=g._emscripten_bind_btDynamicsWorld_getDispatchInfo_0=function(){return g.asm.fj.apply(null,arguments)},tl=g._emscripten_bind_btDynamicsWorld_getDispatcher_0=\nfunction(){return g.asm.gj.apply(null,arguments)},ul=g._emscripten_bind_btDynamicsWorld_getPairCache_0=function(){return g.asm.hj.apply(null,arguments)},vl=g._emscripten_bind_btDynamicsWorld_getSolverInfo_0=function(){return g.asm.ij.apply(null,arguments)},wl=g._emscripten_bind_btDynamicsWorld_rayTest_3=function(){return g.asm.jj.apply(null,arguments)},xl=g._emscripten_bind_btDynamicsWorld_removeAction_1=function(){return g.asm.kj.apply(null,arguments)},yl=g._emscripten_bind_btDynamicsWorld_removeCollisionObject_1=\nfunction(){return g.asm.lj.apply(null,arguments)},zl=g._emscripten_bind_btDynamicsWorld_setDebugDrawer_1=function(){return g.asm.mj.apply(null,arguments)},Al=g._emscripten_bind_btDynamicsWorld_setForceUpdateAllAabbs_1=function(){return g.asm.nj.apply(null,arguments)},Bl=g._emscripten_bind_btDynamicsWorld_updateSingleAabb_1=function(){return g.asm.oj.apply(null,arguments)},Cl=g._emscripten_bind_btEmptyShape___destroy___0=function(){return g.asm.pj.apply(null,arguments)},Dl=g._emscripten_bind_btEmptyShape_btEmptyShape_0=\nfunction(){return g.asm.qj.apply(null,arguments)},El=g._emscripten_bind_btEmptyShape_calculateLocalInertia_2=function(){return g.asm.rj.apply(null,arguments)},Fl=g._emscripten_bind_btEmptyShape_getLocalScaling_0=function(){return g.asm.sj.apply(null,arguments)},Gl=g._emscripten_bind_btEmptyShape_setLocalScaling_1=function(){return g.asm.tj.apply(null,arguments)},Hl=g._emscripten_bind_btFaceArray___destroy___0=function(){return g.asm.uj.apply(null,arguments)},Il=g._emscripten_bind_btFaceArray_at_1=\nfunction(){return g.asm.vj.apply(null,arguments)},Jl=g._emscripten_bind_btFaceArray_size_0=function(){return g.asm.wj.apply(null,arguments)},Kl=g._emscripten_bind_btFace___destroy___0=function(){return g.asm.xj.apply(null,arguments)},Ll=g._emscripten_bind_btFace_get_m_indices_0=function(){return g.asm.yj.apply(null,arguments)},Ml=g._emscripten_bind_btFace_get_m_plane_1=function(){return g.asm.zj.apply(null,arguments)},Nl=g._emscripten_bind_btFace_set_m_indices_1=function(){return g.asm.Aj.apply(null,\narguments)},Ol=g._emscripten_bind_btFace_set_m_plane_2=function(){return g.asm.Bj.apply(null,arguments)},Pl=g._emscripten_bind_btFixedConstraint___destroy___0=function(){return g.asm.Cj.apply(null,arguments)},Ql=g._emscripten_bind_btFixedConstraint_btFixedConstraint_4=function(){return g.asm.Dj.apply(null,arguments)},Rl=g._emscripten_bind_btFixedConstraint_enableFeedback_1=function(){return g.asm.Ej.apply(null,arguments)},Sl=g._emscripten_bind_btFixedConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.Fj.apply(null,\narguments)},Tl=g._emscripten_bind_btFixedConstraint_getParam_2=function(){return g.asm.Gj.apply(null,arguments)},Ul=g._emscripten_bind_btFixedConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.Hj.apply(null,arguments)},Vl=g._emscripten_bind_btFixedConstraint_setParam_3=function(){return g.asm.Ij.apply(null,arguments)},Wl=g._emscripten_bind_btGeneric6DofConstraint___destroy___0=function(){return g.asm.Jj.apply(null,arguments)},Xl=g._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3=\nfunction(){return g.asm.Kj.apply(null,arguments)},Yl=g._emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5=function(){return g.asm.Lj.apply(null,arguments)},Zl=g._emscripten_bind_btGeneric6DofConstraint_enableFeedback_1=function(){return g.asm.Mj.apply(null,arguments)},$l=g._emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.Nj.apply(null,arguments)},am=g._emscripten_bind_btGeneric6DofConstraint_getFrameOffsetA_0=function(){return g.asm.Oj.apply(null,\narguments)},bm=g._emscripten_bind_btGeneric6DofConstraint_getParam_2=function(){return g.asm.Pj.apply(null,arguments)},cm=g._emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1=function(){return g.asm.Qj.apply(null,arguments)},dm=g._emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1=function(){return g.asm.Rj.apply(null,arguments)},em=g._emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.Sj.apply(null,arguments)},fm=g._emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1=\nfunction(){return g.asm.Tj.apply(null,arguments)},gm=g._emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1=function(){return g.asm.Uj.apply(null,arguments)},hm=g._emscripten_bind_btGeneric6DofConstraint_setParam_3=function(){return g.asm.Vj.apply(null,arguments)},im=g._emscripten_bind_btGeneric6DofSpringConstraint___destroy___0=function(){return g.asm.Wj.apply(null,arguments)},jm=g._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3=function(){return g.asm.Xj.apply(null,\narguments)},km=g._emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5=function(){return g.asm.Yj.apply(null,arguments)},lm=g._emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1=function(){return g.asm.Zj.apply(null,arguments)},mm=g._emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2=function(){return g.asm._j.apply(null,arguments)},nm=g._emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.$j.apply(null,\narguments)},om=g._emscripten_bind_btGeneric6DofSpringConstraint_getFrameOffsetA_0=function(){return g.asm.ak.apply(null,arguments)},pm=g._emscripten_bind_btGeneric6DofSpringConstraint_getParam_2=function(){return g.asm.bk.apply(null,arguments)},qm=g._emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1=function(){return g.asm.ck.apply(null,arguments)},rm=g._emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1=function(){return g.asm.dk.apply(null,arguments)},sm=g._emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1=\nfunction(){return g.asm.ek.apply(null,arguments)},tm=g._emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2=function(){return g.asm.fk.apply(null,arguments)},um=g._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_0=function(){return g.asm.gk.apply(null,arguments)},wm=g._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_1=function(){return g.asm.hk.apply(null,arguments)},xm=g._emscripten_bind_btGeneric6DofSpringConstraint_setEquilibriumPoint_2=function(){return g.asm.ik.apply(null,\narguments)},ym=g._emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1=function(){return g.asm.jk.apply(null,arguments)},zm=g._emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1=function(){return g.asm.kk.apply(null,arguments)},Am=g._emscripten_bind_btGeneric6DofSpringConstraint_setParam_3=function(){return g.asm.lk.apply(null,arguments)},Bm=g._emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2=function(){return g.asm.mk.apply(null,arguments)},Cm=g._emscripten_bind_btGhostObject___destroy___0=\nfunction(){return g.asm.nk.apply(null,arguments)},Dm=g._emscripten_bind_btGhostObject_activate_0=function(){return g.asm.ok.apply(null,arguments)},Em=g._emscripten_bind_btGhostObject_activate_1=function(){return g.asm.pk.apply(null,arguments)},Fm=g._emscripten_bind_btGhostObject_btGhostObject_0=function(){return g.asm.qk.apply(null,arguments)},Gm=g._emscripten_bind_btGhostObject_forceActivationState_1=function(){return g.asm.rk.apply(null,arguments)},Hm=g._emscripten_bind_btGhostObject_getBroadphaseHandle_0=\nfunction(){return g.asm.sk.apply(null,arguments)},Im=g._emscripten_bind_btGhostObject_getCollisionFlags_0=function(){return g.asm.tk.apply(null,arguments)},Jm=g._emscripten_bind_btGhostObject_getCollisionShape_0=function(){return g.asm.uk.apply(null,arguments)},Km=g._emscripten_bind_btGhostObject_getFriction_0=function(){return g.asm.vk.apply(null,arguments)},Lm=g._emscripten_bind_btGhostObject_getNumOverlappingObjects_0=function(){return g.asm.wk.apply(null,arguments)},Mm=g._emscripten_bind_btGhostObject_getOverlappingObject_1=\nfunction(){return g.asm.xk.apply(null,arguments)},Nm=g._emscripten_bind_btGhostObject_getRestitution_0=function(){return g.asm.yk.apply(null,arguments)},Om=g._emscripten_bind_btGhostObject_getRollingFriction_0=function(){return g.asm.zk.apply(null,arguments)},Pm=g._emscripten_bind_btGhostObject_getUserIndex_0=function(){return g.asm.Ak.apply(null,arguments)},Qm=g._emscripten_bind_btGhostObject_getUserPointer_0=function(){return g.asm.Bk.apply(null,arguments)},Rm=g._emscripten_bind_btGhostObject_getWorldTransform_0=\nfunction(){return g.asm.Ck.apply(null,arguments)},Sm=g._emscripten_bind_btGhostObject_isActive_0=function(){return g.asm.Dk.apply(null,arguments)},Tm=g._emscripten_bind_btGhostObject_isKinematicObject_0=function(){return g.asm.Ek.apply(null,arguments)},Um=g._emscripten_bind_btGhostObject_isStaticObject_0=function(){return g.asm.Fk.apply(null,arguments)},Vm=g._emscripten_bind_btGhostObject_isStaticOrKinematicObject_0=function(){return g.asm.Gk.apply(null,arguments)},Wm=g._emscripten_bind_btGhostObject_setActivationState_1=\nfunction(){return g.asm.Hk.apply(null,arguments)},Xm=g._emscripten_bind_btGhostObject_setAnisotropicFriction_2=function(){return g.asm.Ik.apply(null,arguments)},Ym=g._emscripten_bind_btGhostObject_setCcdMotionThreshold_1=function(){return g.asm.Jk.apply(null,arguments)},Zm=g._emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1=function(){return g.asm.Kk.apply(null,arguments)},$m=g._emscripten_bind_btGhostObject_setCollisionFlags_1=function(){return g.asm.Lk.apply(null,arguments)},an=g._emscripten_bind_btGhostObject_setCollisionShape_1=\nfunction(){return g.asm.Mk.apply(null,arguments)},bn=g._emscripten_bind_btGhostObject_setContactProcessingThreshold_1=function(){return g.asm.Nk.apply(null,arguments)},cn=g._emscripten_bind_btGhostObject_setFriction_1=function(){return g.asm.Ok.apply(null,arguments)},dn=g._emscripten_bind_btGhostObject_setRestitution_1=function(){return g.asm.Pk.apply(null,arguments)},en=g._emscripten_bind_btGhostObject_setRollingFriction_1=function(){return g.asm.Qk.apply(null,arguments)},fn=g._emscripten_bind_btGhostObject_setUserIndex_1=\nfunction(){return g.asm.Rk.apply(null,arguments)},gn=g._emscripten_bind_btGhostObject_setUserPointer_1=function(){return g.asm.Sk.apply(null,arguments)},hn=g._emscripten_bind_btGhostObject_setWorldTransform_1=function(){return g.asm.Tk.apply(null,arguments)},jn=g._emscripten_bind_btGhostPairCallback___destroy___0=function(){return g.asm.Uk.apply(null,arguments)},kn=g._emscripten_bind_btGhostPairCallback_btGhostPairCallback_0=function(){return g.asm.Vk.apply(null,arguments)},ln=g._emscripten_bind_btHeightfieldTerrainShape___destroy___0=\nfunction(){return g.asm.Wk.apply(null,arguments)},mn=g._emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9=function(){return g.asm.Xk.apply(null,arguments)},nn=g._emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2=function(){return g.asm.Yk.apply(null,arguments)},on=g._emscripten_bind_btHeightfieldTerrainShape_getLocalScaling_0=function(){return g.asm.Zk.apply(null,arguments)},pn=g._emscripten_bind_btHeightfieldTerrainShape_getMargin_0=function(){return g.asm._k.apply(null,\narguments)},qn=g._emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1=function(){return g.asm.$k.apply(null,arguments)},rn=g._emscripten_bind_btHeightfieldTerrainShape_setMargin_1=function(){return g.asm.al.apply(null,arguments)},sn=g._emscripten_bind_btHingeConstraint___destroy___0=function(){return g.asm.bl.apply(null,arguments)},tn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_2=function(){return g.asm.cl.apply(null,arguments)},un=g._emscripten_bind_btHingeConstraint_btHingeConstraint_3=\nfunction(){return g.asm.dl.apply(null,arguments)},vn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_4=function(){return g.asm.el.apply(null,arguments)},wn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_5=function(){return g.asm.fl.apply(null,arguments)},xn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_6=function(){return g.asm.gl.apply(null,arguments)},yn=g._emscripten_bind_btHingeConstraint_btHingeConstraint_7=function(){return g.asm.hl.apply(null,arguments)},zn=g._emscripten_bind_btHingeConstraint_enableAngularMotor_3=\nfunction(){return g.asm.il.apply(null,arguments)},An=g._emscripten_bind_btHingeConstraint_enableFeedback_1=function(){return g.asm.jl.apply(null,arguments)},Bn=g._emscripten_bind_btHingeConstraint_enableMotor_1=function(){return g.asm.kl.apply(null,arguments)},Cn=g._emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.ll.apply(null,arguments)},Dn=g._emscripten_bind_btHingeConstraint_getParam_2=function(){return g.asm.ml.apply(null,arguments)},En=g._emscripten_bind_btHingeConstraint_setAngularOnly_1=\nfunction(){return g.asm.nl.apply(null,arguments)},Fn=g._emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.ol.apply(null,arguments)},Gn=g._emscripten_bind_btHingeConstraint_setLimit_4=function(){return g.asm.pl.apply(null,arguments)},Hn=g._emscripten_bind_btHingeConstraint_setLimit_5=function(){return g.asm.ql.apply(null,arguments)},In=g._emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1=function(){return g.asm.rl.apply(null,arguments)},Jn=g._emscripten_bind_btHingeConstraint_setMotorTarget_2=\nfunction(){return g.asm.sl.apply(null,arguments)},Kn=g._emscripten_bind_btHingeConstraint_setParam_3=function(){return g.asm.tl.apply(null,arguments)},Ln=g._emscripten_bind_btIDebugDraw___destroy___0=function(){return g.asm.ul.apply(null,arguments)},Mn=g._emscripten_bind_btIDebugDraw_draw3dText_2=function(){return g.asm.vl.apply(null,arguments)},Nn=g._emscripten_bind_btIDebugDraw_drawContactPoint_5=function(){return g.asm.wl.apply(null,arguments)},On=g._emscripten_bind_btIDebugDraw_drawLine_3=function(){return g.asm.xl.apply(null,\narguments)},Pn=g._emscripten_bind_btIDebugDraw_getDebugMode_0=function(){return g.asm.yl.apply(null,arguments)},Qn=g._emscripten_bind_btIDebugDraw_reportErrorWarning_1=function(){return g.asm.zl.apply(null,arguments)},Rn=g._emscripten_bind_btIDebugDraw_setDebugMode_1=function(){return g.asm.Al.apply(null,arguments)},Sn=g._emscripten_bind_btIndexedMeshArray___destroy___0=function(){return g.asm.Bl.apply(null,arguments)},Tn=g._emscripten_bind_btIndexedMeshArray_at_1=function(){return g.asm.Cl.apply(null,\narguments)},Un=g._emscripten_bind_btIndexedMeshArray_size_0=function(){return g.asm.Dl.apply(null,arguments)},Vn=g._emscripten_bind_btIndexedMesh___destroy___0=function(){return g.asm.El.apply(null,arguments)},Wn=g._emscripten_bind_btIndexedMesh_get_m_numTriangles_0=function(){return g.asm.Fl.apply(null,arguments)},Xn=g._emscripten_bind_btIndexedMesh_set_m_numTriangles_1=function(){return g.asm.Gl.apply(null,arguments)},Yn=g._emscripten_bind_btIntArray___destroy___0=function(){return g.asm.Hl.apply(null,\narguments)},Zn=g._emscripten_bind_btIntArray_at_1=function(){return g.asm.Il.apply(null,arguments)},$n=g._emscripten_bind_btIntArray_size_0=function(){return g.asm.Jl.apply(null,arguments)},ao=g._emscripten_bind_btKinematicCharacterController___destroy___0=function(){return g.asm.Kl.apply(null,arguments)},bo=g._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3=function(){return g.asm.Ll.apply(null,arguments)},co=g._emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4=\nfunction(){return g.asm.Ml.apply(null,arguments)},eo=g._emscripten_bind_btKinematicCharacterController_canJump_0=function(){return g.asm.Nl.apply(null,arguments)},fo=g._emscripten_bind_btKinematicCharacterController_getGhostObject_0=function(){return g.asm.Ol.apply(null,arguments)},go=g._emscripten_bind_btKinematicCharacterController_getGravity_0=function(){return g.asm.Pl.apply(null,arguments)},ho=g._emscripten_bind_btKinematicCharacterController_getMaxSlope_0=function(){return g.asm.Ql.apply(null,\narguments)},io=g._emscripten_bind_btKinematicCharacterController_jump_0=function(){return g.asm.Rl.apply(null,arguments)},jo=g._emscripten_bind_btKinematicCharacterController_onGround_0=function(){return g.asm.Sl.apply(null,arguments)},ko=g._emscripten_bind_btKinematicCharacterController_playerStep_2=function(){return g.asm.Tl.apply(null,arguments)},lo=g._emscripten_bind_btKinematicCharacterController_preStep_1=function(){return g.asm.Ul.apply(null,arguments)},mo=g._emscripten_bind_btKinematicCharacterController_setFallSpeed_1=\nfunction(){return g.asm.Vl.apply(null,arguments)},no=g._emscripten_bind_btKinematicCharacterController_setGravity_1=function(){return g.asm.Wl.apply(null,arguments)},oo=g._emscripten_bind_btKinematicCharacterController_setJumpSpeed_1=function(){return g.asm.Xl.apply(null,arguments)},po=g._emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1=function(){return g.asm.Yl.apply(null,arguments)},qo=g._emscripten_bind_btKinematicCharacterController_setMaxSlope_1=function(){return g.asm.Zl.apply(null,\narguments)},ro=g._emscripten_bind_btKinematicCharacterController_setUpAxis_1=function(){return g.asm._l.apply(null,arguments)},so=g._emscripten_bind_btKinematicCharacterController_setUpInterpolate_1=function(){return g.asm.$l.apply(null,arguments)},to=g._emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1=function(){return g.asm.am.apply(null,arguments)},uo=g._emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2=function(){return g.asm.bm.apply(null,arguments)},\nvo=g._emscripten_bind_btKinematicCharacterController_setWalkDirection_1=function(){return g.asm.cm.apply(null,arguments)},wo=g._emscripten_bind_btKinematicCharacterController_updateAction_2=function(){return g.asm.dm.apply(null,arguments)},xo=g._emscripten_bind_btKinematicCharacterController_warp_1=function(){return g.asm.em.apply(null,arguments)},yo=g._emscripten_bind_btManifoldPoint___destroy___0=function(){return g.asm.fm.apply(null,arguments)},zo=g._emscripten_bind_btManifoldPoint_getAppliedImpulse_0=\nfunction(){return g.asm.gm.apply(null,arguments)},Ao=g._emscripten_bind_btManifoldPoint_getDistance_0=function(){return g.asm.hm.apply(null,arguments)},Bo=g._emscripten_bind_btManifoldPoint_getPositionWorldOnA_0=function(){return g.asm.im.apply(null,arguments)},Co=g._emscripten_bind_btManifoldPoint_getPositionWorldOnB_0=function(){return g.asm.jm.apply(null,arguments)},Do=g._emscripten_bind_btManifoldPoint_get_m_localPointA_0=function(){return g.asm.km.apply(null,arguments)},Eo=g._emscripten_bind_btManifoldPoint_get_m_localPointB_0=\nfunction(){return g.asm.lm.apply(null,arguments)},Fo=g._emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0=function(){return g.asm.mm.apply(null,arguments)},Go=g._emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0=function(){return g.asm.nm.apply(null,arguments)},Ho=g._emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0=function(){return g.asm.om.apply(null,arguments)},Io=g._emscripten_bind_btManifoldPoint_get_m_userPersistentData_0=function(){return g.asm.pm.apply(null,arguments)},\nJo=g._emscripten_bind_btManifoldPoint_set_m_localPointA_1=function(){return g.asm.qm.apply(null,arguments)},Ko=g._emscripten_bind_btManifoldPoint_set_m_localPointB_1=function(){return g.asm.rm.apply(null,arguments)},Lo=g._emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1=function(){return g.asm.sm.apply(null,arguments)},Mo=g._emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1=function(){return g.asm.tm.apply(null,arguments)},No=g._emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1=\nfunction(){return g.asm.um.apply(null,arguments)},Oo=g._emscripten_bind_btManifoldPoint_set_m_userPersistentData_1=function(){return g.asm.vm.apply(null,arguments)},Po=g._emscripten_bind_btMatrix3x3___destroy___0=function(){return g.asm.wm.apply(null,arguments)},Qo=g._emscripten_bind_btMatrix3x3_getRotation_1=function(){return g.asm.xm.apply(null,arguments)},Ro=g._emscripten_bind_btMatrix3x3_getRow_1=function(){return g.asm.ym.apply(null,arguments)},So=g._emscripten_bind_btMatrix3x3_setEulerZYX_3=\nfunction(){return g.asm.zm.apply(null,arguments)},To=g._emscripten_bind_btMotionState___destroy___0=function(){return g.asm.Am.apply(null,arguments)},Uo=g._emscripten_bind_btMotionState_getWorldTransform_1=function(){return g.asm.Bm.apply(null,arguments)},Vo=g._emscripten_bind_btMotionState_setWorldTransform_1=function(){return g.asm.Cm.apply(null,arguments)},Wo=g._emscripten_bind_btMultiSphereShape___destroy___0=function(){return g.asm.Dm.apply(null,arguments)},Xo=g._emscripten_bind_btMultiSphereShape_btMultiSphereShape_3=\nfunction(){return g.asm.Em.apply(null,arguments)},Yo=g._emscripten_bind_btMultiSphereShape_calculateLocalInertia_2=function(){return g.asm.Fm.apply(null,arguments)},Zo=g._emscripten_bind_btMultiSphereShape_getLocalScaling_0=function(){return g.asm.Gm.apply(null,arguments)},$o=g._emscripten_bind_btMultiSphereShape_setLocalScaling_1=function(){return g.asm.Hm.apply(null,arguments)},ap=g._emscripten_bind_btOverlappingPairCache___destroy___0=function(){return g.asm.Im.apply(null,arguments)},bp=g._emscripten_bind_btOverlappingPairCache_getNumOverlappingPairs_0=\nfunction(){return g.asm.Jm.apply(null,arguments)},cp=g._emscripten_bind_btOverlappingPairCache_removeOverlappingPairsContainingProxy_2=function(){return g.asm.Km.apply(null,arguments)},dp=g._emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1=function(){return g.asm.Lm.apply(null,arguments)},ep=g._emscripten_bind_btOverlappingPairCallback___destroy___0=function(){return g.asm.Mm.apply(null,arguments)},fp=g._emscripten_bind_btPairCachingGhostObject___destroy___0=function(){return g.asm.Nm.apply(null,\narguments)},gp=g._emscripten_bind_btPairCachingGhostObject_activate_0=function(){return g.asm.Om.apply(null,arguments)},hp=g._emscripten_bind_btPairCachingGhostObject_activate_1=function(){return g.asm.Pm.apply(null,arguments)},ip=g._emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0=function(){return g.asm.Qm.apply(null,arguments)},jp=g._emscripten_bind_btPairCachingGhostObject_forceActivationState_1=function(){return g.asm.Rm.apply(null,arguments)},kp=g._emscripten_bind_btPairCachingGhostObject_getBroadphaseHandle_0=\nfunction(){return g.asm.Sm.apply(null,arguments)},lp=g._emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0=function(){return g.asm.Tm.apply(null,arguments)},mp=g._emscripten_bind_btPairCachingGhostObject_getCollisionShape_0=function(){return g.asm.Um.apply(null,arguments)},np=g._emscripten_bind_btPairCachingGhostObject_getFriction_0=function(){return g.asm.Vm.apply(null,arguments)},op=g._emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0=function(){return g.asm.Wm.apply(null,\narguments)},pp=g._emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1=function(){return g.asm.Xm.apply(null,arguments)},qp=g._emscripten_bind_btPairCachingGhostObject_getRestitution_0=function(){return g.asm.Ym.apply(null,arguments)},rp=g._emscripten_bind_btPairCachingGhostObject_getRollingFriction_0=function(){return g.asm.Zm.apply(null,arguments)},sp=g._emscripten_bind_btPairCachingGhostObject_getUserIndex_0=function(){return g.asm._m.apply(null,arguments)},tp=g._emscripten_bind_btPairCachingGhostObject_getUserPointer_0=\nfunction(){return g.asm.$m.apply(null,arguments)},up=g._emscripten_bind_btPairCachingGhostObject_getWorldTransform_0=function(){return g.asm.an.apply(null,arguments)},vp=g._emscripten_bind_btPairCachingGhostObject_isActive_0=function(){return g.asm.bn.apply(null,arguments)},wp=g._emscripten_bind_btPairCachingGhostObject_isKinematicObject_0=function(){return g.asm.cn.apply(null,arguments)},xp=g._emscripten_bind_btPairCachingGhostObject_isStaticObject_0=function(){return g.asm.dn.apply(null,arguments)},\nyp=g._emscripten_bind_btPairCachingGhostObject_isStaticOrKinematicObject_0=function(){return g.asm.en.apply(null,arguments)},zp=g._emscripten_bind_btPairCachingGhostObject_setActivationState_1=function(){return g.asm.fn.apply(null,arguments)},Ap=g._emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2=function(){return g.asm.gn.apply(null,arguments)},Bp=g._emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1=function(){return g.asm.hn.apply(null,arguments)},Cp=g._emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1=\nfunction(){return g.asm.jn.apply(null,arguments)},Dp=g._emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1=function(){return g.asm.kn.apply(null,arguments)},Ep=g._emscripten_bind_btPairCachingGhostObject_setCollisionShape_1=function(){return g.asm.ln.apply(null,arguments)},Fp=g._emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1=function(){return g.asm.mn.apply(null,arguments)},Gp=g._emscripten_bind_btPairCachingGhostObject_setFriction_1=function(){return g.asm.nn.apply(null,\narguments)},Hp=g._emscripten_bind_btPairCachingGhostObject_setRestitution_1=function(){return g.asm.on.apply(null,arguments)},Ip=g._emscripten_bind_btPairCachingGhostObject_setRollingFriction_1=function(){return g.asm.pn.apply(null,arguments)},Jp=g._emscripten_bind_btPairCachingGhostObject_setUserIndex_1=function(){return g.asm.qn.apply(null,arguments)},Kp=g._emscripten_bind_btPairCachingGhostObject_setUserPointer_1=function(){return g.asm.rn.apply(null,arguments)},Lp=g._emscripten_bind_btPairCachingGhostObject_setWorldTransform_1=\nfunction(){return g.asm.sn.apply(null,arguments)},Mp=g._emscripten_bind_btPersistentManifold___destroy___0=function(){return g.asm.tn.apply(null,arguments)},Np=g._emscripten_bind_btPersistentManifold_btPersistentManifold_0=function(){return g.asm.un.apply(null,arguments)},Op=g._emscripten_bind_btPersistentManifold_getBody0_0=function(){return g.asm.vn.apply(null,arguments)},Pp=g._emscripten_bind_btPersistentManifold_getBody1_0=function(){return g.asm.wn.apply(null,arguments)},Qp=g._emscripten_bind_btPersistentManifold_getContactPoint_1=\nfunction(){return g.asm.xn.apply(null,arguments)},Rp=g._emscripten_bind_btPersistentManifold_getNumContacts_0=function(){return g.asm.yn.apply(null,arguments)},Sp=g._emscripten_bind_btPoint2PointConstraint___destroy___0=function(){return g.asm.zn.apply(null,arguments)},Tp=g._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2=function(){return g.asm.An.apply(null,arguments)},Up=g._emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4=function(){return g.asm.Bn.apply(null,\narguments)},Vp=g._emscripten_bind_btPoint2PointConstraint_enableFeedback_1=function(){return g.asm.Cn.apply(null,arguments)},Wp=g._emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.Dn.apply(null,arguments)},Xp=g._emscripten_bind_btPoint2PointConstraint_getParam_2=function(){return g.asm.En.apply(null,arguments)},Yp=g._emscripten_bind_btPoint2PointConstraint_getPivotInA_0=function(){return g.asm.Fn.apply(null,arguments)},Zp=g._emscripten_bind_btPoint2PointConstraint_getPivotInB_0=\nfunction(){return g.asm.Gn.apply(null,arguments)},$p=g._emscripten_bind_btPoint2PointConstraint_get_m_setting_0=function(){return g.asm.Hn.apply(null,arguments)},aq=g._emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1=function(){return g.asm.In.apply(null,arguments)},bq=g._emscripten_bind_btPoint2PointConstraint_setParam_3=function(){return g.asm.Jn.apply(null,arguments)},cq=g._emscripten_bind_btPoint2PointConstraint_setPivotA_1=function(){return g.asm.Kn.apply(null,arguments)},\ndq=g._emscripten_bind_btPoint2PointConstraint_setPivotB_1=function(){return g.asm.Ln.apply(null,arguments)},eq=g._emscripten_bind_btPoint2PointConstraint_set_m_setting_1=function(){return g.asm.Mn.apply(null,arguments)},fq=g._emscripten_bind_btQuadWord___destroy___0=function(){return g.asm.Nn.apply(null,arguments)},gq=g._emscripten_bind_btQuadWord_setW_1=function(){return g.asm.On.apply(null,arguments)},hq=g._emscripten_bind_btQuadWord_setX_1=function(){return g.asm.Pn.apply(null,arguments)},iq=g._emscripten_bind_btQuadWord_setY_1=\nfunction(){return g.asm.Qn.apply(null,arguments)},jq=g._emscripten_bind_btQuadWord_setZ_1=function(){return g.asm.Rn.apply(null,arguments)},kq=g._emscripten_bind_btQuadWord_w_0=function(){return g.asm.Sn.apply(null,arguments)},lq=g._emscripten_bind_btQuadWord_x_0=function(){return g.asm.Tn.apply(null,arguments)},mq=g._emscripten_bind_btQuadWord_y_0=function(){return g.asm.Un.apply(null,arguments)},nq=g._emscripten_bind_btQuadWord_z_0=function(){return g.asm.Vn.apply(null,arguments)},oq=g._emscripten_bind_btQuaternion___destroy___0=\nfunction(){return g.asm.Wn.apply(null,arguments)},pq=g._emscripten_bind_btQuaternion_angleShortestPath_1=function(){return g.asm.Xn.apply(null,arguments)},qq=g._emscripten_bind_btQuaternion_angle_1=function(){return g.asm.Yn.apply(null,arguments)},rq=g._emscripten_bind_btQuaternion_btQuaternion_4=function(){return g.asm.Zn.apply(null,arguments)},sq=g._emscripten_bind_btQuaternion_dot_1=function(){return g.asm._n.apply(null,arguments)},tq=g._emscripten_bind_btQuaternion_getAngleShortestPath_0=function(){return g.asm.$n.apply(null,\narguments)},uq=g._emscripten_bind_btQuaternion_getAngle_0=function(){return g.asm.ao.apply(null,arguments)},vq=g._emscripten_bind_btQuaternion_getAxis_0=function(){return g.asm.bo.apply(null,arguments)},wq=g._emscripten_bind_btQuaternion_inverse_0=function(){return g.asm.co.apply(null,arguments)},xq=g._emscripten_bind_btQuaternion_length2_0=function(){return g.asm.eo.apply(null,arguments)},yq=g._emscripten_bind_btQuaternion_length_0=function(){return g.asm.fo.apply(null,arguments)},zq=g._emscripten_bind_btQuaternion_normalize_0=\nfunction(){return g.asm.go.apply(null,arguments)},Aq=g._emscripten_bind_btQuaternion_normalized_0=function(){return g.asm.ho.apply(null,arguments)},Bq=g._emscripten_bind_btQuaternion_op_add_1=function(){return g.asm.io.apply(null,arguments)},Cq=g._emscripten_bind_btQuaternion_op_div_1=function(){return g.asm.jo.apply(null,arguments)},Dq=g._emscripten_bind_btQuaternion_op_mul_1=function(){return g.asm.ko.apply(null,arguments)},Eq=g._emscripten_bind_btQuaternion_op_mulq_1=function(){return g.asm.lo.apply(null,\narguments)},Fq=g._emscripten_bind_btQuaternion_op_sub_1=function(){return g.asm.mo.apply(null,arguments)},Gq=g._emscripten_bind_btQuaternion_setEulerZYX_3=function(){return g.asm.no.apply(null,arguments)},Hq=g._emscripten_bind_btQuaternion_setRotation_2=function(){return g.asm.oo.apply(null,arguments)},Iq=g._emscripten_bind_btQuaternion_setValue_4=function(){return g.asm.po.apply(null,arguments)},Jq=g._emscripten_bind_btQuaternion_setW_1=function(){return g.asm.qo.apply(null,arguments)},Kq=g._emscripten_bind_btQuaternion_setX_1=\nfunction(){return g.asm.ro.apply(null,arguments)},Lq=g._emscripten_bind_btQuaternion_setY_1=function(){return g.asm.so.apply(null,arguments)},Mq=g._emscripten_bind_btQuaternion_setZ_1=function(){return g.asm.to.apply(null,arguments)},Nq=g._emscripten_bind_btQuaternion_w_0=function(){return g.asm.uo.apply(null,arguments)},Oq=g._emscripten_bind_btQuaternion_x_0=function(){return g.asm.vo.apply(null,arguments)},Pq=g._emscripten_bind_btQuaternion_y_0=function(){return g.asm.wo.apply(null,arguments)},\nQq=g._emscripten_bind_btQuaternion_z_0=function(){return g.asm.xo.apply(null,arguments)},Rq=g._emscripten_bind_btRigidBodyConstructionInfo___destroy___0=function(){return g.asm.yo.apply(null,arguments)},Sq=g._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3=function(){return g.asm.zo.apply(null,arguments)},Tq=g._emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4=function(){return g.asm.Ao.apply(null,arguments)},Uq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0=\nfunction(){return g.asm.Bo.apply(null,arguments)},Vq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0=function(){return g.asm.Co.apply(null,arguments)},Wq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0=function(){return g.asm.Do.apply(null,arguments)},Xq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0=function(){return g.asm.Eo.apply(null,arguments)},Yq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0=\nfunction(){return g.asm.Fo.apply(null,arguments)},Zq=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0=function(){return g.asm.Go.apply(null,arguments)},$q=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0=function(){return g.asm.Ho.apply(null,arguments)},ar=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0=function(){return g.asm.Io.apply(null,arguments)},br=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0=function(){return g.asm.Jo.apply(null,\narguments)},cr=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0=function(){return g.asm.Ko.apply(null,arguments)},dr=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0=function(){return g.asm.Lo.apply(null,arguments)},er=g._emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0=function(){return g.asm.Mo.apply(null,arguments)},fr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1=function(){return g.asm.No.apply(null,\narguments)},gr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1=function(){return g.asm.Oo.apply(null,arguments)},hr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1=function(){return g.asm.Po.apply(null,arguments)},ir=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1=function(){return g.asm.Qo.apply(null,arguments)},jr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1=\nfunction(){return g.asm.Ro.apply(null,arguments)},kr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1=function(){return g.asm.So.apply(null,arguments)},lr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1=function(){return g.asm.To.apply(null,arguments)},mr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1=function(){return g.asm.Uo.apply(null,arguments)},nr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1=function(){return g.asm.Vo.apply(null,\narguments)},or=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1=function(){return g.asm.Wo.apply(null,arguments)},pr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1=function(){return g.asm.Xo.apply(null,arguments)},qr=g._emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1=function(){return g.asm.Yo.apply(null,arguments)},rr=g._emscripten_bind_btRigidBody___destroy___0=function(){return g.asm.Zo.apply(null,arguments)},sr=g._emscripten_bind_btRigidBody_activate_0=\nfunction(){return g.asm._o.apply(null,arguments)},tr=g._emscripten_bind_btRigidBody_activate_1=function(){return g.asm.$o.apply(null,arguments)},ur=g._emscripten_bind_btRigidBody_applyCentralForce_1=function(){return g.asm.ap.apply(null,arguments)},vr=g._emscripten_bind_btRigidBody_applyCentralImpulse_1=function(){return g.asm.bp.apply(null,arguments)},wr=g._emscripten_bind_btRigidBody_applyCentralLocalForce_1=function(){return g.asm.cp.apply(null,arguments)},xr=g._emscripten_bind_btRigidBody_applyForce_2=\nfunction(){return g.asm.dp.apply(null,arguments)},yr=g._emscripten_bind_btRigidBody_applyGravity_0=function(){return g.asm.ep.apply(null,arguments)},zr=g._emscripten_bind_btRigidBody_applyImpulse_2=function(){return g.asm.fp.apply(null,arguments)},Ar=g._emscripten_bind_btRigidBody_applyLocalTorque_1=function(){return g.asm.gp.apply(null,arguments)},Br=g._emscripten_bind_btRigidBody_applyTorqueImpulse_1=function(){return g.asm.hp.apply(null,arguments)},Cr=g._emscripten_bind_btRigidBody_applyTorque_1=\nfunction(){return g.asm.ip.apply(null,arguments)},Dr=g._emscripten_bind_btRigidBody_btRigidBody_1=function(){return g.asm.jp.apply(null,arguments)},Er=g._emscripten_bind_btRigidBody_forceActivationState_1=function(){return g.asm.kp.apply(null,arguments)},Fr=g._emscripten_bind_btRigidBody_getAabb_2=function(){return g.asm.lp.apply(null,arguments)},Gr=g._emscripten_bind_btRigidBody_getAngularDamping_0=function(){return g.asm.mp.apply(null,arguments)},Hr=g._emscripten_bind_btRigidBody_getAngularFactor_0=\nfunction(){return g.asm.np.apply(null,arguments)},Ir=g._emscripten_bind_btRigidBody_getAngularVelocity_0=function(){return g.asm.op.apply(null,arguments)},Jr=g._emscripten_bind_btRigidBody_getBroadphaseHandle_0=function(){return g.asm.pp.apply(null,arguments)},Kr=g._emscripten_bind_btRigidBody_getBroadphaseProxy_0=function(){return g.asm.qp.apply(null,arguments)},Lr=g._emscripten_bind_btRigidBody_getCenterOfMassTransform_0=function(){return g.asm.rp.apply(null,arguments)},Mr=g._emscripten_bind_btRigidBody_getCollisionFlags_0=\nfunction(){return g.asm.sp.apply(null,arguments)},Nr=g._emscripten_bind_btRigidBody_getCollisionShape_0=function(){return g.asm.tp.apply(null,arguments)},Or=g._emscripten_bind_btRigidBody_getFlags_0=function(){return g.asm.up.apply(null,arguments)},Pr=g._emscripten_bind_btRigidBody_getFriction_0=function(){return g.asm.vp.apply(null,arguments)},Qr=g._emscripten_bind_btRigidBody_getGravity_0=function(){return g.asm.wp.apply(null,arguments)},Rr=g._emscripten_bind_btRigidBody_getLinearDamping_0=function(){return g.asm.xp.apply(null,\narguments)},Sr=g._emscripten_bind_btRigidBody_getLinearFactor_0=function(){return g.asm.yp.apply(null,arguments)},Tr=g._emscripten_bind_btRigidBody_getLinearVelocity_0=function(){return g.asm.zp.apply(null,arguments)},Ur=g._emscripten_bind_btRigidBody_getMotionState_0=function(){return g.asm.Ap.apply(null,arguments)},Vr=g._emscripten_bind_btRigidBody_getRestitution_0=function(){return g.asm.Bp.apply(null,arguments)},Wr=g._emscripten_bind_btRigidBody_getRollingFriction_0=function(){return g.asm.Cp.apply(null,\narguments)},Xr=g._emscripten_bind_btRigidBody_getUserIndex_0=function(){return g.asm.Dp.apply(null,arguments)},Yr=g._emscripten_bind_btRigidBody_getUserPointer_0=function(){return g.asm.Ep.apply(null,arguments)},Zr=g._emscripten_bind_btRigidBody_getWorldTransform_0=function(){return g.asm.Fp.apply(null,arguments)},$r=g._emscripten_bind_btRigidBody_isActive_0=function(){return g.asm.Gp.apply(null,arguments)},as=g._emscripten_bind_btRigidBody_isKinematicObject_0=function(){return g.asm.Hp.apply(null,\narguments)},bs=g._emscripten_bind_btRigidBody_isStaticObject_0=function(){return g.asm.Ip.apply(null,arguments)},cs=g._emscripten_bind_btRigidBody_isStaticOrKinematicObject_0=function(){return g.asm.Jp.apply(null,arguments)},ds=g._emscripten_bind_btRigidBody_setActivationState_1=function(){return g.asm.Kp.apply(null,arguments)},es=g._emscripten_bind_btRigidBody_setAngularFactor_1=function(){return g.asm.Lp.apply(null,arguments)},gs=g._emscripten_bind_btRigidBody_setAngularVelocity_1=function(){return g.asm.Mp.apply(null,\narguments)},hs=g._emscripten_bind_btRigidBody_setAnisotropicFriction_2=function(){return g.asm.Np.apply(null,arguments)},is=g._emscripten_bind_btRigidBody_setCcdMotionThreshold_1=function(){return g.asm.Op.apply(null,arguments)},js=g._emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1=function(){return g.asm.Pp.apply(null,arguments)},ks=g._emscripten_bind_btRigidBody_setCenterOfMassTransform_1=function(){return g.asm.Qp.apply(null,arguments)},ls=g._emscripten_bind_btRigidBody_setCollisionFlags_1=\nfunction(){return g.asm.Rp.apply(null,arguments)},ms=g._emscripten_bind_btRigidBody_setCollisionShape_1=function(){return g.asm.Sp.apply(null,arguments)},ns=g._emscripten_bind_btRigidBody_setContactProcessingThreshold_1=function(){return g.asm.Tp.apply(null,arguments)},ps=g._emscripten_bind_btRigidBody_setDamping_2=function(){return g.asm.Up.apply(null,arguments)},qs=g._emscripten_bind_btRigidBody_setFlags_1=function(){return g.asm.Vp.apply(null,arguments)},rs=g._emscripten_bind_btRigidBody_setFriction_1=\nfunction(){return g.asm.Wp.apply(null,arguments)},ss=g._emscripten_bind_btRigidBody_setGravity_1=function(){return g.asm.Xp.apply(null,arguments)},ts=g._emscripten_bind_btRigidBody_setLinearFactor_1=function(){return g.asm.Yp.apply(null,arguments)},us=g._emscripten_bind_btRigidBody_setLinearVelocity_1=function(){return g.asm.Zp.apply(null,arguments)},vs=g._emscripten_bind_btRigidBody_setMassProps_2=function(){return g.asm._p.apply(null,arguments)},xs=g._emscripten_bind_btRigidBody_setMotionState_1=\nfunction(){return g.asm.$p.apply(null,arguments)},ys=g._emscripten_bind_btRigidBody_setRestitution_1=function(){return g.asm.aq.apply(null,arguments)},zs=g._emscripten_bind_btRigidBody_setRollingFriction_1=function(){return g.asm.bq.apply(null,arguments)},As=g._emscripten_bind_btRigidBody_setSleepingThresholds_2=function(){return g.asm.cq.apply(null,arguments)},Bs=g._emscripten_bind_btRigidBody_setUserIndex_1=function(){return g.asm.dq.apply(null,arguments)},Cs=g._emscripten_bind_btRigidBody_setUserPointer_1=\nfunction(){return g.asm.eq.apply(null,arguments)},Ds=g._emscripten_bind_btRigidBody_setWorldTransform_1=function(){return g.asm.fq.apply(null,arguments)},Es=g._emscripten_bind_btRigidBody_upcast_1=function(){return g.asm.gq.apply(null,arguments)},Fs=g._emscripten_bind_btRigidBody_updateInertiaTensor_0=function(){return g.asm.hq.apply(null,arguments)},Gs=g._emscripten_bind_btScalarArray___destroy___0=function(){return g.asm.iq.apply(null,arguments)},Hs=g._emscripten_bind_btScalarArray_at_1=function(){return g.asm.jq.apply(null,\narguments)},Is=g._emscripten_bind_btScalarArray_size_0=function(){return g.asm.kq.apply(null,arguments)},Js=g._emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0=function(){return g.asm.lq.apply(null,arguments)},Ks=g._emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0=function(){return g.asm.mq.apply(null,arguments)},Ls=g._emscripten_bind_btShapeHull___destroy___0=function(){return g.asm.nq.apply(null,arguments)},Ms=g._emscripten_bind_btShapeHull_btShapeHull_1=\nfunction(){return g.asm.oq.apply(null,arguments)},Ns=g._emscripten_bind_btShapeHull_buildHull_1=function(){return g.asm.pq.apply(null,arguments)},Os=g._emscripten_bind_btShapeHull_getVertexPointer_0=function(){return g.asm.qq.apply(null,arguments)},Ps=g._emscripten_bind_btShapeHull_numVertices_0=function(){return g.asm.rq.apply(null,arguments)},Qs=g._emscripten_bind_btSliderConstraint___destroy___0=function(){return g.asm.sq.apply(null,arguments)},Rs=g._emscripten_bind_btSliderConstraint_btSliderConstraint_3=\nfunction(){return g.asm.tq.apply(null,arguments)},Ss=g._emscripten_bind_btSliderConstraint_btSliderConstraint_5=function(){return g.asm.uq.apply(null,arguments)},Ts=g._emscripten_bind_btSliderConstraint_enableFeedback_1=function(){return g.asm.vq.apply(null,arguments)},Us=g._emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.wq.apply(null,arguments)},Vs=g._emscripten_bind_btSliderConstraint_getParam_2=function(){return g.asm.xq.apply(null,arguments)},Ws=g._emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1=\nfunction(){return g.asm.yq.apply(null,arguments)},Xs=g._emscripten_bind_btSliderConstraint_setLowerAngLimit_1=function(){return g.asm.zq.apply(null,arguments)},Ys=g._emscripten_bind_btSliderConstraint_setLowerLinLimit_1=function(){return g.asm.Aq.apply(null,arguments)},Zs=g._emscripten_bind_btSliderConstraint_setParam_3=function(){return g.asm.Bq.apply(null,arguments)},$s=g._emscripten_bind_btSliderConstraint_setUpperAngLimit_1=function(){return g.asm.Cq.apply(null,arguments)},at=g._emscripten_bind_btSliderConstraint_setUpperLinLimit_1=\nfunction(){return g.asm.Dq.apply(null,arguments)},bt=g._emscripten_bind_btSphereShape___destroy___0=function(){return g.asm.Eq.apply(null,arguments)},ct=g._emscripten_bind_btSphereShape_btSphereShape_1=function(){return g.asm.Fq.apply(null,arguments)},dt=g._emscripten_bind_btSphereShape_calculateLocalInertia_2=function(){return g.asm.Gq.apply(null,arguments)},et=g._emscripten_bind_btSphereShape_getLocalScaling_0=function(){return g.asm.Hq.apply(null,arguments)},ft=g._emscripten_bind_btSphereShape_getMargin_0=\nfunction(){return g.asm.Iq.apply(null,arguments)},gt=g._emscripten_bind_btSphereShape_setLocalScaling_1=function(){return g.asm.Jq.apply(null,arguments)},ht=g._emscripten_bind_btSphereShape_setMargin_1=function(){return g.asm.Kq.apply(null,arguments)},it=g._emscripten_bind_btStaticPlaneShape___destroy___0=function(){return g.asm.Lq.apply(null,arguments)},jt=g._emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2=function(){return g.asm.Mq.apply(null,arguments)},kt=g._emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2=\nfunction(){return g.asm.Nq.apply(null,arguments)},lt=g._emscripten_bind_btStaticPlaneShape_getLocalScaling_0=function(){return g.asm.Oq.apply(null,arguments)},mt=g._emscripten_bind_btStaticPlaneShape_setLocalScaling_1=function(){return g.asm.Pq.apply(null,arguments)},nt=g._emscripten_bind_btStridingMeshInterface___destroy___0=function(){return g.asm.Qq.apply(null,arguments)},ot=g._emscripten_bind_btStridingMeshInterface_setScaling_1=function(){return g.asm.Rq.apply(null,arguments)},pt=g._emscripten_bind_btTransform___destroy___0=\nfunction(){return g.asm.Sq.apply(null,arguments)},qt=g._emscripten_bind_btTransform_btTransform_0=function(){return g.asm.Tq.apply(null,arguments)},rt=g._emscripten_bind_btTransform_btTransform_2=function(){return g.asm.Uq.apply(null,arguments)},st=g._emscripten_bind_btTransform_getBasis_0=function(){return g.asm.Vq.apply(null,arguments)},tt=g._emscripten_bind_btTransform_getOrigin_0=function(){return g.asm.Wq.apply(null,arguments)},ut=g._emscripten_bind_btTransform_getRotation_0=function(){return g.asm.Xq.apply(null,\narguments)},vt=g._emscripten_bind_btTransform_inverse_0=function(){return g.asm.Yq.apply(null,arguments)},wt=g._emscripten_bind_btTransform_op_mul_1=function(){return g.asm.Zq.apply(null,arguments)},xt=g._emscripten_bind_btTransform_setFromOpenGLMatrix_1=function(){return g.asm._q.apply(null,arguments)},yt=g._emscripten_bind_btTransform_setIdentity_0=function(){return g.asm.$q.apply(null,arguments)},zt=g._emscripten_bind_btTransform_setOrigin_1=function(){return g.asm.ar.apply(null,arguments)},At=\ng._emscripten_bind_btTransform_setRotation_1=function(){return g.asm.br.apply(null,arguments)},Bt=g._emscripten_bind_btTriangleMeshShape___destroy___0=function(){return g.asm.cr.apply(null,arguments)},Ct=g._emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2=function(){return g.asm.dr.apply(null,arguments)},Dt=g._emscripten_bind_btTriangleMeshShape_getLocalScaling_0=function(){return g.asm.er.apply(null,arguments)},Et=g._emscripten_bind_btTriangleMeshShape_setLocalScaling_1=function(){return g.asm.fr.apply(null,\narguments)},Ft=g._emscripten_bind_btTriangleMesh___destroy___0=function(){return g.asm.gr.apply(null,arguments)},Gt=g._emscripten_bind_btTriangleMesh_addIndex_1=function(){return g.asm.hr.apply(null,arguments)},Ht=g._emscripten_bind_btTriangleMesh_addTriangle_3=function(){return g.asm.ir.apply(null,arguments)},It=g._emscripten_bind_btTriangleMesh_addTriangle_4=function(){return g.asm.jr.apply(null,arguments)},Jt=g._emscripten_bind_btTriangleMesh_btTriangleMesh_0=function(){return g.asm.kr.apply(null,\narguments)},Kt=g._emscripten_bind_btTriangleMesh_btTriangleMesh_1=function(){return g.asm.lr.apply(null,arguments)},Lt=g._emscripten_bind_btTriangleMesh_btTriangleMesh_2=function(){return g.asm.mr.apply(null,arguments)},Mt=g._emscripten_bind_btTriangleMesh_findOrAddVertex_2=function(){return g.asm.nr.apply(null,arguments)},Nt=g._emscripten_bind_btTriangleMesh_getIndexedMeshArray_0=function(){return g.asm.or.apply(null,arguments)},Ot=g._emscripten_bind_btTriangleMesh_setScaling_1=function(){return g.asm.pr.apply(null,\narguments)},Pt=g._emscripten_bind_btTypedConstraint___destroy___0=function(){return g.asm.qr.apply(null,arguments)},Qt=g._emscripten_bind_btTypedConstraint_enableFeedback_1=function(){return g.asm.rr.apply(null,arguments)},Rt=g._emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0=function(){return g.asm.sr.apply(null,arguments)},St=g._emscripten_bind_btTypedConstraint_getParam_2=function(){return g.asm.tr.apply(null,arguments)},Tt=g._emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1=\nfunction(){return g.asm.ur.apply(null,arguments)},Ut=g._emscripten_bind_btTypedConstraint_setParam_3=function(){return g.asm.vr.apply(null,arguments)},Vt=g._emscripten_bind_btVector3Array___destroy___0=function(){return g.asm.wr.apply(null,arguments)},Wt=g._emscripten_bind_btVector3Array_at_1=function(){return g.asm.xr.apply(null,arguments)},Xt=g._emscripten_bind_btVector3Array_size_0=function(){return g.asm.yr.apply(null,arguments)},Yt=g._emscripten_bind_btVector3___destroy___0=function(){return g.asm.zr.apply(null,\narguments)},Zt=g._emscripten_bind_btVector3_btVector3_0=function(){return g.asm.Ar.apply(null,arguments)},$t=g._emscripten_bind_btVector3_btVector3_3=function(){return g.asm.Br.apply(null,arguments)},au=g._emscripten_bind_btVector3_dot_1=function(){return g.asm.Cr.apply(null,arguments)},bu=g._emscripten_bind_btVector3_length2_0=function(){return g.asm.Dr.apply(null,arguments)},cu=g._emscripten_bind_btVector3_length_0=function(){return g.asm.Er.apply(null,arguments)},du=g._emscripten_bind_btVector3_normalize_0=\nfunction(){return g.asm.Fr.apply(null,arguments)},eu=g._emscripten_bind_btVector3_op_add_1=function(){return g.asm.Gr.apply(null,arguments)},fu=g._emscripten_bind_btVector3_op_mul_1=function(){return g.asm.Hr.apply(null,arguments)},gu=g._emscripten_bind_btVector3_op_sub_1=function(){return g.asm.Ir.apply(null,arguments)},hu=g._emscripten_bind_btVector3_rotate_2=function(){return g.asm.Jr.apply(null,arguments)},iu=g._emscripten_bind_btVector3_setValue_3=function(){return g.asm.Kr.apply(null,arguments)},\nju=g._emscripten_bind_btVector3_setX_1=function(){return g.asm.Lr.apply(null,arguments)},ku=g._emscripten_bind_btVector3_setY_1=function(){return g.asm.Mr.apply(null,arguments)},lu=g._emscripten_bind_btVector3_setZ_1=function(){return g.asm.Nr.apply(null,arguments)},mu=g._emscripten_bind_btVector3_x_0=function(){return g.asm.Or.apply(null,arguments)},nu=g._emscripten_bind_btVector3_y_0=function(){return g.asm.Pr.apply(null,arguments)},ou=g._emscripten_bind_btVector3_z_0=function(){return g.asm.Qr.apply(null,\narguments)},pu=g._emscripten_bind_btVector4___destroy___0=function(){return g.asm.Rr.apply(null,arguments)},qu=g._emscripten_bind_btVector4_btVector4_0=function(){return g.asm.Sr.apply(null,arguments)},ru=g._emscripten_bind_btVector4_btVector4_4=function(){return g.asm.Tr.apply(null,arguments)},su=g._emscripten_bind_btVector4_dot_1=function(){return g.asm.Ur.apply(null,arguments)},tu=g._emscripten_bind_btVector4_length2_0=function(){return g.asm.Vr.apply(null,arguments)},uu=g._emscripten_bind_btVector4_length_0=\nfunction(){return g.asm.Wr.apply(null,arguments)},vu=g._emscripten_bind_btVector4_normalize_0=function(){return g.asm.Xr.apply(null,arguments)},wu=g._emscripten_bind_btVector4_op_add_1=function(){return g.asm.Yr.apply(null,arguments)},xu=g._emscripten_bind_btVector4_op_mul_1=function(){return g.asm.Zr.apply(null,arguments)},yu=g._emscripten_bind_btVector4_op_sub_1=function(){return g.asm._r.apply(null,arguments)},zu=g._emscripten_bind_btVector4_rotate_2=function(){return g.asm.$r.apply(null,arguments)},\nAu=g._emscripten_bind_btVector4_setValue_4=function(){return g.asm.as.apply(null,arguments)},Bu=g._emscripten_bind_btVector4_setX_1=function(){return g.asm.bs.apply(null,arguments)},Cu=g._emscripten_bind_btVector4_setY_1=function(){return g.asm.cs.apply(null,arguments)},Du=g._emscripten_bind_btVector4_setZ_1=function(){return g.asm.ds.apply(null,arguments)},Eu=g._emscripten_bind_btVector4_w_0=function(){return g.asm.es.apply(null,arguments)},Fu=g._emscripten_bind_btVector4_x_0=function(){return g.asm.fs.apply(null,\narguments)},Gu=g._emscripten_bind_btVector4_y_0=function(){return g.asm.gs.apply(null,arguments)},Hu=g._emscripten_bind_btVector4_z_0=function(){return g.asm.hs.apply(null,arguments)},Iu=g._emscripten_enum_PHY_ScalarType_PHY_DOUBLE=function(){return g.asm.is.apply(null,arguments)},Ju=g._emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88=function(){return g.asm.js.apply(null,arguments)},Ku=g._emscripten_enum_PHY_ScalarType_PHY_FLOAT=function(){return g.asm.ks.apply(null,arguments)},Lu=g._emscripten_enum_PHY_ScalarType_PHY_INTEGER=\nfunction(){return g.asm.ls.apply(null,arguments)},Mu=g._emscripten_enum_PHY_ScalarType_PHY_SHORT=function(){return g.asm.ms.apply(null,arguments)},Nu=g._emscripten_enum_PHY_ScalarType_PHY_UCHAR=function(){return g.asm.ns.apply(null,arguments)},Ou=g._emscripten_enum_btConstraintParams_BT_CONSTRAINT_CFM=function(){return g.asm.os.apply(null,arguments)},Pu=g._emscripten_enum_btConstraintParams_BT_CONSTRAINT_ERP=function(){return g.asm.ps.apply(null,arguments)},Qu=g._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_CFM=\nfunction(){return g.asm.qs.apply(null,arguments)},Ru=g._emscripten_enum_btConstraintParams_BT_CONSTRAINT_STOP_ERP=function(){return g.asm.rs.apply(null,arguments)},qb=g._free=function(){return g.asm.ss.apply(null,arguments)},rb=g._malloc=function(){return g.asm.ts.apply(null,arguments)},cb=g.globalCtors=function(){return g.asm.ws.apply(null,arguments)},Cb=g.stackRestore=function(){return g.asm.xs.apply(null,arguments)},tb=g.stackSave=function(){return g.asm.ys.apply(null,arguments)};\ng.dynCall_v=function(){return g.asm.us.apply(null,arguments)};g.dynCall_vi=function(){return g.asm.vs.apply(null,arguments)};g.asm=Db;g.UTF8ToString=za;var Su;g.then=function(a){if(Su)a(g);else{var c=g.onRuntimeInitialized;g.onRuntimeInitialized=function(){c&&c();a(g)}}return g};Va=function Tu(){Su||Uu();Su||(Va=Tu)};\nfunction Uu(){function a(){if(!Su&&(Su=!0,!wa)){Pa=!0;Ka(Ma);Ka(Na);if(g.onRuntimeInitialized)g.onRuntimeInitialized();if(g.postRun)for(\"function\"==typeof g.postRun&&(g.postRun=[g.postRun]);g.postRun.length;){var a=g.postRun.shift();Oa.unshift(a)}Ka(Oa)}}if(!(0<Ta)){if(g.preRun)for(\"function\"==typeof g.preRun&&(g.preRun=[g.preRun]);g.preRun.length;)Qa();Ka(La);0<Ta||(g.setStatus?(g.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){g.setStatus(\"\")},1);a()},1)):a())}}g.run=Uu;\nif(g.preInit)for(\"function\"==typeof g.preInit&&(g.preInit=[g.preInit]);0<g.preInit.length;)g.preInit.pop()();Uu();function k(){}k.prototype=Object.create(k.prototype);k.prototype.constructor=k;k.prototype.As=k;k.Bs={};g.WrapperObject=k;function l(a){return(a||k).Bs}g.getCache=l;function m(a,c){var d=l(c),e=d[a];if(e)return e;e=Object.create((c||k).prototype);e.zs=a;return d[a]=e}g.wrapPointer=m;g.castObject=function(a,c){return m(a.zs,c)};g.NULL=m(0);\ng.destroy=function(a){if(!a.__destroy__)throw\"Error: Cannot destroy object. (Did you create it yourself?)\";a.__destroy__();delete l(a.As)[a.zs]};g.compare=function(a,c){return a.zs===c.zs};g.getPointer=function(a){return a.zs};g.getClass=function(a){return a.As};\nb={buffer:0,size:0,Qs:0,Ws:[],Ps:0,Is:function(){if(b.Ps){for(var a=0;a<b.Ws.length;a++)g._free(b.Ws[a]);b.Ws.length=0;g._free(b.buffer);b.buffer=0;b.size+=b.Ps;b.Ps=0}b.buffer||(b.size+=128,b.buffer=g._malloc(b.size),assert(b.buffer));b.Qs=0},Vs:function(a,c){assert(b.buffer);a=a.length*c.BYTES_PER_ELEMENT;a=a+7&-8;b.Qs+a>=b.size?(assert(0<a),b.Ps+=a,c=g._malloc(a),b.Ws.push(c)):(c=b.buffer+b.Qs,b.Qs+=a);return c},copy:function(a,c,d){switch(c.BYTES_PER_ELEMENT){case 2:d>>=1;break;case 4:d>>=2;break;\ncase 8:d>>=3}for(var e=0;e<a.length;e++)c[d+e]=a[e]}};function Vu(a){if(\"string\"===typeof a){a=Ab(a);var c=b.Vs(a,Ea);b.copy(a,Ea,c);return c}return a}function Wu(a){if(\"object\"===typeof a){var c=b.Vs(a,Fa);b.copy(a,Fa,c);return c}return a}function p(){throw\"cannot construct a btCollisionShape, no constructor in IDL\";}p.prototype=Object.create(k.prototype);p.prototype.constructor=p;p.prototype.As=p;p.Bs={};g.btCollisionShape=p;\np.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ug(c,a)};p.prototype.getLocalScaling=function(){return m(Sg(this.zs),q)};p.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Rg(d,a,c)};p.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vg(c,a)};p.prototype.getMargin=function(){return Tg(this.zs)};p.prototype.__destroy__=function(){Qg(this.zs)};\nfunction t(){throw\"cannot construct a btCollisionObject, no constructor in IDL\";}t.prototype=Object.create(k.prototype);t.prototype.constructor=t;t.prototype.As=t;t.Bs={};g.btCollisionObject=t;t.prototype.setAnisotropicFriction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Eg(d,a,c)};t.prototype.getCollisionShape=function(){return m(sg(this.zs),p)};\nt.prototype.setContactProcessingThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jg(c,a)};t.prototype.setActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Dg(c,a)};t.prototype.forceActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);pg(c,a)};t.prototype.activate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);void 0===a?ng(c):og(c,a)};t.prototype.isActive=function(){return!!zg(this.zs)};t.prototype.isKinematicObject=function(){return!!Ag(this.zs)};\nt.prototype.isStaticObject=function(){return!!Bg(this.zs)};t.prototype.isStaticOrKinematicObject=function(){return!!Cg(this.zs)};t.prototype.getRestitution=function(){return ug(this.zs)};t.prototype.getFriction=function(){return tg(this.zs)};t.prototype.getRollingFriction=function(){return vg(this.zs)};t.prototype.setRestitution=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lg(c,a)};t.prototype.setFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kg(c,a)};\nt.prototype.setRollingFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Mg(c,a)};t.prototype.getWorldTransform=function(){return m(yg(this.zs),u)};t.prototype.getCollisionFlags=function(){return rg(this.zs)};t.prototype.setCollisionFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Hg(c,a)};t.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Pg(c,a)};\nt.prototype.setCollisionShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ig(c,a)};t.prototype.setCcdMotionThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fg(c,a)};t.prototype.setCcdSweptSphereRadius=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gg(c,a)};t.prototype.getUserIndex=function(){return wg(this.zs)};t.prototype.setUserIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ng(c,a)};\nt.prototype.getUserPointer=function(){return m(xg(this.zs),Xu)};t.prototype.setUserPointer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Og(c,a)};t.prototype.getBroadphaseHandle=function(){return m(qg(this.zs),v)};t.prototype.__destroy__=function(){mg(this.zs)};function Yu(){throw\"cannot construct a btTypedConstraint, no constructor in IDL\";}Yu.prototype=Object.create(k.prototype);Yu.prototype.constructor=Yu;Yu.prototype.As=Yu;Yu.Bs={};g.btTypedConstraint=Yu;\nYu.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Qt(c,a)};Yu.prototype.getBreakingImpulseThreshold=function(){return Rt(this.zs)};Yu.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Tt(c,a)};Yu.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return St(d,a,c)};\nYu.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Ut(e,a,c,d)};Yu.prototype.__destroy__=function(){Pt(this.zs)};function w(){throw\"cannot construct a btCollisionWorld, no constructor in IDL\";}w.prototype=Object.create(k.prototype);w.prototype.constructor=w;w.prototype.As=w;w.Bs={};g.btCollisionWorld=w;w.prototype.getDispatcher=function(){return m(hh(this.zs),Zu)};\nw.prototype.rayTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);jh(e,a,c,d)};w.prototype.getPairCache=function(){return m(ih(this.zs),$u)};w.prototype.getDispatchInfo=function(){return m(gh(this.zs),x)};w.prototype.addCollisionObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===c?Xg(e,a):void 0===d?Yg(e,a,c):Zg(e,a,c,d)};\nw.prototype.removeCollisionObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);kh(c,a)};w.prototype.getBroadphase=function(){return m(eh(this.zs),av)};w.prototype.convexSweepTest=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);bh(n,a,c,d,e,f)};\nw.prototype.contactPairTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);$g(e,a,c,d)};w.prototype.contactTest=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ah(d,a,c)};w.prototype.setForceUpdateAllAabbs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mh(c,a)};w.prototype.updateSingleAabb=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);nh(c,a)};\nw.prototype.setDebugDrawer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lh(c,a)};w.prototype.getDebugDrawer=function(){return m(fh(this.zs),bv)};w.prototype.debugDrawWorld=function(){dh(this.zs)};w.prototype.debugDrawObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);ch(e,a,c,d)};w.prototype.__destroy__=function(){Wg(this.zs)};\nfunction cv(){throw\"cannot construct a btConcaveShape, no constructor in IDL\";}cv.prototype=Object.create(p.prototype);cv.prototype.constructor=cv;cv.prototype.As=cv;cv.Bs={};g.btConcaveShape=cv;cv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gh(c,a)};cv.prototype.getLocalScaling=function(){return m(Fh(this.zs),q)};cv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Eh(d,a,c)};\ncv.prototype.__destroy__=function(){Dh(this.zs)};function dv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Wf(a,c);l(dv)[this.zs]=this}dv.prototype=Object.create(p.prototype);dv.prototype.constructor=dv;dv.prototype.As=dv;dv.Bs={};g.btCapsuleShape=dv;dv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dg(c,a)};dv.prototype.getMargin=function(){return $f(this.zs)};dv.prototype.getUpAxis=function(){return bg(this.zs)};\ndv.prototype.getRadius=function(){return ag(this.zs)};dv.prototype.getHalfHeight=function(){return Yf(this.zs)};dv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cg(c,a)};dv.prototype.getLocalScaling=function(){return m(Zf(this.zs),q)};dv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Xf(d,a,c)};dv.prototype.__destroy__=function(){Vf(this.zs)};\nfunction bv(){throw\"cannot construct a btIDebugDraw, no constructor in IDL\";}bv.prototype=Object.create(k.prototype);bv.prototype.constructor=bv;bv.prototype.As=bv;bv.Bs={};g.btIDebugDraw=bv;bv.prototype.drawLine=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);On(e,a,c,d)};\nbv.prototype.drawContactPoint=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);Nn(n,a,c,d,e,f)};bv.prototype.reportErrorWarning=function(a){var c=this.zs;b.Is();a=a&&\"object\"===typeof a?a.zs:Vu(a);Qn(c,a)};bv.prototype.draw3dText=function(a,c){var d=this.zs;b.Is();a&&\"object\"===typeof a&&(a=a.zs);c=c&&\"object\"===typeof c?c.zs:Vu(c);Mn(d,a,c)};\nbv.prototype.setDebugMode=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Rn(c,a)};bv.prototype.getDebugMode=function(){return Pn(this.zs)};bv.prototype.__destroy__=function(){Ln(this.zs)};function y(){throw\"cannot construct a btDynamicsWorld, no constructor in IDL\";}y.prototype=Object.create(w.prototype);y.prototype.constructor=y;y.prototype.As=y;y.Bs={};g.btDynamicsWorld=y;y.prototype.addAction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hl(c,a)};\ny.prototype.removeAction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xl(c,a)};y.prototype.getSolverInfo=function(){return m(vl(this.zs),z)};y.prototype.getDispatcher=function(){return m(tl(this.zs),Zu)};y.prototype.rayTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);wl(e,a,c,d)};y.prototype.getPairCache=function(){return m(ul(this.zs),$u)};\ny.prototype.getDispatchInfo=function(){return m(sl(this.zs),x)};y.prototype.addCollisionObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===c?il(e,a):void 0===d?jl(e,a,c):kl(e,a,c,d)};y.prototype.removeCollisionObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yl(c,a)};y.prototype.getBroadphase=function(){return m(ql(this.zs),av)};\ny.prototype.convexSweepTest=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);nl(n,a,c,d,e,f)};y.prototype.contactPairTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);ll(e,a,c,d)};\ny.prototype.contactTest=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ml(d,a,c)};y.prototype.setForceUpdateAllAabbs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Al(c,a)};y.prototype.updateSingleAabb=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bl(c,a)};y.prototype.setDebugDrawer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zl(c,a)};y.prototype.getDebugDrawer=function(){return m(rl(this.zs),bv)};\ny.prototype.debugDrawWorld=function(){pl(this.zs)};y.prototype.debugDrawObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);ol(e,a,c,d)};y.prototype.__destroy__=function(){gl(this.zs)};function ev(){throw\"cannot construct a btTriangleMeshShape, no constructor in IDL\";}ev.prototype=Object.create(cv.prototype);ev.prototype.constructor=ev;ev.prototype.As=ev;ev.Bs={};g.btTriangleMeshShape=ev;\nev.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Et(c,a)};ev.prototype.getLocalScaling=function(){return m(Dt(this.zs),q)};ev.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ct(d,a,c)};ev.prototype.__destroy__=function(){Bt(this.zs)};function A(){this.zs=Fm();l(A)[this.zs]=this}A.prototype=Object.create(t.prototype);A.prototype.constructor=A;A.prototype.As=A;A.Bs={};\ng.btGhostObject=A;A.prototype.getNumOverlappingObjects=function(){return Lm(this.zs)};A.prototype.getOverlappingObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Mm(c,a),t)};A.prototype.setAnisotropicFriction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Xm(d,a,c)};A.prototype.getCollisionShape=function(){return m(Jm(this.zs),p)};\nA.prototype.setContactProcessingThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);bn(c,a)};A.prototype.setActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Wm(c,a)};A.prototype.forceActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gm(c,a)};A.prototype.activate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);void 0===a?Dm(c):Em(c,a)};A.prototype.isActive=function(){return!!Sm(this.zs)};A.prototype.isKinematicObject=function(){return!!Tm(this.zs)};\nA.prototype.isStaticObject=function(){return!!Um(this.zs)};A.prototype.isStaticOrKinematicObject=function(){return!!Vm(this.zs)};A.prototype.getRestitution=function(){return Nm(this.zs)};A.prototype.getFriction=function(){return Km(this.zs)};A.prototype.getRollingFriction=function(){return Om(this.zs)};A.prototype.setRestitution=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dn(c,a)};A.prototype.setFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cn(c,a)};\nA.prototype.setRollingFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);en(c,a)};A.prototype.getWorldTransform=function(){return m(Rm(this.zs),u)};A.prototype.getCollisionFlags=function(){return Im(this.zs)};A.prototype.setCollisionFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$m(c,a)};A.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hn(c,a)};\nA.prototype.setCollisionShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);an(c,a)};A.prototype.setCcdMotionThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ym(c,a)};A.prototype.setCcdSweptSphereRadius=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zm(c,a)};A.prototype.getUserIndex=function(){return Pm(this.zs)};A.prototype.setUserIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);fn(c,a)};\nA.prototype.getUserPointer=function(){return m(Qm(this.zs),Xu)};A.prototype.setUserPointer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gn(c,a)};A.prototype.getBroadphaseHandle=function(){return m(Hm(this.zs),v)};A.prototype.__destroy__=function(){Cm(this.zs)};function fv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Sh(a,c);l(fv)[this.zs]=this}fv.prototype=Object.create(p.prototype);fv.prototype.constructor=fv;fv.prototype.As=fv;fv.Bs={};\ng.btConeShape=fv;fv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vh(c,a)};fv.prototype.getLocalScaling=function(){return m(Uh(this.zs),q)};fv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Th(d,a,c)};fv.prototype.__destroy__=function(){Rh(this.zs)};function gv(){throw\"cannot construct a btActionInterface, no constructor in IDL\";}gv.prototype=Object.create(k.prototype);\ngv.prototype.constructor=gv;gv.prototype.As=gv;gv.Bs={};g.btActionInterface=gv;gv.prototype.updateAction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);af(d,a,c)};gv.prototype.__destroy__=function(){$e(this.zs)};\nfunction q(a,c,d){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);this.zs=void 0===a?Zt():void 0===c?_emscripten_bind_btVector3_btVector3_1(a):void 0===d?_emscripten_bind_btVector3_btVector3_2(a,c):$t(a,c,d);l(q)[this.zs]=this}q.prototype=Object.create(k.prototype);q.prototype.constructor=q;q.prototype.As=q;q.Bs={};g.btVector3=q;q.prototype.length=q.prototype.length=function(){return cu(this.zs)};q.prototype.length2=function(){return bu(this.zs)};\nq.prototype.x=q.prototype.x=function(){return mu(this.zs)};q.prototype.y=q.prototype.y=function(){return nu(this.zs)};q.prototype.z=q.prototype.z=function(){return ou(this.zs)};q.prototype.setX=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ju(c,a)};q.prototype.setY=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ku(c,a)};q.prototype.setZ=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lu(c,a)};\nq.prototype.setValue=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);iu(e,a,c,d)};q.prototype.normalize=q.prototype.normalize=function(){du(this.zs)};q.prototype.rotate=q.prototype.rotate=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return m(hu(d,a,c),q)};q.prototype.dot=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return au(c,a)};\nq.prototype.op_mul=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(fu(c,a),q)};q.prototype.op_add=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(eu(c,a),q)};q.prototype.op_sub=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(gu(c,a),q)};q.prototype.__destroy__=function(){Yt(this.zs)};function hv(){throw\"cannot construct a btQuadWord, no constructor in IDL\";}hv.prototype=Object.create(k.prototype);hv.prototype.constructor=hv;\nhv.prototype.As=hv;hv.Bs={};g.btQuadWord=hv;hv.prototype.x=hv.prototype.x=function(){return lq(this.zs)};hv.prototype.y=hv.prototype.y=function(){return mq(this.zs)};hv.prototype.z=hv.prototype.z=function(){return nq(this.zs)};hv.prototype.w=hv.prototype.ht=function(){return kq(this.zs)};hv.prototype.setX=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hq(c,a)};hv.prototype.setY=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);iq(c,a)};\nhv.prototype.setZ=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);jq(c,a)};hv.prototype.setW=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gq(c,a)};hv.prototype.__destroy__=function(){fq(this.zs)};function iv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=Aj(a);l(iv)[this.zs]=this}iv.prototype=Object.create(p.prototype);iv.prototype.constructor=iv;iv.prototype.As=iv;iv.Bs={};g.btCylinderShape=iv;\niv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fj(c,a)};iv.prototype.getMargin=function(){return Dj(this.zs)};iv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ej(c,a)};iv.prototype.getLocalScaling=function(){return m(Cj(this.zs),q)};iv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Bj(d,a,c)};iv.prototype.__destroy__=function(){zj(this.zs)};\nfunction jv(){throw\"cannot construct a btConvexShape, no constructor in IDL\";}jv.prototype=Object.create(p.prototype);jv.prototype.constructor=jv;jv.prototype.As=jv;jv.Bs={};g.btConvexShape=jv;jv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);bj(c,a)};jv.prototype.getLocalScaling=function(){return m($i(this.zs),q)};jv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Zi(d,a,c)};\njv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cj(c,a)};jv.prototype.getMargin=function(){return aj(this.zs)};jv.prototype.__destroy__=function(){Yi(this.zs)};function Zu(){throw\"cannot construct a btDispatcher, no constructor in IDL\";}Zu.prototype=Object.create(k.prototype);Zu.prototype.constructor=Zu;Zu.prototype.As=Zu;Zu.Bs={};g.btDispatcher=Zu;Zu.prototype.getNumManifolds=function(){return fl(this.zs)};\nZu.prototype.getManifoldByIndexInternal=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(el(c,a),kv)};Zu.prototype.__destroy__=function(){dl(this.zs)};\nfunction lv(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=void 0===e?Xl(a,c,d):void 0===f?_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(a,c,d,e):Yl(a,c,d,e,f);l(lv)[this.zs]=this}lv.prototype=Object.create(Yu.prototype);lv.prototype.constructor=lv;lv.prototype.As=lv;lv.Bs={};g.btGeneric6DofConstraint=lv;\nlv.prototype.setLinearLowerLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);fm(c,a)};lv.prototype.setLinearUpperLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gm(c,a)};lv.prototype.setAngularLowerLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cm(c,a)};lv.prototype.setAngularUpperLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dm(c,a)};lv.prototype.getFrameOffsetA=function(){return m(am(this.zs),u)};\nlv.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zl(c,a)};lv.prototype.getBreakingImpulseThreshold=function(){return $l(this.zs)};lv.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);em(c,a)};lv.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return bm(d,a,c)};\nlv.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);hm(e,a,c,d)};lv.prototype.__destroy__=function(){Wl(this.zs)};function mv(){throw\"cannot construct a btStridingMeshInterface, no constructor in IDL\";}mv.prototype=Object.create(k.prototype);mv.prototype.constructor=mv;mv.prototype.As=mv;mv.Bs={};g.btStridingMeshInterface=mv;\nmv.prototype.setScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ot(c,a)};mv.prototype.__destroy__=function(){nt(this.zs)};function nv(){throw\"cannot construct a btMotionState, no constructor in IDL\";}nv.prototype=Object.create(k.prototype);nv.prototype.constructor=nv;nv.prototype.As=nv;nv.Bs={};g.btMotionState=nv;nv.prototype.getWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Uo(c,a)};\nnv.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vo(c,a)};nv.prototype.__destroy__=function(){To(this.zs)};function B(){throw\"cannot construct a ConvexResultCallback, no constructor in IDL\";}B.prototype=Object.create(k.prototype);B.prototype.constructor=B;B.prototype.As=B;B.Bs={};g.ConvexResultCallback=B;B.prototype.hasHit=function(){return!!bd(this.zs)};B.prototype.get_m_collisionFilterGroup=B.prototype.Ds=function(){return $c(this.zs)};\nB.prototype.set_m_collisionFilterGroup=B.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dd(c,a)};Object.defineProperty(B.prototype,\"m_collisionFilterGroup\",{get:B.prototype.Ds,set:B.prototype.Fs});B.prototype.get_m_collisionFilterMask=B.prototype.Es=function(){return ad(this.zs)};B.prototype.set_m_collisionFilterMask=B.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ed(c,a)};\nObject.defineProperty(B.prototype,\"m_collisionFilterMask\",{get:B.prototype.Es,set:B.prototype.Gs});B.prototype.get_m_closestHitFraction=B.prototype.Hs=function(){return Zc(this.zs)};B.prototype.set_m_closestHitFraction=B.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cd(c,a)};Object.defineProperty(B.prototype,\"m_closestHitFraction\",{get:B.prototype.Hs,set:B.prototype.Js});B.prototype.__destroy__=function(){Yc(this.zs)};\nfunction ov(){throw\"cannot construct a ContactResultCallback, no constructor in IDL\";}ov.prototype=Object.create(k.prototype);ov.prototype.constructor=ov;ov.prototype.As=ov;ov.Bs={};g.ContactResultCallback=ov;\nov.prototype.addSingleResult=function(a,c,d,e,f,n,r){var N=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);return Rc(N,a,c,d,e,f,n,r)};ov.prototype.__destroy__=function(){Qc(this.zs)};function C(){throw\"cannot construct a RayResultCallback, no constructor in IDL\";}C.prototype=Object.create(k.prototype);\nC.prototype.constructor=C;C.prototype.As=C;C.Bs={};g.RayResultCallback=C;C.prototype.hasHit=function(){return!!Ce(this.zs)};C.prototype.get_m_collisionFilterGroup=C.prototype.Ds=function(){return ze(this.zs)};C.prototype.set_m_collisionFilterGroup=C.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ee(c,a)};Object.defineProperty(C.prototype,\"m_collisionFilterGroup\",{get:C.prototype.Ds,set:C.prototype.Fs});C.prototype.get_m_collisionFilterMask=C.prototype.Es=function(){return Ae(this.zs)};\nC.prototype.set_m_collisionFilterMask=C.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fe(c,a)};Object.defineProperty(C.prototype,\"m_collisionFilterMask\",{get:C.prototype.Es,set:C.prototype.Gs});C.prototype.get_m_closestHitFraction=C.prototype.Hs=function(){return ye(this.zs)};C.prototype.set_m_closestHitFraction=C.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);De(c,a)};Object.defineProperty(C.prototype,\"m_closestHitFraction\",{get:C.prototype.Hs,set:C.prototype.Js});\nC.prototype.get_m_collisionObject=C.prototype.Ms=function(){return m(Be(this.zs),t)};C.prototype.set_m_collisionObject=C.prototype.Rs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ge(c,a)};Object.defineProperty(C.prototype,\"m_collisionObject\",{get:C.prototype.Ms,set:C.prototype.Rs});C.prototype.__destroy__=function(){xe(this.zs)};function pv(){throw\"cannot construct a btMatrix3x3, no constructor in IDL\";}pv.prototype=Object.create(k.prototype);pv.prototype.constructor=pv;\npv.prototype.As=pv;pv.Bs={};g.btMatrix3x3=pv;pv.prototype.setEulerZYX=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);So(e,a,c,d)};pv.prototype.getRotation=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Qo(c,a)};pv.prototype.getRow=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Ro(c,a),q)};pv.prototype.__destroy__=function(){Po(this.zs)};\nfunction qv(){throw\"cannot construct a btScalarArray, no constructor in IDL\";}qv.prototype=Object.create(k.prototype);qv.prototype.constructor=qv;qv.prototype.As=qv;qv.Bs={};g.btScalarArray=qv;qv.prototype.size=qv.prototype.size=function(){return Is(this.zs)};qv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Hs(c,a)};qv.prototype.__destroy__=function(){Gs(this.zs)};function x(){throw\"cannot construct a btDispatcherInfo, no constructor in IDL\";}x.prototype=Object.create(k.prototype);\nx.prototype.constructor=x;x.prototype.As=x;x.Bs={};g.btDispatcherInfo=x;x.prototype.get_m_timeStep=x.prototype.tu=function(){return Pk(this.zs)};x.prototype.set_m_timeStep=x.prototype.Jv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$k(c,a)};Object.defineProperty(x.prototype,\"m_timeStep\",{get:x.prototype.tu,set:x.prototype.Jv});x.prototype.get_m_stepCount=x.prototype.qu=function(){return Nk(this.zs)};\nx.prototype.set_m_stepCount=x.prototype.Gv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Yk(c,a)};Object.defineProperty(x.prototype,\"m_stepCount\",{get:x.prototype.qu,set:x.prototype.Gv});x.prototype.get_m_dispatchFunc=x.prototype.Ct=function(){return Kk(this.zs)};x.prototype.set_m_dispatchFunc=x.prototype.Vu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vk(c,a)};Object.defineProperty(x.prototype,\"m_dispatchFunc\",{get:x.prototype.Ct,set:x.prototype.Vu});\nx.prototype.get_m_timeOfImpact=x.prototype.su=function(){return Ok(this.zs)};x.prototype.set_m_timeOfImpact=x.prototype.Iv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zk(c,a)};Object.defineProperty(x.prototype,\"m_timeOfImpact\",{get:x.prototype.su,set:x.prototype.Iv});x.prototype.get_m_useContinuous=x.prototype.wu=function(){return!!Qk(this.zs)};x.prototype.set_m_useContinuous=x.prototype.Lv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);al(c,a)};\nObject.defineProperty(x.prototype,\"m_useContinuous\",{get:x.prototype.wu,set:x.prototype.Lv});x.prototype.get_m_enableSatConvex=x.prototype.Et=function(){return!!Mk(this.zs)};x.prototype.set_m_enableSatConvex=x.prototype.Xu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xk(c,a)};Object.defineProperty(x.prototype,\"m_enableSatConvex\",{get:x.prototype.Et,set:x.prototype.Xu});x.prototype.get_m_enableSPU=x.prototype.Dt=function(){return!!Lk(this.zs)};\nx.prototype.set_m_enableSPU=x.prototype.Wu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Wk(c,a)};Object.defineProperty(x.prototype,\"m_enableSPU\",{get:x.prototype.Dt,set:x.prototype.Wu});x.prototype.get_m_useEpa=x.prototype.yu=function(){return!!Sk(this.zs)};x.prototype.set_m_useEpa=x.prototype.Nv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cl(c,a)};Object.defineProperty(x.prototype,\"m_useEpa\",{get:x.prototype.yu,set:x.prototype.Nv});\nx.prototype.get_m_allowedCcdPenetration=x.prototype.ot=function(){return Ik(this.zs)};x.prototype.set_m_allowedCcdPenetration=x.prototype.Hu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Tk(c,a)};Object.defineProperty(x.prototype,\"m_allowedCcdPenetration\",{get:x.prototype.ot,set:x.prototype.Hu});x.prototype.get_m_useConvexConservativeDistanceUtil=x.prototype.xu=function(){return!!Rk(this.zs)};\nx.prototype.set_m_useConvexConservativeDistanceUtil=x.prototype.Mv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);bl(c,a)};Object.defineProperty(x.prototype,\"m_useConvexConservativeDistanceUtil\",{get:x.prototype.xu,set:x.prototype.Mv});x.prototype.get_m_convexConservativeDistanceThreshold=x.prototype.vt=function(){return Jk(this.zs)};x.prototype.set_m_convexConservativeDistanceThreshold=x.prototype.Ou=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Uk(c,a)};\nObject.defineProperty(x.prototype,\"m_convexConservativeDistanceThreshold\",{get:x.prototype.vt,set:x.prototype.Ou});x.prototype.__destroy__=function(){Hk(this.zs)};function rv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===c?ej(a):fj(a,c);l(rv)[this.zs]=this}rv.prototype=Object.create(jv.prototype);rv.prototype.constructor=rv;rv.prototype.As=rv;rv.Bs={};g.btConvexTriangleMeshShape=rv;\nrv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);jj(c,a)};rv.prototype.getLocalScaling=function(){return m(hj(this.zs),q)};rv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);gj(d,a,c)};rv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);kj(c,a)};rv.prototype.getMargin=function(){return ij(this.zs)};rv.prototype.__destroy__=function(){dj(this.zs)};\nfunction av(){throw\"cannot construct a btBroadphaseInterface, no constructor in IDL\";}av.prototype=Object.create(k.prototype);av.prototype.constructor=av;av.prototype.As=av;av.Bs={};g.btBroadphaseInterface=av;av.prototype.getOverlappingPairCache=function(){return m(pf(this.zs),$u)};av.prototype.__destroy__=function(){of(this.zs)};function sv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=void 0===a?Kj():Lj(a);l(sv)[this.zs]=this}sv.prototype=Object.create(k.prototype);sv.prototype.constructor=sv;\nsv.prototype.As=sv;sv.Bs={};g.btDefaultCollisionConfiguration=sv;sv.prototype.__destroy__=function(){Jj(this.zs)};function D(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===e?Sq(a,c,d):Tq(a,c,d,e);l(D)[this.zs]=this}D.prototype=Object.create(k.prototype);D.prototype.constructor=D;D.prototype.As=D;D.Bs={};g.btRigidBodyConstructionInfo=D;D.prototype.get_m_linearDamping=D.prototype.Qt=function(){return br(this.zs)};\nD.prototype.set_m_linearDamping=D.prototype.iv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);nr(c,a)};Object.defineProperty(D.prototype,\"m_linearDamping\",{get:D.prototype.Qt,set:D.prototype.iv});D.prototype.get_m_angularDamping=D.prototype.qt=function(){return Zq(this.zs)};D.prototype.set_m_angularDamping=D.prototype.Ju=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);kr(c,a)};Object.defineProperty(D.prototype,\"m_angularDamping\",{get:D.prototype.qt,set:D.prototype.Ju});\nD.prototype.get_m_friction=D.prototype.Gt=function(){return ar(this.zs)};D.prototype.set_m_friction=D.prototype.Zu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mr(c,a)};Object.defineProperty(D.prototype,\"m_friction\",{get:D.prototype.Gt,set:D.prototype.Zu});D.prototype.get_m_rollingFriction=D.prototype.lu=function(){return er(this.zs)};D.prototype.set_m_rollingFriction=D.prototype.Bv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qr(c,a)};\nObject.defineProperty(D.prototype,\"m_rollingFriction\",{get:D.prototype.lu,set:D.prototype.Bv});D.prototype.get_m_restitution=D.prototype.ku=function(){return dr(this.zs)};D.prototype.set_m_restitution=D.prototype.Av=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);pr(c,a)};Object.defineProperty(D.prototype,\"m_restitution\",{get:D.prototype.ku,set:D.prototype.Av});D.prototype.get_m_linearSleepingThreshold=D.prototype.Rt=function(){return cr(this.zs)};\nD.prototype.set_m_linearSleepingThreshold=D.prototype.jv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);or(c,a)};Object.defineProperty(D.prototype,\"m_linearSleepingThreshold\",{get:D.prototype.Rt,set:D.prototype.jv});D.prototype.get_m_angularSleepingThreshold=D.prototype.rt=function(){return $q(this.zs)};D.prototype.set_m_angularSleepingThreshold=D.prototype.Ku=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lr(c,a)};\nObject.defineProperty(D.prototype,\"m_angularSleepingThreshold\",{get:D.prototype.rt,set:D.prototype.Ku});D.prototype.get_m_additionalDamping=D.prototype.lt=function(){return!!Xq(this.zs)};D.prototype.set_m_additionalDamping=D.prototype.Eu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ir(c,a)};Object.defineProperty(D.prototype,\"m_additionalDamping\",{get:D.prototype.lt,set:D.prototype.Eu});D.prototype.get_m_additionalDampingFactor=D.prototype.mt=function(){return Wq(this.zs)};\nD.prototype.set_m_additionalDampingFactor=D.prototype.Fu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hr(c,a)};Object.defineProperty(D.prototype,\"m_additionalDampingFactor\",{get:D.prototype.mt,set:D.prototype.Fu});D.prototype.get_m_additionalLinearDampingThresholdSqr=D.prototype.nt=function(){return Yq(this.zs)};D.prototype.set_m_additionalLinearDampingThresholdSqr=D.prototype.Gu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);jr(c,a)};\nObject.defineProperty(D.prototype,\"m_additionalLinearDampingThresholdSqr\",{get:D.prototype.nt,set:D.prototype.Gu});D.prototype.get_m_additionalAngularDampingThresholdSqr=D.prototype.kt=function(){return Vq(this.zs)};D.prototype.set_m_additionalAngularDampingThresholdSqr=D.prototype.Du=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gr(c,a)};Object.defineProperty(D.prototype,\"m_additionalAngularDampingThresholdSqr\",{get:D.prototype.kt,set:D.prototype.Du});\nD.prototype.get_m_additionalAngularDampingFactor=D.prototype.jt=function(){return Uq(this.zs)};D.prototype.set_m_additionalAngularDampingFactor=D.prototype.Cu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);fr(c,a)};Object.defineProperty(D.prototype,\"m_additionalAngularDampingFactor\",{get:D.prototype.jt,set:D.prototype.Cu});D.prototype.__destroy__=function(){Rq(this.zs)};function tv(){throw\"cannot construct a btCollisionConfiguration, no constructor in IDL\";}tv.prototype=Object.create(k.prototype);\ntv.prototype.constructor=tv;tv.prototype.As=tv;tv.Bs={};g.btCollisionConfiguration=tv;tv.prototype.__destroy__=function(){eg(this.zs)};function kv(){this.zs=Np();l(kv)[this.zs]=this}kv.prototype=Object.create(k.prototype);kv.prototype.constructor=kv;kv.prototype.As=kv;kv.Bs={};g.btPersistentManifold=kv;kv.prototype.getBody0=function(){return m(Op(this.zs),t)};kv.prototype.getBody1=function(){return m(Pp(this.zs),t)};kv.prototype.getNumContacts=function(){return Rp(this.zs)};\nkv.prototype.getContactPoint=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Qp(c,a),E)};kv.prototype.__destroy__=function(){Mp(this.zs)};function uv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=void 0===a?qh():rh(a);l(uv)[this.zs]=this}uv.prototype=Object.create(p.prototype);uv.prototype.constructor=uv;uv.prototype.As=uv;uv.Bs={};g.btCompoundShape=uv;\nuv.prototype.addChildShape=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ph(d,a,c)};uv.prototype.removeChildShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yh(c,a)};uv.prototype.removeChildShapeByIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xh(c,a)};uv.prototype.getNumChildShapes=function(){return wh(this.zs)};uv.prototype.getChildShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(th(c,a),p)};\nuv.prototype.updateChildTransform=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===d?Bh(e,a,c):Ch(e,a,c,d)};uv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ah(c,a)};uv.prototype.getMargin=function(){return vh(this.zs)};uv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zh(c,a)};uv.prototype.getLocalScaling=function(){return m(uh(this.zs),q)};\nuv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);sh(d,a,c)};uv.prototype.__destroy__=function(){oh(this.zs)};function F(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=bc(a,c);l(F)[this.zs]=this}F.prototype=Object.create(B.prototype);F.prototype.constructor=F;F.prototype.As=F;F.Bs={};g.ClosestConvexResultCallback=F;F.prototype.hasHit=function(){return!!lc(this.zs)};\nF.prototype.get_m_convexFromWorld=F.prototype.wt=function(){return m(hc(this.zs),q)};F.prototype.set_m_convexFromWorld=F.prototype.Pu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);pc(c,a)};Object.defineProperty(F.prototype,\"m_convexFromWorld\",{get:F.prototype.wt,set:F.prototype.Pu});F.prototype.get_m_convexToWorld=F.prototype.xt=function(){return m(ic(this.zs),q)};F.prototype.set_m_convexToWorld=F.prototype.Qu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qc(c,a)};\nObject.defineProperty(F.prototype,\"m_convexToWorld\",{get:F.prototype.xt,set:F.prototype.Qu});F.prototype.get_m_hitNormalWorld=F.prototype.Ns=function(){return m(jc(this.zs),q)};F.prototype.set_m_hitNormalWorld=F.prototype.Ss=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rc(c,a)};Object.defineProperty(F.prototype,\"m_hitNormalWorld\",{get:F.prototype.Ns,set:F.prototype.Ss});F.prototype.get_m_hitPointWorld=F.prototype.Os=function(){return m(kc(this.zs),q)};\nF.prototype.set_m_hitPointWorld=F.prototype.Ts=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);sc(c,a)};Object.defineProperty(F.prototype,\"m_hitPointWorld\",{get:F.prototype.Os,set:F.prototype.Ts});F.prototype.get_m_collisionFilterGroup=F.prototype.Ds=function(){return ec(this.zs)};F.prototype.set_m_collisionFilterGroup=F.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);nc(c,a)};Object.defineProperty(F.prototype,\"m_collisionFilterGroup\",{get:F.prototype.Ds,set:F.prototype.Fs});\nF.prototype.get_m_collisionFilterMask=F.prototype.Es=function(){return fc(this.zs)};F.prototype.set_m_collisionFilterMask=F.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);oc(c,a)};Object.defineProperty(F.prototype,\"m_collisionFilterMask\",{get:F.prototype.Es,set:F.prototype.Gs});F.prototype.get_m_closestHitFraction=F.prototype.Hs=function(){return dc(this.zs)};\nF.prototype.set_m_closestHitFraction=F.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mc(c,a)};Object.defineProperty(F.prototype,\"m_closestHitFraction\",{get:F.prototype.Hs,set:F.prototype.Js});F.prototype.__destroy__=function(){cc(this.zs)};function G(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Eb(a,c);l(G)[this.zs]=this}G.prototype=Object.create(C.prototype);G.prototype.constructor=G;G.prototype.As=G;G.Bs={};g.AllHitsRayResultCallback=G;\nG.prototype.hasHit=function(){return!!Rb(this.zs)};G.prototype.get_m_collisionObjects=G.prototype.tt=function(){return m(Lb(this.zs),vv)};G.prototype.set_m_collisionObjects=G.prototype.Mu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Wb(c,a)};Object.defineProperty(G.prototype,\"m_collisionObjects\",{get:G.prototype.tt,set:G.prototype.Mu});G.prototype.get_m_rayFromWorld=G.prototype.bt=function(){return m(Pb(this.zs),q)};\nG.prototype.set_m_rayFromWorld=G.prototype.et=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$b(c,a)};Object.defineProperty(G.prototype,\"m_rayFromWorld\",{get:G.prototype.bt,set:G.prototype.et});G.prototype.get_m_rayToWorld=G.prototype.ct=function(){return m(Qb(this.zs),q)};G.prototype.set_m_rayToWorld=G.prototype.ft=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ac(c,a)};Object.defineProperty(G.prototype,\"m_rayToWorld\",{get:G.prototype.ct,set:G.prototype.ft});\nG.prototype.get_m_hitNormalWorld=G.prototype.Ns=function(){return m(Nb(this.zs),wv)};G.prototype.set_m_hitNormalWorld=G.prototype.Ss=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Yb(c,a)};Object.defineProperty(G.prototype,\"m_hitNormalWorld\",{get:G.prototype.Ns,set:G.prototype.Ss});G.prototype.get_m_hitPointWorld=G.prototype.Os=function(){return m(Ob(this.zs),wv)};G.prototype.set_m_hitPointWorld=G.prototype.Ts=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zb(c,a)};\nObject.defineProperty(G.prototype,\"m_hitPointWorld\",{get:G.prototype.Os,set:G.prototype.Ts});G.prototype.get_m_hitFractions=G.prototype.Lt=function(){return m(Mb(this.zs),qv)};G.prototype.set_m_hitFractions=G.prototype.dv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xb(c,a)};Object.defineProperty(G.prototype,\"m_hitFractions\",{get:G.prototype.Lt,set:G.prototype.dv});G.prototype.get_m_collisionFilterGroup=G.prototype.Ds=function(){return Hb(this.zs)};\nG.prototype.set_m_collisionFilterGroup=G.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Tb(c,a)};Object.defineProperty(G.prototype,\"m_collisionFilterGroup\",{get:G.prototype.Ds,set:G.prototype.Fs});G.prototype.get_m_collisionFilterMask=G.prototype.Es=function(){return Ib(this.zs)};G.prototype.set_m_collisionFilterMask=G.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ub(c,a)};\nObject.defineProperty(G.prototype,\"m_collisionFilterMask\",{get:G.prototype.Es,set:G.prototype.Gs});G.prototype.get_m_closestHitFraction=G.prototype.Hs=function(){return Gb(this.zs)};G.prototype.set_m_closestHitFraction=G.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Sb(c,a)};Object.defineProperty(G.prototype,\"m_closestHitFraction\",{get:G.prototype.Hs,set:G.prototype.Js});G.prototype.get_m_collisionObject=G.prototype.Ms=function(){return m(Kb(this.zs),t)};\nG.prototype.set_m_collisionObject=G.prototype.Rs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vb(c,a)};Object.defineProperty(G.prototype,\"m_collisionObject\",{get:G.prototype.Ms,set:G.prototype.Rs});G.prototype.__destroy__=function(){Fb(this.zs)};function xv(){this.zs=Ne();l(xv)[this.zs]=this}xv.prototype=Object.create(k.prototype);xv.prototype.constructor=xv;xv.prototype.As=xv;xv.Bs={};g.VHACD=xv;\nxv.prototype.Compute=function(a,c,d,e,f,n,r){var N=this.zs;b.Is();if(\"object\"==typeof a&&\"object\"===typeof a){var ba=b.Vs(a,Ga);b.copy(a,Ga,ba);a=ba}c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);\"object\"==typeof e&&\"object\"===typeof e&&(ba=b.Vs(e,h),b.copy(e,h,ba),e=ba);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);return!!Je(N,a,c,d,e,f,n,r)};xv.prototype.GetNConvexHulls=function(){return Le(this.zs)};\nxv.prototype.GetConvexHull=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ke(d,a,c)};xv.prototype.Cancel=function(){He(this.zs)};xv.prototype.Clean=function(){Ie(this.zs)};xv.prototype.Release=function(){Me(this.zs)};xv.prototype.__destroy__=function(){Oe(this.zs)};function yv(){this.zs=Dl();l(yv)[this.zs]=this}yv.prototype=Object.create(cv.prototype);yv.prototype.constructor=yv;yv.prototype.As=yv;yv.Bs={};g.btEmptyShape=yv;\nyv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gl(c,a)};yv.prototype.getLocalScaling=function(){return m(Fl(this.zs),q)};yv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);El(d,a,c)};yv.prototype.__destroy__=function(){Cl(this.zs)};function H(){this.zs=pi();l(H)[this.zs]=this}H.prototype=Object.create(k.prototype);H.prototype.constructor=H;H.prototype.As=H;H.Bs={};\ng.btConstraintSetting=H;H.prototype.get_m_tau=H.prototype.ru=function(){return si(this.zs)};H.prototype.set_m_tau=H.prototype.Hv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vi(c,a)};Object.defineProperty(H.prototype,\"m_tau\",{get:H.prototype.ru,set:H.prototype.Hv});H.prototype.get_m_damping=H.prototype.At=function(){return qi(this.zs)};H.prototype.set_m_damping=H.prototype.Tu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ti(c,a)};\nObject.defineProperty(H.prototype,\"m_damping\",{get:H.prototype.At,set:H.prototype.Tu});H.prototype.get_m_impulseClamp=H.prototype.Ot=function(){return ri(this.zs)};H.prototype.set_m_impulseClamp=H.prototype.gv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ui(c,a)};Object.defineProperty(H.prototype,\"m_impulseClamp\",{get:H.prototype.Ot,set:H.prototype.gv});H.prototype.__destroy__=function(){oi(this.zs)};function I(){throw\"cannot construct a LocalShapeInfo, no constructor in IDL\";}\nI.prototype=Object.create(k.prototype);I.prototype.constructor=I;I.prototype.As=I;I.Bs={};g.LocalShapeInfo=I;I.prototype.get_m_shapePart=I.prototype.nu=function(){return Qd(this.zs)};I.prototype.set_m_shapePart=I.prototype.Dv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Sd(c,a)};Object.defineProperty(I.prototype,\"m_shapePart\",{get:I.prototype.nu,set:I.prototype.Dv});I.prototype.get_m_triangleIndex=I.prototype.uu=function(){return Rd(this.zs)};\nI.prototype.set_m_triangleIndex=I.prototype.Kv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Td(c,a)};Object.defineProperty(I.prototype,\"m_triangleIndex\",{get:I.prototype.uu,set:I.prototype.Kv});I.prototype.__destroy__=function(){Pd(this.zs)};function J(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=Dr(a);l(J)[this.zs]=this}J.prototype=Object.create(t.prototype);J.prototype.constructor=J;J.prototype.As=J;J.Bs={};g.btRigidBody=J;\nJ.prototype.getCenterOfMassTransform=function(){return m(Lr(this.zs),u)};J.prototype.setCenterOfMassTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ks(c,a)};J.prototype.setSleepingThresholds=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);As(d,a,c)};J.prototype.getLinearDamping=function(){return Rr(this.zs)};J.prototype.getAngularDamping=function(){return Gr(this.zs)};\nJ.prototype.setDamping=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ps(d,a,c)};J.prototype.setMassProps=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);vs(d,a,c)};J.prototype.getLinearFactor=function(){return m(Sr(this.zs),q)};J.prototype.setLinearFactor=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ts(c,a)};\nJ.prototype.applyTorque=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Cr(c,a)};J.prototype.applyLocalTorque=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ar(c,a)};J.prototype.applyForce=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);xr(d,a,c)};J.prototype.applyCentralForce=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ur(c,a)};\nJ.prototype.applyCentralLocalForce=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);wr(c,a)};J.prototype.applyTorqueImpulse=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Br(c,a)};J.prototype.applyImpulse=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);zr(d,a,c)};J.prototype.applyCentralImpulse=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vr(c,a)};J.prototype.updateInertiaTensor=function(){Fs(this.zs)};\nJ.prototype.getLinearVelocity=function(){return m(Tr(this.zs),q)};J.prototype.getAngularVelocity=function(){return m(Ir(this.zs),q)};J.prototype.setLinearVelocity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);us(c,a)};J.prototype.setAngularVelocity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gs(c,a)};J.prototype.getMotionState=function(){return m(Ur(this.zs),nv)};J.prototype.setMotionState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xs(c,a)};\nJ.prototype.getAngularFactor=function(){return m(Hr(this.zs),q)};J.prototype.setAngularFactor=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);es(c,a)};J.prototype.upcast=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Es(c,a),J)};J.prototype.getAabb=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Fr(d,a,c)};J.prototype.applyGravity=function(){yr(this.zs)};J.prototype.getGravity=function(){return m(Qr(this.zs),q)};\nJ.prototype.setGravity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ss(c,a)};J.prototype.getBroadphaseProxy=function(){return m(Kr(this.zs),v)};J.prototype.getFlags=function(){return Or(this.zs)};J.prototype.setFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qs(c,a)};J.prototype.setAnisotropicFriction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);hs(d,a,c)};\nJ.prototype.getCollisionShape=function(){return m(Nr(this.zs),p)};J.prototype.setContactProcessingThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ns(c,a)};J.prototype.setActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ds(c,a)};J.prototype.forceActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Er(c,a)};J.prototype.activate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);void 0===a?sr(c):tr(c,a)};\nJ.prototype.isActive=function(){return!!$r(this.zs)};J.prototype.isKinematicObject=function(){return!!as(this.zs)};J.prototype.isStaticObject=function(){return!!bs(this.zs)};J.prototype.isStaticOrKinematicObject=function(){return!!cs(this.zs)};J.prototype.getRestitution=function(){return Vr(this.zs)};J.prototype.getFriction=function(){return Pr(this.zs)};J.prototype.getRollingFriction=function(){return Wr(this.zs)};\nJ.prototype.setRestitution=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ys(c,a)};J.prototype.setFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rs(c,a)};J.prototype.setRollingFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zs(c,a)};J.prototype.getWorldTransform=function(){return m(Zr(this.zs),u)};J.prototype.getCollisionFlags=function(){return Mr(this.zs)};\nJ.prototype.setCollisionFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ls(c,a)};J.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ds(c,a)};J.prototype.setCollisionShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ms(c,a)};J.prototype.setCcdMotionThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);is(c,a)};J.prototype.setCcdSweptSphereRadius=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);js(c,a)};\nJ.prototype.getUserIndex=function(){return Xr(this.zs)};J.prototype.setUserIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bs(c,a)};J.prototype.getUserPointer=function(){return m(Yr(this.zs),Xu)};J.prototype.setUserPointer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Cs(c,a)};J.prototype.getBroadphaseHandle=function(){return m(Jr(this.zs),v)};J.prototype.__destroy__=function(){rr(this.zs)};\nfunction zv(){throw\"cannot construct a btIndexedMeshArray, no constructor in IDL\";}zv.prototype=Object.create(k.prototype);zv.prototype.constructor=zv;zv.prototype.As=zv;zv.Bs={};g.btIndexedMeshArray=zv;zv.prototype.size=zv.prototype.size=function(){return Un(this.zs)};zv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Tn(c,a),Av)};zv.prototype.__destroy__=function(){Sn(this.zs)};function Bv(){this.zs=Hj();l(Bv)[this.zs]=this}Bv.prototype=Object.create(k.prototype);\nBv.prototype.constructor=Bv;Bv.prototype.As=Bv;Bv.Bs={};g.btDbvtBroadphase=Bv;Bv.prototype.getOverlappingPairCache=function(){return m(Ij(this.zs),$u)};Bv.prototype.__destroy__=function(){Gj(this.zs)};\nfunction Cv(a,c,d,e,f,n,r,N,ba){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);N&&\"object\"===typeof N&&(N=N.zs);ba&&\"object\"===typeof ba&&(ba=ba.zs);this.zs=mn(a,c,d,e,f,n,r,N,ba);l(Cv)[this.zs]=this}Cv.prototype=Object.create(cv.prototype);Cv.prototype.constructor=Cv;Cv.prototype.As=Cv;Cv.Bs={};\ng.btHeightfieldTerrainShape=Cv;Cv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rn(c,a)};Cv.prototype.getMargin=function(){return pn(this.zs)};Cv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qn(c,a)};Cv.prototype.getLocalScaling=function(){return m(on(this.zs),q)};Cv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);nn(d,a,c)};\nCv.prototype.__destroy__=function(){ln(this.zs)};function K(){this.zs=Ud();l(K)[this.zs]=this}K.prototype=Object.create(k.prototype);K.prototype.constructor=K;K.prototype.As=K;K.Bs={};g.Parameters=K;K.prototype.get_m_concavity=K.prototype.ut=function(){return Yd(this.zs)};K.prototype.set_m_concavity=K.prototype.Nu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);le(c,a)};Object.defineProperty(K.prototype,\"m_concavity\",{get:K.prototype.ut,set:K.prototype.Nu});\nK.prototype.get_m_alpha=K.prototype.pt=function(){return Wd(this.zs)};K.prototype.set_m_alpha=K.prototype.Iu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);je(c,a)};Object.defineProperty(K.prototype,\"m_alpha\",{get:K.prototype.pt,set:K.prototype.Iu});K.prototype.get_m_beta=K.prototype.st=function(){return Xd(this.zs)};K.prototype.set_m_beta=K.prototype.Lu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ke(c,a)};Object.defineProperty(K.prototype,\"m_beta\",{get:K.prototype.st,set:K.prototype.Lu});\nK.prototype.get_m_gamma=K.prototype.Ht=function(){return be(this.zs)};K.prototype.set_m_gamma=K.prototype.$u=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);pe(c,a)};Object.defineProperty(K.prototype,\"m_gamma\",{get:K.prototype.Ht,set:K.prototype.$u});K.prototype.get_m_minVolumePerCH=K.prototype.Wt=function(){return de(this.zs)};K.prototype.set_m_minVolumePerCH=K.prototype.ov=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);re(c,a)};\nObject.defineProperty(K.prototype,\"m_minVolumePerCH\",{get:K.prototype.Wt,set:K.prototype.ov});K.prototype.get_m_resolution=K.prototype.ju=function(){return ie(this.zs)};K.prototype.set_m_resolution=K.prototype.zv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);we(c,a)};Object.defineProperty(K.prototype,\"m_resolution\",{get:K.prototype.ju,set:K.prototype.zv});K.prototype.get_m_maxNumVerticesPerCH=K.prototype.Vt=function(){return ce(this.zs)};\nK.prototype.set_m_maxNumVerticesPerCH=K.prototype.nv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qe(c,a)};Object.defineProperty(K.prototype,\"m_maxNumVerticesPerCH\",{get:K.prototype.Vt,set:K.prototype.nv});K.prototype.get_m_depth=K.prototype.Bt=function(){return ae(this.zs)};K.prototype.set_m_depth=K.prototype.Uu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);oe(c,a)};Object.defineProperty(K.prototype,\"m_depth\",{get:K.prototype.Bt,set:K.prototype.Uu});\nK.prototype.get_m_planeDownsampling=K.prototype.fu=function(){return he(this.zs)};K.prototype.set_m_planeDownsampling=K.prototype.wv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ve(c,a)};Object.defineProperty(K.prototype,\"m_planeDownsampling\",{get:K.prototype.fu,set:K.prototype.wv});K.prototype.get_m_convexhullDownsampling=K.prototype.zt=function(){return $d(this.zs)};\nK.prototype.set_m_convexhullDownsampling=K.prototype.Su=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ne(c,a)};Object.defineProperty(K.prototype,\"m_convexhullDownsampling\",{get:K.prototype.zt,set:K.prototype.Su});K.prototype.get_m_pca=K.prototype.du=function(){return ge(this.zs)};K.prototype.set_m_pca=K.prototype.uv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ue(c,a)};Object.defineProperty(K.prototype,\"m_pca\",{get:K.prototype.du,set:K.prototype.uv});\nK.prototype.get_m_mode=K.prototype.Xt=function(){return ee(this.zs)};K.prototype.set_m_mode=K.prototype.pv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);se(c,a)};Object.defineProperty(K.prototype,\"m_mode\",{get:K.prototype.Xt,set:K.prototype.pv});K.prototype.get_m_convexhullApproximation=K.prototype.yt=function(){return Zd(this.zs)};K.prototype.set_m_convexhullApproximation=K.prototype.Ru=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);me(c,a)};\nObject.defineProperty(K.prototype,\"m_convexhullApproximation\",{get:K.prototype.yt,set:K.prototype.Ru});K.prototype.get_m_oclAcceleration=K.prototype.cu=function(){return fe(this.zs)};K.prototype.set_m_oclAcceleration=K.prototype.tv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);te(c,a)};Object.defineProperty(K.prototype,\"m_oclAcceleration\",{get:K.prototype.cu,set:K.prototype.tv});K.prototype.__destroy__=function(){Vd(this.zs)};\nfunction Dv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=gg(a);l(Dv)[this.zs]=this}Dv.prototype=Object.create(Zu.prototype);Dv.prototype.constructor=Dv;Dv.prototype.As=Dv;Dv.Bs={};g.btCollisionDispatcher=Dv;Dv.prototype.getNumManifolds=function(){return ig(this.zs)};Dv.prototype.getManifoldByIndexInternal=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(hg(c,a),kv)};Dv.prototype.__destroy__=function(){fg(this.zs)};\nfunction Ev(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=void 0===d?cf(a,c):void 0===e?df(a,c,d):void 0===f?ef(a,c,d,e):ff(a,c,d,e,f);l(Ev)[this.zs]=this}Ev.prototype=Object.create(k.prototype);Ev.prototype.constructor=Ev;Ev.prototype.As=Ev;Ev.Bs={};g.btAxisSweep3=Ev;Ev.prototype.__destroy__=function(){bf(this.zs)};\nfunction L(){this.zs=sd();l(L)[this.zs]=this}L.prototype=Object.create(k.prototype);L.prototype.constructor=L;L.prototype.As=L;L.Bs={};g.HACD=L;L.prototype.SetCompacityWeight=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);td(c,a)};L.prototype.SetVolumeWeight=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bd(c,a)};L.prototype.SetConcavity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ud(c,a)};\nL.prototype.SetNClusters=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vd(c,a)};L.prototype.SetNVerticesPerCH=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yd(c,a)};L.prototype.SetPoints=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zd(c,a)};L.prototype.SetNPoints=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);wd(c,a)};L.prototype.SetTriangles=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ad(c,a)};\nL.prototype.SetNTriangles=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xd(c,a)};L.prototype.Compute=function(){nd(this.zs)};L.prototype.GetNClusters=function(){return pd(this.zs)};L.prototype.GetNPointsCH=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return qd(c,a)};L.prototype.GetNTrianglesCH=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return rd(c,a)};\nL.prototype.GetCH=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);return od(e,a,c,d)};L.prototype.__destroy__=function(){Cd(this.zs)};function Xu(){throw\"cannot construct a VoidPtr, no constructor in IDL\";}Xu.prototype=Object.create(k.prototype);Xu.prototype.constructor=Xu;Xu.prototype.As=Xu;Xu.Bs={};g.VoidPtr=Xu;Xu.prototype.__destroy__=function(){Ze(this.zs)};\nfunction M(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===d?Xh(a,c):void 0===e?_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(a,c,d):Yh(a,c,d,e);l(M)[this.zs]=this}M.prototype=Object.create(Yu.prototype);M.prototype.constructor=M;M.prototype.As=M;M.Bs={};g.btConeTwistConstraint=M;\nM.prototype.setLimit=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);fi(d,a,c)};M.prototype.setAngularOnly=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ci(c,a)};M.prototype.setDamping=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ei(c,a)};M.prototype.enableMotor=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$h(c,a)};M.prototype.setMaxMotorImpulse=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);hi(c,a)};\nM.prototype.setMaxMotorImpulseNormalized=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gi(c,a)};M.prototype.setMotorTarget=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ji(c,a)};M.prototype.setMotorTargetInConstraintSpace=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ii(c,a)};M.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Zh(c,a)};M.prototype.getBreakingImpulseThreshold=function(){return ai(this.zs)};\nM.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);di(c,a)};M.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return bi(d,a,c)};M.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);ki(e,a,c,d)};M.prototype.__destroy__=function(){Wh(this.zs)};\nfunction Fv(a,c,d,e,f,n,r){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);this.zs=void 0===d?tn(a,c):void 0===e?un(a,c,d):void 0===f?vn(a,c,d,e):void 0===n?wn(a,c,d,e,f):void 0===r?xn(a,c,d,e,f,n):yn(a,c,d,e,f,n,r);l(Fv)[this.zs]=this}Fv.prototype=Object.create(Yu.prototype);Fv.prototype.constructor=Fv;\nFv.prototype.As=Fv;Fv.Bs={};g.btHingeConstraint=Fv;Fv.prototype.setLimit=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);void 0===f?Gn(n,a,c,d,e):Hn(n,a,c,d,e,f)};Fv.prototype.enableAngularMotor=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);zn(e,a,c,d)};\nFv.prototype.setAngularOnly=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);En(c,a)};Fv.prototype.enableMotor=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bn(c,a)};Fv.prototype.setMaxMotorImpulse=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);In(c,a)};Fv.prototype.setMotorTarget=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Jn(d,a,c)};\nFv.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);An(c,a)};Fv.prototype.getBreakingImpulseThreshold=function(){return Cn(this.zs)};Fv.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fn(c,a)};Fv.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Dn(d,a,c)};\nFv.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Kn(e,a,c,d)};Fv.prototype.__destroy__=function(){sn(this.zs)};function Gv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Nh(a,c);l(Gv)[this.zs]=this}Gv.prototype=Object.create(fv.prototype);Gv.prototype.constructor=Gv;Gv.prototype.As=Gv;Gv.Bs={};g.btConeShapeZ=Gv;\nGv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Qh(c,a)};Gv.prototype.getLocalScaling=function(){return m(Ph(this.zs),q)};Gv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Oh(d,a,c)};Gv.prototype.__destroy__=function(){Mh(this.zs)};function Hv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Ih(a,c);l(Hv)[this.zs]=this}Hv.prototype=Object.create(fv.prototype);\nHv.prototype.constructor=Hv;Hv.prototype.As=Hv;Hv.Bs={};g.btConeShapeX=Hv;Hv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lh(c,a)};Hv.prototype.getLocalScaling=function(){return m(Kh(this.zs),q)};Hv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Jh(d,a,c)};Hv.prototype.__destroy__=function(){Hh(this.zs)};\nfunction Iv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===a?Jt():void 0===c?Kt(a):Lt(a,c);l(Iv)[this.zs]=this}Iv.prototype=Object.create(mv.prototype);Iv.prototype.constructor=Iv;Iv.prototype.As=Iv;Iv.Bs={};g.btTriangleMesh=Iv;Iv.prototype.addTriangle=function(a,c,d,e){var f=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);void 0===e?Ht(f,a,c,d):It(f,a,c,d,e)};\nIv.prototype.findOrAddVertex=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Mt(d,a,c)};Iv.prototype.addIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gt(c,a)};Iv.prototype.getIndexedMeshArray=function(){return m(Nt(this.zs),zv)};Iv.prototype.setScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ot(c,a)};Iv.prototype.__destroy__=function(){Ft(this.zs)};\nfunction Jv(a,c){b.Is();\"object\"==typeof a&&(a=Wu(a));c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===a?Hi():void 0===c?Ii(a):Ji(a,c);l(Jv)[this.zs]=this}Jv.prototype=Object.create(p.prototype);Jv.prototype.constructor=Jv;Jv.prototype.As=Jv;Jv.Bs={};g.btConvexHullShape=Jv;Jv.prototype.addPoint=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);void 0===c?Fi(d,a):Gi(d,a,c)};\nJv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Si(c,a)};Jv.prototype.getMargin=function(){return Ni(this.zs)};Jv.prototype.getNumVertices=function(){return Oi(this.zs)};Jv.prototype.initializePolyhedralFeatures=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return!!Pi(c,a)};Jv.prototype.recalcLocalAabb=function(){Qi(this.zs)};Jv.prototype.getConvexPolyhedron=function(){return m(Li(this.zs),O)};\nJv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ri(c,a)};Jv.prototype.getLocalScaling=function(){return m(Mi(this.zs),q)};Jv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ki(d,a,c)};Jv.prototype.__destroy__=function(){Ei(this.zs)};function Kv(){throw\"cannot construct a btCollisionObjectWrapper, no constructor in IDL\";}Kv.prototype=Object.create(k.prototype);\nKv.prototype.constructor=Kv;Kv.prototype.As=Kv;Kv.Bs={};g.btCollisionObjectWrapper=Kv;Kv.prototype.getWorldTransform=function(){return m(lg(this.zs),u)};Kv.prototype.getCollisionObject=function(){return m(jg(this.zs),t)};Kv.prototype.getCollisionShape=function(){return m(kg(this.zs),p)};function Lv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=Ms(a);l(Lv)[this.zs]=this}Lv.prototype=Object.create(k.prototype);Lv.prototype.constructor=Lv;Lv.prototype.As=Lv;Lv.Bs={};g.btShapeHull=Lv;\nLv.prototype.buildHull=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return!!Ns(c,a)};Lv.prototype.numVertices=function(){return Ps(this.zs)};Lv.prototype.getVertexPointer=function(){return m(Os(this.zs),q)};Lv.prototype.__destroy__=function(){Ls(this.zs)};function Mv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===a?Pj():void 0===c?Qj(a):Rj(a,c);l(Mv)[this.zs]=this}Mv.prototype=Object.create(nv.prototype);Mv.prototype.constructor=Mv;\nMv.prototype.As=Mv;Mv.Bs={};g.btDefaultMotionState=Mv;Mv.prototype.getWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Sj(c,a)};Mv.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Uj(c,a)};Mv.prototype.get_m_graphicsWorldTrans=Mv.prototype.It=function(){return m(Tj(this.zs),u)};Mv.prototype.set_m_graphicsWorldTrans=Mv.prototype.av=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vj(c,a)};\nObject.defineProperty(Mv.prototype,\"m_graphicsWorldTrans\",{get:Mv.prototype.It,set:Mv.prototype.av});Mv.prototype.__destroy__=function(){Oj(this.zs)};\nfunction P(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===a?qu():void 0===c?_emscripten_bind_btVector4_btVector4_1(a):void 0===d?_emscripten_bind_btVector4_btVector4_2(a,c):void 0===e?_emscripten_bind_btVector4_btVector4_3(a,c,d):ru(a,c,d,e);l(P)[this.zs]=this}P.prototype=Object.create(q.prototype);P.prototype.constructor=P;P.prototype.As=P;P.Bs={};g.btVector4=P;\nP.prototype.w=P.prototype.ht=function(){return Eu(this.zs)};P.prototype.setValue=function(a,c,d,e){var f=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);Au(f,a,c,d,e)};P.prototype.length=P.prototype.length=function(){return uu(this.zs)};P.prototype.length2=function(){return tu(this.zs)};P.prototype.x=P.prototype.x=function(){return Fu(this.zs)};P.prototype.y=P.prototype.y=function(){return Gu(this.zs)};\nP.prototype.z=P.prototype.z=function(){return Hu(this.zs)};P.prototype.setX=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bu(c,a)};P.prototype.setY=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Cu(c,a)};P.prototype.setZ=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Du(c,a)};P.prototype.normalize=P.prototype.normalize=function(){vu(this.zs)};\nP.prototype.rotate=P.prototype.rotate=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return m(zu(d,a,c),q)};P.prototype.dot=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return su(c,a)};P.prototype.op_mul=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(xu(c,a),q)};P.prototype.op_add=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(wu(c,a),q)};\nP.prototype.op_sub=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(yu(c,a),q)};P.prototype.__destroy__=function(){pu(this.zs)};function Nv(){this.zs=Nj();l(Nv)[this.zs]=this}Nv.prototype=Object.create(k.prototype);Nv.prototype.constructor=Nv;Nv.prototype.As=Nv;Nv.Bs={};g.btDefaultCollisionConstructionInfo=Nv;Nv.prototype.__destroy__=function(){Mj(this.zs)};function wv(){throw\"cannot construct a btVector3Array, no constructor in IDL\";}wv.prototype=Object.create(k.prototype);\nwv.prototype.constructor=wv;wv.prototype.As=wv;wv.Bs={};g.btVector3Array=wv;wv.prototype.size=wv.prototype.size=function(){return Xt(this.zs)};wv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Wt(c,a),q)};wv.prototype.__destroy__=function(){Vt(this.zs)};function Ov(){throw\"cannot construct a btConstraintSolver, no constructor in IDL\";}Ov.prototype=Object.create(k.prototype);Ov.prototype.constructor=Ov;Ov.prototype.As=Ov;Ov.Bs={};g.btConstraintSolver=Ov;\nOv.prototype.__destroy__=function(){wi(this.zs)};function Pv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=mj(a);l(Pv)[this.zs]=this}Pv.prototype=Object.create(iv.prototype);Pv.prototype.constructor=Pv;Pv.prototype.As=Pv;Pv.Bs={};g.btCylinderShapeX=Pv;Pv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rj(c,a)};Pv.prototype.getMargin=function(){return pj(this.zs)};Pv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qj(c,a)};\nPv.prototype.getLocalScaling=function(){return m(oj(this.zs),q)};Pv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);nj(d,a,c)};Pv.prototype.__destroy__=function(){lj(this.zs)};function Qv(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=tj(a);l(Qv)[this.zs]=this}Qv.prototype=Object.create(iv.prototype);Qv.prototype.constructor=Qv;Qv.prototype.As=Qv;Qv.Bs={};g.btCylinderShapeZ=Qv;\nQv.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yj(c,a)};Qv.prototype.getMargin=function(){return wj(this.zs)};Qv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xj(c,a)};Qv.prototype.getLocalScaling=function(){return m(vj(this.zs),q)};Qv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);uj(d,a,c)};Qv.prototype.__destroy__=function(){sj(this.zs)};\nfunction O(){throw\"cannot construct a btConvexPolyhedron, no constructor in IDL\";}O.prototype=Object.create(k.prototype);O.prototype.constructor=O;O.prototype.As=O;O.Bs={};g.btConvexPolyhedron=O;O.prototype.get_m_vertices=O.prototype.Au=function(){return m(Vi(this.zs),wv)};O.prototype.set_m_vertices=O.prototype.Pv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xi(c,a)};Object.defineProperty(O.prototype,\"m_vertices\",{get:O.prototype.Au,set:O.prototype.Pv});\nO.prototype.get_m_faces=O.prototype.Ft=function(){return m(Ui(this.zs),Rv)};O.prototype.set_m_faces=O.prototype.Yu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Wi(c,a)};Object.defineProperty(O.prototype,\"m_faces\",{get:O.prototype.Ft,set:O.prototype.Yu});O.prototype.__destroy__=function(){Ti(this.zs)};function Sv(){this.zs=Ks();l(Sv)[this.zs]=this}Sv.prototype=Object.create(k.prototype);Sv.prototype.constructor=Sv;Sv.prototype.As=Sv;Sv.Bs={};g.btSequentialImpulseConstraintSolver=Sv;\nSv.prototype.__destroy__=function(){Js(this.zs)};function Tv(a,c,d){b.Is();a&&\"object\"===typeof a&&(a=a.zs);\"object\"==typeof c&&(c=Wu(c));d&&\"object\"===typeof d&&(d=d.zs);this.zs=Xo(a,c,d);l(Tv)[this.zs]=this}Tv.prototype=Object.create(p.prototype);Tv.prototype.constructor=Tv;Tv.prototype.As=Tv;Tv.Bs={};g.btMultiSphereShape=Tv;Tv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$o(c,a)};Tv.prototype.getLocalScaling=function(){return m(Zo(this.zs),q)};\nTv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Yo(d,a,c)};Tv.prototype.__destroy__=function(){Wo(this.zs)};function Uv(){throw\"cannot construct a btIntArray, no constructor in IDL\";}Uv.prototype=Object.create(k.prototype);Uv.prototype.constructor=Uv;Uv.prototype.As=Uv;Uv.Bs={};g.btIntArray=Uv;Uv.prototype.size=Uv.prototype.size=function(){return $n(this.zs)};\nUv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Zn(c,a)};Uv.prototype.__destroy__=function(){Yn(this.zs)};function Q(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=fk(a,c,d,e);l(Q)[this.zs]=this}Q.prototype=Object.create(y.prototype);Q.prototype.constructor=Q;Q.prototype.As=Q;Q.Bs={};g.btDiscreteDynamicsWorld=Q;\nQ.prototype.setGravity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ck(c,a)};Q.prototype.getGravity=function(){return m(pk(this.zs),q)};Q.prototype.addRigidBody=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===c?dk(e,a):void 0===d?_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(e,a,c):ek(e,a,c,d)};\nQ.prototype.removeRigidBody=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);wk(c,a)};Q.prototype.addConstraint=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);void 0===c?bk(d,a):ck(d,a,c)};Q.prototype.removeConstraint=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vk(c,a)};\nQ.prototype.stepSimulation=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);return void 0===c?Dk(e,a):void 0===d?Ek(e,a,c):Fk(e,a,c,d)};Q.prototype.setContactAddedCallback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xk(c,a)};Q.prototype.setContactProcessedCallback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zk(c,a)};\nQ.prototype.setContactDestroyedCallback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);yk(c,a)};Q.prototype.getDispatcher=function(){return m(ok(this.zs),Zu)};Q.prototype.rayTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);sk(e,a,c,d)};Q.prototype.getPairCache=function(){return m(qk(this.zs),$u)};Q.prototype.getDispatchInfo=function(){return m(nk(this.zs),x)};\nQ.prototype.addCollisionObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);void 0===c?Yj(e,a):void 0===d?Zj(e,a,c):ak(e,a,c,d)};Q.prototype.removeCollisionObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);uk(c,a)};Q.prototype.getBroadphase=function(){return m(lk(this.zs),av)};\nQ.prototype.convexSweepTest=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);ik(n,a,c,d,e,f)};Q.prototype.contactPairTest=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);gk(e,a,c,d)};\nQ.prototype.contactTest=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);hk(d,a,c)};Q.prototype.setForceUpdateAllAabbs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bk(c,a)};Q.prototype.updateSingleAabb=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gk(c,a)};Q.prototype.setDebugDrawer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ak(c,a)};Q.prototype.getDebugDrawer=function(){return m(mk(this.zs),bv)};\nQ.prototype.debugDrawWorld=function(){kk(this.zs)};Q.prototype.debugDrawObject=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);jk(e,a,c,d)};Q.prototype.addAction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xj(c,a)};Q.prototype.removeAction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);tk(c,a)};Q.prototype.getSolverInfo=function(){return m(rk(this.zs),z)};Q.prototype.__destroy__=function(){Wj(this.zs)};\nfunction Vv(){this.zs=kn();l(Vv)[this.zs]=this}Vv.prototype=Object.create(k.prototype);Vv.prototype.constructor=Vv;Vv.prototype.As=Vv;Vv.Bs={};g.btGhostPairCallback=Vv;Vv.prototype.__destroy__=function(){jn(this.zs)};function Wv(){throw\"cannot construct a btOverlappingPairCallback, no constructor in IDL\";}Wv.prototype=Object.create(k.prototype);Wv.prototype.constructor=Wv;Wv.prototype.As=Wv;Wv.Bs={};g.btOverlappingPairCallback=Wv;Wv.prototype.__destroy__=function(){ep(this.zs)};\nfunction R(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===e?bo(a,c,d):co(a,c,d,e);l(R)[this.zs]=this}R.prototype=Object.create(gv.prototype);R.prototype.constructor=R;R.prototype.As=R;R.Bs={};g.btKinematicCharacterController=R;R.prototype.setUpAxis=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ro(c,a)};\nR.prototype.setWalkDirection=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);vo(c,a)};R.prototype.setVelocityForTimeInterval=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);uo(d,a,c)};R.prototype.warp=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);xo(c,a)};R.prototype.preStep=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lo(c,a)};\nR.prototype.playerStep=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);ko(d,a,c)};R.prototype.setFallSpeed=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mo(c,a)};R.prototype.setJumpSpeed=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);oo(c,a)};R.prototype.setMaxJumpHeight=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);po(c,a)};R.prototype.canJump=function(){return!!eo(this.zs)};R.prototype.jump=function(){io(this.zs)};\nR.prototype.setGravity=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);no(c,a)};R.prototype.getGravity=function(){return go(this.zs)};R.prototype.setMaxSlope=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qo(c,a)};R.prototype.getMaxSlope=function(){return ho(this.zs)};R.prototype.getGhostObject=function(){return m(fo(this.zs),S)};R.prototype.setUseGhostSweepTest=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);to(c,a)};R.prototype.onGround=function(){return!!jo(this.zs)};\nR.prototype.setUpInterpolate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);so(c,a)};R.prototype.updateAction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);wo(d,a,c)};R.prototype.__destroy__=function(){ao(this.zs)};function Rv(){throw\"cannot construct a btFaceArray, no constructor in IDL\";}Rv.prototype=Object.create(k.prototype);Rv.prototype.constructor=Rv;Rv.prototype.As=Rv;Rv.Bs={};g.btFaceArray=Rv;Rv.prototype.size=Rv.prototype.size=function(){return Jl(this.zs)};\nRv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Il(c,a),T)};Rv.prototype.__destroy__=function(){Hl(this.zs)};function Xv(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=jt(a,c);l(Xv)[this.zs]=this}Xv.prototype=Object.create(cv.prototype);Xv.prototype.constructor=Xv;Xv.prototype.As=Xv;Xv.Bs={};g.btStaticPlaneShape=Xv;Xv.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mt(c,a)};\nXv.prototype.getLocalScaling=function(){return m(lt(this.zs),q)};Xv.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);kt(d,a,c)};Xv.prototype.__destroy__=function(){it(this.zs)};function $u(){throw\"cannot construct a btOverlappingPairCache, no constructor in IDL\";}$u.prototype=Object.create(k.prototype);$u.prototype.constructor=$u;$u.prototype.As=$u;$u.Bs={};g.btOverlappingPairCache=$u;\n$u.prototype.setInternalGhostPairCallback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dp(c,a)};$u.prototype.removeOverlappingPairsContainingProxy=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);cp(d,a,c)};$u.prototype.getNumOverlappingPairs=function(){return bp(this.zs)};$u.prototype.__destroy__=function(){ap(this.zs)};function Av(){throw\"cannot construct a btIndexedMesh, no constructor in IDL\";}Av.prototype=Object.create(k.prototype);\nAv.prototype.constructor=Av;Av.prototype.As=Av;Av.Bs={};g.btIndexedMesh=Av;Av.prototype.get_m_numTriangles=Av.prototype.bu=function(){return Wn(this.zs)};Av.prototype.set_m_numTriangles=Av.prototype.sv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xn(c,a)};Object.defineProperty(Av.prototype,\"m_numTriangles\",{get:Av.prototype.bu,set:Av.prototype.sv});Av.prototype.__destroy__=function(){Vn(this.zs)};\nfunction Yv(a,c,d){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);this.zs=Ue(a,c,d);l(Yv)[this.zs]=this}Yv.prototype=Object.create(k.prototype);Yv.prototype.constructor=Yv;Yv.prototype.As=Yv;Yv.Bs={};g.Vec3Real=Yv;Yv.prototype.X=function(){return Ve(this.zs)};Yv.prototype.Y=function(){return We(this.zs)};Yv.prototype.Z=function(){return Xe(this.zs)};Yv.prototype.__destroy__=function(){Ye(this.zs)};\nfunction Zv(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=Ql(a,c,d,e);l(Zv)[this.zs]=this}Zv.prototype=Object.create(Yu.prototype);Zv.prototype.constructor=Zv;Zv.prototype.As=Zv;Zv.Bs={};g.btFixedConstraint=Zv;Zv.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Rl(c,a)};Zv.prototype.getBreakingImpulseThreshold=function(){return Sl(this.zs)};\nZv.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ul(c,a)};Zv.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Tl(d,a,c)};Zv.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Vl(e,a,c,d)};Zv.prototype.__destroy__=function(){Pl(this.zs)};\nfunction u(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=void 0===a?qt():void 0===c?_emscripten_bind_btTransform_btTransform_1(a):rt(a,c);l(u)[this.zs]=this}u.prototype=Object.create(k.prototype);u.prototype.constructor=u;u.prototype.As=u;u.Bs={};g.btTransform=u;u.prototype.setIdentity=function(){yt(this.zs)};u.prototype.setOrigin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zt(c,a)};\nu.prototype.setRotation=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);At(c,a)};u.prototype.getOrigin=function(){return m(tt(this.zs),q)};u.prototype.getRotation=function(){return m(ut(this.zs),U)};u.prototype.getBasis=function(){return m(st(this.zs),pv)};u.prototype.setFromOpenGLMatrix=function(a){var c=this.zs;b.Is();\"object\"==typeof a&&(a=Wu(a));xt(c,a)};u.prototype.inverse=u.prototype.inverse=function(){return m(vt(this.zs),u)};\nu.prototype.op_mul=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(wt(c,a),u)};u.prototype.__destroy__=function(){pt(this.zs)};function V(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=tc(a,c);l(V)[this.zs]=this}V.prototype=Object.create(C.prototype);V.prototype.constructor=V;V.prototype.As=V;V.Bs={};g.ClosestRayResultCallback=V;V.prototype.hasHit=function(){return!!Dc(this.zs)};\nV.prototype.get_m_rayFromWorld=V.prototype.bt=function(){return m(Bc(this.zs),q)};V.prototype.set_m_rayFromWorld=V.prototype.et=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lc(c,a)};Object.defineProperty(V.prototype,\"m_rayFromWorld\",{get:V.prototype.bt,set:V.prototype.et});V.prototype.get_m_rayToWorld=V.prototype.ct=function(){return m(Cc(this.zs),q)};V.prototype.set_m_rayToWorld=V.prototype.ft=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Mc(c,a)};\nObject.defineProperty(V.prototype,\"m_rayToWorld\",{get:V.prototype.ct,set:V.prototype.ft});V.prototype.get_m_hitNormalWorld=V.prototype.Ns=function(){return m(zc(this.zs),q)};V.prototype.set_m_hitNormalWorld=V.prototype.Ss=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jc(c,a)};Object.defineProperty(V.prototype,\"m_hitNormalWorld\",{get:V.prototype.Ns,set:V.prototype.Ss});V.prototype.get_m_hitPointWorld=V.prototype.Os=function(){return m(Ac(this.zs),q)};\nV.prototype.set_m_hitPointWorld=V.prototype.Ts=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kc(c,a)};Object.defineProperty(V.prototype,\"m_hitPointWorld\",{get:V.prototype.Os,set:V.prototype.Ts});V.prototype.get_m_collisionFilterGroup=V.prototype.Ds=function(){return wc(this.zs)};V.prototype.set_m_collisionFilterGroup=V.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gc(c,a)};Object.defineProperty(V.prototype,\"m_collisionFilterGroup\",{get:V.prototype.Ds,set:V.prototype.Fs});\nV.prototype.get_m_collisionFilterMask=V.prototype.Es=function(){return xc(this.zs)};V.prototype.set_m_collisionFilterMask=V.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Hc(c,a)};Object.defineProperty(V.prototype,\"m_collisionFilterMask\",{get:V.prototype.Es,set:V.prototype.Gs});V.prototype.get_m_closestHitFraction=V.prototype.Hs=function(){return vc(this.zs)};\nV.prototype.set_m_closestHitFraction=V.prototype.Js=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fc(c,a)};Object.defineProperty(V.prototype,\"m_closestHitFraction\",{get:V.prototype.Hs,set:V.prototype.Js});V.prototype.get_m_collisionObject=V.prototype.Ms=function(){return m(yc(this.zs),t)};V.prototype.set_m_collisionObject=V.prototype.Rs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ic(c,a)};Object.defineProperty(V.prototype,\"m_collisionObject\",{get:V.prototype.Ms,set:V.prototype.Rs});\nV.prototype.__destroy__=function(){uc(this.zs)};function $v(){this.zs=Nc();l($v)[this.zs]=this}$v.prototype=Object.create(ov.prototype);$v.prototype.constructor=$v;$v.prototype.As=$v;$v.Bs={};g.ConcreteContactResultCallback=$v;\n$v.prototype.addSingleResult=function(a,c,d,e,f,n,r){var N=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);n&&\"object\"===typeof n&&(n=n.zs);r&&\"object\"===typeof r&&(r=r.zs);return Pc(N,a,c,d,e,f,n,r)};$v.prototype.__destroy__=function(){Oc(this.zs)};\nfunction aw(a,c,d){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);this.zs=void 0===d?wf(a,c):xf(a,c,d);l(aw)[this.zs]=this}aw.prototype=Object.create(ev.prototype);aw.prototype.constructor=aw;aw.prototype.As=aw;aw.Bs={};g.btBvhTriangleMeshShape=aw;aw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Af(c,a)};aw.prototype.getLocalScaling=function(){return m(zf(this.zs),q)};\naw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);yf(d,a,c)};aw.prototype.__destroy__=function(){vf(this.zs)};function bw(a,c,d){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);this.zs=Pe(a,c,d);l(bw)[this.zs]=this}bw.prototype=Object.create(k.prototype);bw.prototype.constructor=bw;bw.prototype.As=bw;bw.Bs={};g.Vec3Long=bw;bw.prototype.X=function(){return Qe(this.zs)};\nbw.prototype.Y=function(){return Re(this.zs)};bw.prototype.Z=function(){return Se(this.zs)};bw.prototype.__destroy__=function(){Te(this.zs)};function vv(){throw\"cannot construct a btConstCollisionObjectArray, no constructor in IDL\";}vv.prototype=Object.create(k.prototype);vv.prototype.constructor=vv;vv.prototype.As=vv;vv.Bs={};g.btConstCollisionObjectArray=vv;vv.prototype.size=vv.prototype.size=function(){return ni(this.zs)};\nvv.prototype.at=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(mi(c,a),t)};vv.prototype.__destroy__=function(){li(this.zs)};function cw(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=void 0===e?Rs(a,c,d):void 0===f?_emscripten_bind_btSliderConstraint_btSliderConstraint_4(a,c,d,e):Ss(a,c,d,e,f);l(cw)[this.zs]=this}cw.prototype=Object.create(Yu.prototype);\ncw.prototype.constructor=cw;cw.prototype.As=cw;cw.Bs={};g.btSliderConstraint=cw;cw.prototype.setLowerLinLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ys(c,a)};cw.prototype.setUpperLinLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);at(c,a)};cw.prototype.setLowerAngLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Xs(c,a)};cw.prototype.setUpperAngLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);$s(c,a)};\ncw.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ts(c,a)};cw.prototype.getBreakingImpulseThreshold=function(){return Us(this.zs)};cw.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ws(c,a)};cw.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Vs(d,a,c)};\ncw.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Zs(e,a,c,d)};cw.prototype.__destroy__=function(){Qs(this.zs)};function S(){this.zs=ip();l(S)[this.zs]=this}S.prototype=Object.create(A.prototype);S.prototype.constructor=S;S.prototype.As=S;S.Bs={};g.btPairCachingGhostObject=S;\nS.prototype.setAnisotropicFriction=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ap(d,a,c)};S.prototype.getCollisionShape=function(){return m(mp(this.zs),p)};S.prototype.setContactProcessingThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Fp(c,a)};S.prototype.setActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zp(c,a)};\nS.prototype.forceActivationState=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);jp(c,a)};S.prototype.activate=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);void 0===a?gp(c):hp(c,a)};S.prototype.isActive=function(){return!!vp(this.zs)};S.prototype.isKinematicObject=function(){return!!wp(this.zs)};S.prototype.isStaticObject=function(){return!!xp(this.zs)};S.prototype.isStaticOrKinematicObject=function(){return!!yp(this.zs)};S.prototype.getRestitution=function(){return qp(this.zs)};\nS.prototype.getFriction=function(){return np(this.zs)};S.prototype.getRollingFriction=function(){return rp(this.zs)};S.prototype.setRestitution=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Hp(c,a)};S.prototype.setFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Gp(c,a)};S.prototype.setRollingFriction=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ip(c,a)};S.prototype.getWorldTransform=function(){return m(up(this.zs),u)};S.prototype.getCollisionFlags=function(){return lp(this.zs)};\nS.prototype.setCollisionFlags=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Dp(c,a)};S.prototype.setWorldTransform=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lp(c,a)};S.prototype.setCollisionShape=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ep(c,a)};S.prototype.setCcdMotionThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bp(c,a)};S.prototype.setCcdSweptSphereRadius=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Cp(c,a)};\nS.prototype.getUserIndex=function(){return sp(this.zs)};S.prototype.setUserIndex=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jp(c,a)};S.prototype.getUserPointer=function(){return m(tp(this.zs),Xu)};S.prototype.setUserPointer=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kp(c,a)};S.prototype.getBroadphaseHandle=function(){return m(kp(this.zs),v)};S.prototype.getNumOverlappingObjects=function(){return op(this.zs)};\nS.prototype.getOverlappingObject=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(pp(c,a),t)};S.prototype.__destroy__=function(){fp(this.zs)};function E(){throw\"cannot construct a btManifoldPoint, no constructor in IDL\";}E.prototype=Object.create(k.prototype);E.prototype.constructor=E;E.prototype.As=E;E.Bs={};g.btManifoldPoint=E;E.prototype.getPositionWorldOnA=function(){return m(Bo(this.zs),q)};E.prototype.getPositionWorldOnB=function(){return m(Co(this.zs),q)};\nE.prototype.getAppliedImpulse=function(){return zo(this.zs)};E.prototype.getDistance=function(){return Ao(this.zs)};E.prototype.get_m_localPointA=E.prototype.St=function(){return m(Do(this.zs),q)};E.prototype.set_m_localPointA=E.prototype.kv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jo(c,a)};Object.defineProperty(E.prototype,\"m_localPointA\",{get:E.prototype.St,set:E.prototype.kv});E.prototype.get_m_localPointB=E.prototype.Tt=function(){return m(Eo(this.zs),q)};\nE.prototype.set_m_localPointB=E.prototype.lv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ko(c,a)};Object.defineProperty(E.prototype,\"m_localPointB\",{get:E.prototype.Tt,set:E.prototype.lv});E.prototype.get_m_positionWorldOnB=E.prototype.iu=function(){return m(Ho(this.zs),q)};E.prototype.set_m_positionWorldOnB=E.prototype.yv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);No(c,a)};Object.defineProperty(E.prototype,\"m_positionWorldOnB\",{get:E.prototype.iu,set:E.prototype.yv});\nE.prototype.get_m_positionWorldOnA=E.prototype.hu=function(){return m(Go(this.zs),q)};E.prototype.set_m_positionWorldOnA=E.prototype.xv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Mo(c,a)};Object.defineProperty(E.prototype,\"m_positionWorldOnA\",{get:E.prototype.hu,set:E.prototype.xv});E.prototype.get_m_normalWorldOnB=E.prototype.$t=function(){return m(Fo(this.zs),q)};E.prototype.set_m_normalWorldOnB=E.prototype.qv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lo(c,a)};\nObject.defineProperty(E.prototype,\"m_normalWorldOnB\",{get:E.prototype.$t,set:E.prototype.qv});E.prototype.get_m_userPersistentData=E.prototype.zu=function(){return Io(this.zs)};E.prototype.set_m_userPersistentData=E.prototype.Ov=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Oo(c,a)};Object.defineProperty(E.prototype,\"m_userPersistentData\",{get:E.prototype.zu,set:E.prototype.Ov});E.prototype.__destroy__=function(){yo(this.zs)};\nfunction W(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=void 0===d?Tp(a,c):void 0===e?_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(a,c,d):Up(a,c,d,e);l(W)[this.zs]=this}W.prototype=Object.create(Yu.prototype);W.prototype.constructor=W;W.prototype.As=W;W.Bs={};g.btPoint2PointConstraint=W;W.prototype.setPivotA=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);cq(c,a)};\nW.prototype.setPivotB=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);dq(c,a)};W.prototype.getPivotInA=function(){return m(Yp(this.zs),q)};W.prototype.getPivotInB=function(){return m(Zp(this.zs),q)};W.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Vp(c,a)};W.prototype.getBreakingImpulseThreshold=function(){return Wp(this.zs)};W.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);aq(c,a)};\nW.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return Xp(d,a,c)};W.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);bq(e,a,c,d)};W.prototype.get_m_setting=W.prototype.mu=function(){return m($p(this.zs),H)};W.prototype.set_m_setting=W.prototype.Cv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);eq(c,a)};\nObject.defineProperty(W.prototype,\"m_setting\",{get:W.prototype.mu,set:W.prototype.Cv});W.prototype.__destroy__=function(){Sp(this.zs)};function v(){throw\"cannot construct a btBroadphaseProxy, no constructor in IDL\";}v.prototype=Object.create(k.prototype);v.prototype.constructor=v;v.prototype.As=v;v.Bs={};g.btBroadphaseProxy=v;v.prototype.get_m_collisionFilterGroup=v.prototype.Ds=function(){return rf(this.zs)};\nv.prototype.set_m_collisionFilterGroup=v.prototype.Fs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);tf(c,a)};Object.defineProperty(v.prototype,\"m_collisionFilterGroup\",{get:v.prototype.Ds,set:v.prototype.Fs});v.prototype.get_m_collisionFilterMask=v.prototype.Es=function(){return sf(this.zs)};v.prototype.set_m_collisionFilterMask=v.prototype.Gs=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);uf(c,a)};\nObject.defineProperty(v.prototype,\"m_collisionFilterMask\",{get:v.prototype.Es,set:v.prototype.Gs});v.prototype.__destroy__=function(){qf(this.zs)};function dw(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=hf(a);l(dw)[this.zs]=this}dw.prototype=Object.create(p.prototype);dw.prototype.constructor=dw;dw.prototype.As=dw;dw.Bs={};g.btBoxShape=dw;dw.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);nf(c,a)};dw.prototype.getMargin=function(){return lf(this.zs)};\ndw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);mf(c,a)};dw.prototype.getLocalScaling=function(){return m(kf(this.zs),q)};dw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);jf(d,a,c)};dw.prototype.__destroy__=function(){gf(this.zs)};function T(){throw\"cannot construct a btFace, no constructor in IDL\";}T.prototype=Object.create(k.prototype);T.prototype.constructor=T;\nT.prototype.As=T;T.Bs={};g.btFace=T;T.prototype.get_m_indices=T.prototype.Pt=function(){return m(Ll(this.zs),Uv)};T.prototype.set_m_indices=T.prototype.hv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Nl(c,a)};Object.defineProperty(T.prototype,\"m_indices\",{get:T.prototype.Pt,set:T.prototype.hv});T.prototype.get_m_plane=T.prototype.eu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Ml(c,a)};\nT.prototype.set_m_plane=T.prototype.vv=function(a,c){var d=this.zs;b.Is();a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Ol(d,a,c)};Object.defineProperty(T.prototype,\"m_plane\",{get:T.prototype.eu,set:T.prototype.vv});T.prototype.__destroy__=function(){Kl(this.zs)};function ew(){this.zs=fd();l(ew)[this.zs]=this}ew.prototype=Object.create(bv.prototype);ew.prototype.constructor=ew;ew.prototype.As=ew;ew.Bs={};g.DebugDrawer=ew;\new.prototype.drawLine=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);jd(e,a,c,d)};ew.prototype.drawContactPoint=function(a,c,d,e,f){var n=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);id(n,a,c,d,e,f)};\new.prototype.reportErrorWarning=function(a){var c=this.zs;b.Is();a=a&&\"object\"===typeof a?a.zs:Vu(a);ld(c,a)};ew.prototype.draw3dText=function(a,c){var d=this.zs;b.Is();a&&\"object\"===typeof a&&(a=a.zs);c=c&&\"object\"===typeof c?c.zs:Vu(c);hd(d,a,c)};ew.prototype.setDebugMode=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);md(c,a)};ew.prototype.getDebugMode=function(){return kd(this.zs)};ew.prototype.__destroy__=function(){gd(this.zs)};\nfunction fw(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Cf(a,c);l(fw)[this.zs]=this}fw.prototype=Object.create(dv.prototype);fw.prototype.constructor=fw;fw.prototype.As=fw;fw.Bs={};g.btCapsuleShapeX=fw;fw.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kf(c,a)};fw.prototype.getMargin=function(){return Gf(this.zs)};fw.prototype.getUpAxis=function(){return If(this.zs)};fw.prototype.getRadius=function(){return Hf(this.zs)};\nfw.prototype.getHalfHeight=function(){return Ef(this.zs)};fw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jf(c,a)};fw.prototype.getLocalScaling=function(){return m(Ff(this.zs),q)};fw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Df(d,a,c)};fw.prototype.__destroy__=function(){Bf(this.zs)};\nfunction U(a,c,d,e){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);this.zs=rq(a,c,d,e);l(U)[this.zs]=this}U.prototype=Object.create(hv.prototype);U.prototype.constructor=U;U.prototype.As=U;U.Bs={};g.btQuaternion=U;U.prototype.setValue=function(a,c,d,e){var f=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);Iq(f,a,c,d,e)};\nU.prototype.setEulerZYX=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Gq(e,a,c,d)};U.prototype.setRotation=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Hq(d,a,c)};U.prototype.normalize=U.prototype.normalize=function(){zq(this.zs)};U.prototype.length2=function(){return xq(this.zs)};U.prototype.length=U.prototype.length=function(){return yq(this.zs)};\nU.prototype.dot=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return sq(c,a)};U.prototype.normalized=function(){return m(Aq(this.zs),U)};U.prototype.getAxis=function(){return m(vq(this.zs),q)};U.prototype.inverse=U.prototype.inverse=function(){return m(wq(this.zs),U)};U.prototype.getAngle=function(){return uq(this.zs)};U.prototype.getAngleShortestPath=function(){return tq(this.zs)};\nU.prototype.angle=U.prototype.angle=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return qq(c,a)};U.prototype.angleShortestPath=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return pq(c,a)};U.prototype.op_add=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Bq(c,a),U)};U.prototype.op_sub=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Fq(c,a),U)};\nU.prototype.op_mul=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Dq(c,a),U)};U.prototype.op_mulq=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Eq(c,a),U)};U.prototype.op_div=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return m(Cq(c,a),U)};U.prototype.x=U.prototype.x=function(){return Oq(this.zs)};U.prototype.y=U.prototype.y=function(){return Pq(this.zs)};U.prototype.z=U.prototype.z=function(){return Qq(this.zs)};\nU.prototype.w=U.prototype.ht=function(){return Nq(this.zs)};U.prototype.setX=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kq(c,a)};U.prototype.setY=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Lq(c,a)};U.prototype.setZ=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Mq(c,a)};U.prototype.setW=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Jq(c,a)};U.prototype.__destroy__=function(){oq(this.zs)};\nfunction gw(a,c){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);this.zs=Mf(a,c);l(gw)[this.zs]=this}gw.prototype=Object.create(dv.prototype);gw.prototype.constructor=gw;gw.prototype.As=gw;gw.Bs={};g.btCapsuleShapeZ=gw;gw.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Uf(c,a)};gw.prototype.getMargin=function(){return Qf(this.zs)};gw.prototype.getUpAxis=function(){return Sf(this.zs)};gw.prototype.getRadius=function(){return Rf(this.zs)};\ngw.prototype.getHalfHeight=function(){return Of(this.zs)};gw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Tf(c,a)};gw.prototype.getLocalScaling=function(){return m(Pf(this.zs),q)};gw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Nf(d,a,c)};gw.prototype.__destroy__=function(){Lf(this.zs)};function z(){throw\"cannot construct a btContactSolverInfo, no constructor in IDL\";}\nz.prototype=Object.create(k.prototype);z.prototype.constructor=z;z.prototype.As=z;z.Bs={};g.btContactSolverInfo=z;z.prototype.get_m_splitImpulse=z.prototype.ou=function(){return!!Ai(this.zs)};z.prototype.set_m_splitImpulse=z.prototype.Ev=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Di(c,a)};Object.defineProperty(z.prototype,\"m_splitImpulse\",{get:z.prototype.ou,set:z.prototype.Ev});z.prototype.get_m_splitImpulsePenetrationThreshold=z.prototype.pu=function(){return zi(this.zs)};\nz.prototype.set_m_splitImpulsePenetrationThreshold=z.prototype.Fv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ci(c,a)};Object.defineProperty(z.prototype,\"m_splitImpulsePenetrationThreshold\",{get:z.prototype.pu,set:z.prototype.Fv});z.prototype.get_m_numIterations=z.prototype.au=function(){return yi(this.zs)};z.prototype.set_m_numIterations=z.prototype.rv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Bi(c,a)};\nObject.defineProperty(z.prototype,\"m_numIterations\",{get:z.prototype.au,set:z.prototype.rv});z.prototype.__destroy__=function(){xi(this.zs)};function X(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=void 0===e?jm(a,c,d):void 0===f?_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(a,c,d,e):km(a,c,d,e,f);l(X)[this.zs]=this}\nX.prototype=Object.create(lv.prototype);X.prototype.constructor=X;X.prototype.As=X;X.Bs={};g.btGeneric6DofSpringConstraint=X;X.prototype.enableSpring=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);mm(d,a,c)};X.prototype.setStiffness=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);Bm(d,a,c)};\nX.prototype.setDamping=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);tm(d,a,c)};X.prototype.setEquilibriumPoint=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);void 0===a?um(d):void 0===c?wm(d,a):xm(d,a,c)};X.prototype.setLinearLowerLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ym(c,a)};X.prototype.setLinearUpperLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);zm(c,a)};\nX.prototype.setAngularLowerLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);qm(c,a)};X.prototype.setAngularUpperLimit=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);rm(c,a)};X.prototype.getFrameOffsetA=function(){return m(om(this.zs),u)};X.prototype.enableFeedback=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);lm(c,a)};X.prototype.getBreakingImpulseThreshold=function(){return nm(this.zs)};\nX.prototype.setBreakingImpulseThreshold=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);sm(c,a)};X.prototype.getParam=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);return pm(d,a,c)};X.prototype.setParam=function(a,c,d){var e=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);Am(e,a,c,d)};X.prototype.__destroy__=function(){im(this.zs)};\nfunction hw(a){a&&\"object\"===typeof a&&(a=a.zs);this.zs=ct(a);l(hw)[this.zs]=this}hw.prototype=Object.create(p.prototype);hw.prototype.constructor=hw;hw.prototype.As=hw;hw.Bs={};g.btSphereShape=hw;hw.prototype.setMargin=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);ht(c,a)};hw.prototype.getMargin=function(){return ft(this.zs)};hw.prototype.setLocalScaling=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);gt(c,a)};hw.prototype.getLocalScaling=function(){return m(et(this.zs),q)};\nhw.prototype.calculateLocalInertia=function(a,c){var d=this.zs;a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);dt(d,a,c)};hw.prototype.__destroy__=function(){bt(this.zs)};function Y(){this.zs=Sc();l(Y)[this.zs]=this}Y.prototype=Object.create(k.prototype);Y.prototype.constructor=Y;Y.prototype.As=Y;Y.Bs={};g.ConvexHull=Y;Y.prototype.get_m_points=Y.prototype.gu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Wc(c,a)};Object.defineProperty(Y.prototype,\"m_points\",{get:Y.prototype.gu});\nY.prototype.get_m_triangles=Y.prototype.vu=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);return Xc(c,a)};Object.defineProperty(Y.prototype,\"m_triangles\",{get:Y.prototype.vu});Y.prototype.get_m_nPoints=Y.prototype.Yt=function(){return Uc(this.zs)};Object.defineProperty(Y.prototype,\"m_nPoints\",{get:Y.prototype.Yt});Y.prototype.get_m_nTriangles=Y.prototype.Zt=function(){return Vc(this.zs)};Object.defineProperty(Y.prototype,\"m_nTriangles\",{get:Y.prototype.Zt});Y.prototype.__destroy__=function(){Tc(this.zs)};\nfunction Z(a,c,d,e,f){a&&\"object\"===typeof a&&(a=a.zs);c&&\"object\"===typeof c&&(c=c.zs);d&&\"object\"===typeof d&&(d=d.zs);e&&\"object\"===typeof e&&(e=e.zs);f&&\"object\"===typeof f&&(f=f.zs);this.zs=Dd(a,c,d,e,f);l(Z)[this.zs]=this}Z.prototype=Object.create(k.prototype);Z.prototype.constructor=Z;Z.prototype.As=Z;Z.Bs={};g.LocalConvexResult=Z;Z.prototype.get_m_hitCollisionObject=Z.prototype.Jt=function(){return m(Fd(this.zs),t)};\nZ.prototype.set_m_hitCollisionObject=Z.prototype.bv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Kd(c,a)};Object.defineProperty(Z.prototype,\"m_hitCollisionObject\",{get:Z.prototype.Jt,set:Z.prototype.bv});Z.prototype.get_m_localShapeInfo=Z.prototype.Ut=function(){return m(Jd(this.zs),I)};Z.prototype.set_m_localShapeInfo=Z.prototype.mv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Od(c,a)};Object.defineProperty(Z.prototype,\"m_localShapeInfo\",{get:Z.prototype.Ut,set:Z.prototype.mv});\nZ.prototype.get_m_hitNormalLocal=Z.prototype.Mt=function(){return m(Hd(this.zs),q)};Z.prototype.set_m_hitNormalLocal=Z.prototype.ev=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Md(c,a)};Object.defineProperty(Z.prototype,\"m_hitNormalLocal\",{get:Z.prototype.Mt,set:Z.prototype.ev});Z.prototype.get_m_hitPointLocal=Z.prototype.Nt=function(){return m(Id(this.zs),q)};Z.prototype.set_m_hitPointLocal=Z.prototype.fv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Nd(c,a)};\nObject.defineProperty(Z.prototype,\"m_hitPointLocal\",{get:Z.prototype.Nt,set:Z.prototype.fv});Z.prototype.get_m_hitFraction=Z.prototype.Kt=function(){return Gd(this.zs)};Z.prototype.set_m_hitFraction=Z.prototype.cv=function(a){var c=this.zs;a&&\"object\"===typeof a&&(a=a.zs);Ld(c,a)};Object.defineProperty(Z.prototype,\"m_hitFraction\",{get:Z.prototype.Kt,set:Z.prototype.cv});Z.prototype.__destroy__=function(){Ed(this.zs)};\n(function(){function a(){g.BT_CONSTRAINT_ERP=Pu();g.BT_CONSTRAINT_STOP_ERP=Ru();g.BT_CONSTRAINT_CFM=Ou();g.BT_CONSTRAINT_STOP_CFM=Qu();g.PHY_FLOAT=Ku();g.PHY_DOUBLE=Iu();g.PHY_INTEGER=Lu();g.PHY_SHORT=Mu();g.PHY_FIXEDPOINT88=Ju();g.PHY_UCHAR=Nu()}Pa?a():Na.unshift(a)})();this.Ammo=g;\n\n\n  return Ammo\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n      module.exports = Ammo;\n    else if (typeof define === 'function' && define['amd'])\n      define([], function() { return Ammo; });\n    else if (typeof exports === 'object')\n      exports[\"Ammo\"] = Ammo;\n    ","module.exports = __webpack_public_path__ + \"assets/wasm/ammo.wasm-8640fe8d5bf91d2e84ea56e0c1307ba9.wasm\";","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '106dev';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar ACESFilmicToneMapping = 5;\n\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RedFormat = 1028;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar _canvas;\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.image = {};\n\tthis.texture.image.width = width;\n\tthis.texture.image.height = height;\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Matt DesLauriers / @mattdesl\n */\n\nfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.samples = 4;\n\n}\n\nWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\tconstructor: WebGLMultisampleRenderTarget,\n\n\tisWebGLMultisampleRenderTarget: true,\n\n\tcopy: function ( source ) {\n\n\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\nWebGLRenderTargetCube.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\tthis.texture.type = texture.type;\n\tthis.texture.format = texture.format;\n\tthis.texture.encoding = texture.encoding;\n\n\tvar scene = new THREE.Scene();\n\n\tvar shader = {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader:\n\n\t\t\t`\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t\t`,\n\n\t\tfragmentShader:\n\n\t\t\t`\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#define RECIPROCAL_PI 0.31830988618\n\t\t\t#define RECIPROCAL_PI2 0.15915494\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV;\n\n\t\t\t\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\n\t\t\t\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t\t`\n\t};\n\n\tvar material = new THREE.ShaderMaterial( {\n\n\t\ttype: 'CubemapFromEquirect',\n\n\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\n\t\tvertexShader: shader.vertexShader,\n\t\tfragmentShader: shader.fragmentShader,\n\t\tside: THREE.BackSide,\n\t\tblending: THREE.NoBlending\n\n\t} );\n\n\tmaterial.uniforms.tEquirect.value = texture;\n\n\tvar mesh = new THREE.Mesh( new THREE.BoxBufferGeometry( 5, 5, 5 ), material );\n\n\tscene.add( mesh );\n\n\tvar camera = new THREE.CubeCamera( 1, 10, 1 );\n\n\tcamera.renderTarget = this;\n\tcamera.renderTarget.texture.name = 'CubeCameraTexture';\n\n\tcamera.update( renderer, scene );\n\n\tmesh.geometry.dispose();\n\tmesh.material.dispose();\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#endif\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearCoatInv = 1.0 - clearCoatDHR;\\n\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec3 singleScattering = vec3( 0.0 );\\n\\t\\tvec3 multiScattering = vec3( 0.0 );\\n\\t\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\t\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\\n\\t\\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\\n\\t\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n\\t#else\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\t#ifdef USE_TANGENT\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\t\\tnormal = normalize( vTBN * mapN );\\n\\t\\t#else\\n\\t\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t\\t#endif\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";\n\nvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\nvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_frag: background_frag,\n\tbackground_vert: background_vert,\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshmatcap_frag: meshmatcap_frag,\n\tmeshmatcap_vert: meshmatcap_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tvar dst = {};\n\n\tfor ( var u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( var p in src[ u ] ) {\n\n\t\t\tvar property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tvar merged = {};\n\n\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( var p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tvar dst = [];\n\n\tfor ( var u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\n// Legacy\n\nvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpHSL: function () {\n\n\t\tvar hslA = { h: 0, s: 0, l: 0 };\n\t\tvar hslB = { h: 0, s: 0, l: 0 };\n\n\t\treturn function lerpHSL( color, alpha ) {\n\n\t\t\tthis.getHSL( hslA );\n\t\t\tcolor.getHSL( hslB );\n\n\t\t\tvar h = _Math.lerp( hslA.h, hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( hslA.s, hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( hslA.l, hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? 35048 : 35044;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = 5126;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = 5126;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = 5123;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = 5122;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = 5125;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = 5124;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = 5120;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = 5121;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, 35044 );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tvar q1 = new Quaternion();\n\t\tvar m1 = new Matrix4();\n\t\tvar target = new Vector3();\n\t\tvar position = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\ttarget.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\ttarget.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\tm1.lookAt( position, target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( target, position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tm1.extractRotation( parent.matrixWorld );\n\t\t\t\tq1.setFromRotationMatrix( m1 );\n\t\t\t\tthis.quaternion.premultiply( q1.inverse() );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tattach: function () {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\tvar m = new Matrix4();\n\n\t\treturn function attach( object ) {\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\tm.getInverse( this.matrixWorld );\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\tm.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix( m );\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t},\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) object.drawMode = this.drawMode;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tfor ( var i = 0; i < positions.length; i += 3 ) {\n\n\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis._array = array;\n\tthis._itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis._normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tneedsUpdate: {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this._array;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._array = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\titemSize: {\n\n\t\tget: function () {\n\n\t\t\treturn this._itemSize;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._itemSize = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tnormalized: {\n\n\t\tget: function () {\n\n\t\t\treturn this._normalized;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._normalized = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t \tdata: []\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tvar tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tbox.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( box.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar boxMorphTargets = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tboxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.min );\n\t\t\t\t\t\tbox.expandByPoint( boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( position, i );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvector.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.addAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = this.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar morphArray = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t}\n\n\t\tvar morphAttributes = {};\n\t\tvar hasMorphAttributes = false;\n\n\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\tvar array = [];\n\n\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\tif ( attribute.name !== '' ) attributeData.name = attribute.name;\n\n\t\t\t\tarray.push( attributeData );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) data.data.morphAttributes = morphAttributes;\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments, flipY ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tflipY\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments, flipY = true ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tflipY: flipY\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push(\n\t\t\t\tflipY ?\n\t\t\t\t\t1 - ( iy / gridY ) :\n\t\t\t\t\tiy / gridY\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexTangents = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\t\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\tthis.uniformsGroups = [];\n\n\tthis.vertexShader = default_vertex;\n\tthis.fragmentShader = default_fragment;\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = cloneUniforms( source.uniforms );\n\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = {};\n\n\tfor ( var name in this.uniforms ) {\n\n\t\tvar uniform = this.uniforms[ name ];\n\t\tvar value = uniform.value;\n\n\t\tif ( value && value.isTexture ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 't',\n\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t};\n\n\t\t} else if ( value && value.isColor ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'c',\n\t\t\t\tvalue: value.getHex()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v2',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'v4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm3',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\ttype: 'm4',\n\t\t\t\tvalue: value.toArray()\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tdata.uniforms[ name ] = {\n\t\t\t\tvalue: value\n\t\t\t};\n\n\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t}\n\n\t}\n\n\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\tvar extensions = {};\n\n\tfor ( var key in this.extensions ) {\n\n\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t}\n\n\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}(),\n\n\tgetUV: function () {\n\n\t\tvar barycoord = new Vector3();\n\n\t\treturn function getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, barycoord.x );\n\t\t\ttarget.addScaledVector( uv2, barycoord.y );\n\t\t\ttarget.addScaledVector( uv3, barycoord.z );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tisFrontFacing: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function isFrontFacing( a, b, c, direction ) {\n\n\t\t\tv0.subVectors( c, b );\n\t\t\tv1.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( v0.cross( v1 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tisFrontFacing: function ( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar morphA = new Vector3();\n\t\tvar morphB = new Vector3();\n\t\tvar morphC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t\tmorphA.set( 0, 0, 0 );\n\t\t\t\tmorphB.set( 0, 0, 0 );\n\t\t\t\tmorphC.set( 0, 0, 0 );\n\n\t\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\ttempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t\ttempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t\ttempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\t\tmorphA.addScaledVector( tempA.sub( vA ), influence );\n\t\t\t\t\tmorphB.addScaledVector( tempB.sub( vB ), influence );\n\t\t\t\t\tmorphC.addScaledVector( tempC.sub( vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t\tvA.add( morphA );\n\t\t\t\tvB.add( morphB );\n\t\t\t\tvC.add( morphC );\n\n\t\t\t}\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tif ( this.drawMode === TriangleStripDrawMode ) {\n\n\t\t\t\t\t\t\tvar order = 0;\n\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il - 2; i ++ ) {\n\n\t\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\t\tb = i + 1 + order;\n\t\t\t\t\t\t\t\tc = i + 2 - order;\n\n\t\t\t\t\t\t\t\torder = ( order + 1 ) % 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, morphPosition, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeMesh;\n\tvar boxMesh;\n\t// Store the current background texture and its `version`\n\t// so we can recompile the material accordingly.\n\tvar currentBackground = null;\n\tvar currentBackgroundVersion = 0;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\t// Ignore background in AR\n\t\t// TODO: Reconsider this.\n\n\t\tvar vr = renderer.vr;\n\t\tvar session = vr.getSession && vr.getSession();\n\n\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\tbackground = null;\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\t\t\tcurrentBackground = null;\n\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t}\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.removeAttribute( 'normal' );\n\n\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t}\n\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * @author Takahiro / https://github.com/takahirox\n */\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\n\tvar extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tvar vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tvar bindingStates = {};\n\n\tvar defaultState = createBindingState( null );\n\tvar currentState = defaultState;\n\n\tfunction setup( material, program, geometry, index ) {\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tvar state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( geometry );\n\n\t\t\tif ( updateBuffers ) saveCache( geometry );\n\n\t\t} else {\n\n\t\t\tvar wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, 34963 );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( 34963, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tvar wireframe = ( material.wireframe === true );\n\n\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tvar stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tvar state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tvar newAttributes = [];\n\t\tvar enabledAttributes = [];\n\t\tvar attributeDivisors = [];\n\n\t\tfor ( var i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {}\n\n\t\t};\n\n\t}\n\n\t// If we sacrifice some BufferGeometry/Attribute API flexibility\n\t// needsUpdate() and saveCache() can be much simpler. See #16287\n\n\tfunction needsUpdate( geometry ) {\n\n\t\tvar cachedAttributes = currentState.attributes;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( Object.keys( cachedAttributes ).length !== Object.keys( geometryAttributes ).length ) return true;\n\n\t\tfor ( var key in geometryAttributes ) {\n\n\t\t\tvar cachedAttribute = cachedAttributes[ key ];\n\t\t\tvar geometryAttribute = geometryAttributes[ key ];\n\n\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\tif ( cachedAttribute.version !== geometryAttribute.versionVAO ) return true;\n\n\t\t\tif ( cachedAttribute.data.buffer !== geometryAttribute.data ) return true;\n\n\t\t\tif ( geometryAttribute.data &&\n\t\t\t\tcachedAttribute.data.version !== geometryAttribute.data.versionVAO ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( geometry ) {\n\n\t\tvar cache = {};\n\t\tvar attributes = geometry.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar data = {};\n\t\t\tdata.attribute = attribute;\n\t\t\tdata.version = attribute.versionVAO;\n\n\t\t\tdata.data = {};\n\n\t\t\tif ( attribute.data ) {\n\n\t\t\t\tdata.data.buffer = attribute.data;\n\t\t\t\tdata.data.version = attribute.data.versionVAO;\n\n\t\t\t}\n\n\t\t\tcache[ key ] = data;\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\n\t\tfor ( var i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\t\tvar enabledAttributes = currentState.enabledAttributes;\n\t\tvar attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tvar newAttributes = currentState.newAttributes;\n\t\tvar enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( var i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tenableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\tgl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( var programId in programMap ) {\n\n\t\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tvar programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( var programId in programMap ) {\n\n\t\t\tvar stateMap = programMap[ programId ];\n\n\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( var geometryId in bindingStates ) {\n\n\t\t\tvar programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tvar stateMap = programMap[ program.id ];\n\n\t\t\tfor ( var wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatilibity\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( 34930 );\n\tvar maxVertexTextures = gl.getParameter( 35660 );\n\tvar maxTextureSize = gl.getParameter( 3379 );\n\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\tvar maxAttributes = gl.getParameter( 34921 );\n\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\tvar maxVaryings = gl.getParameter( 36348 );\n\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\tvar multiview = isWebGL2 && ( !! extensions.get( 'WEBGL_multiview' ) || !! extensions.get( 'OVR_multiview' ) );\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples,\n\n\t\tmultiview: multiview\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 4:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 1:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase 3:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase 0:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tvar workInfluences = [];\n\n\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tworkInfluences.sort( numericalSort );\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = workInfluences[ i ];\n\t\t\tvar index = influence[ 0 ];\n\t\t\tvar value = influence[ 1 ];\n\n\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\tgeometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\tgeometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.removeAttribute( 'morphTarget' + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== undefined ) {\n\n\t\t\t\t\tgeometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\tformat = format !== undefined ? format : RGBFormat;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author Takahiro https://github.com/takahirox\n */\n\nfunction DataTexture2DArray( data, width, height, depth ) {\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture2DArray.prototype = Object.create( Texture.prototype );\nDataTexture2DArray.prototype.constructor = DataTexture2DArray;\nDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n/**\n * @author Artur Trzesiok\n */\n\nfunction DataTexture3D( data, width, height, depth ) {\n\n\t// We're going to add .setXXX() methods for setting properties later.\n\t// Users can still set in DataTexture3D directly.\n\t//\n\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t// \ttexture.anisotropy = 16;\n\t//\n\t// See #14839\n\n\tTexture.call( this, null );\n\n\tthis.image = { data: data, width: width, height: height, depth: depth };\n\n\tthis.magFilter = NearestFilter;\n\tthis.minFilter = NearestFilter;\n\n\tthis.wrapR = ClampToEdgeWrapping;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\n}\n\nDataTexture3D.prototype = Object.create( Texture.prototype );\nDataTexture3D.prototype.constructor = DataTexture3D;\nDataTexture3D.prototype.isDataTexture3D = true;\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyTexture2dArray = new DataTexture2DArray();\nvar emptyTexture3d = new DataTexture3D();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tvar cache = this.cache;\n\tvar unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValueV1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValueV2i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tvar data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( textures, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1Array; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6Array; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program ) {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n\tvar n = gl.getProgramParameter( program, 35718 );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tvar status = gl.getShaderParameter( shader, 35713 );\n\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && log === '' ) return '';\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\tvar source = gl.getShaderSource( shader );\n\n\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, 35721 );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures, bindingStates ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\trenderer.vr.multiview ? [ // For VR multiview\n\n\t\t\t\t'uniform mat4 modelViewMatrix2;',\n\t\t\t\t'uniform mat4 projectionMatrix2;',\n\t\t\t\t'uniform mat4 viewMatrix2;',\n\t\t\t\t'uniform mat3 normalMatrix2;',\n\t\t\t\t'uniform vec3 cameraPosition2;',\n\n\t\t\t\t'#define modelViewMatrix (gl_ViewID_OVR==0u?modelViewMatrix:modelViewMatrix2)',\n\t\t\t\t'#define projectionMatrix (gl_ViewID_OVR==0u?projectionMatrix:projectionMatrix2)',\n\t\t\t\t'#define viewMatrix (gl_ViewID_OVR==0u?viewMatrix:viewMatrix2)',\n\t\t\t\t'#define normalMatrix (gl_ViewID_OVR==0u?normalMatrix:normalMatrix2)',\n\t\t\t\t'#define cameraPosition (gl_ViewID_OVR==0u?cameraPosition:cameraPosition2)'\n\n\t\t\t].join( '\\n' ) : '',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\trenderer.vr.multiview ? [ // For VR multiview\n\n\t\t\t\t'uniform vec3 cameraPosition2;',\n\n\t\t\t\t'#define cameraPosition (gl_ViewID_OVR==0u?cameraPosition:cameraPosition2)'\n\n\t\t\t].join( '\\n' ) : '',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tconst v300es = \"#version 300 es\\n\";\n\t\t\tif ( isGLSL3ShaderMaterial ) {\n\n\t\t\t\tprefixVertex = v300es + prefixVertex;\n\t\t\t\tprefixFragment = v300es + prefixFragment;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// GLSL 3.0 conversion\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\n\t\t\t\trenderer.vr.multiview ? [ // For VR multiview\n\n\t\t\t\t\t'#extension GL_OVR_multiview : require',\n\t\t\t\t\t'layout(num_views = 2) in;'\n\n\t\t\t\t].join( '\\n' ) : '',\n\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t}\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tvar runnable = true;\n\t\tvar haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\t\t\t\tmaterial: material,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, textures );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities, textures, bindingStates ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tmatcap: !! material.matcap,\n\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\tarray.push( renderer.gammaFactor );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities, textures, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tvar defaultProgram = { id: - 1 };\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete lists[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar cameras = lists[ scene.id ];\n\t\tvar list;\n\t\tif ( cameras === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ scene.id ] = {};\n\t\t\tlists[ scene.id ][ camera.id ] = list;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tlist = cameras[ camera.id ];\n\t\t\tif ( list === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tcameras[ camera.id ] = list;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar nextVersion = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1,\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tfor ( var i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tvar hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.shadowsLength !== shadows.length ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\t\t\thash.shadowsLength = shadows.length;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction onSceneDispose( event ) {\n\n\t\tvar scene = event.target;\n\n\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\tdelete renderStates[ scene.id ];\n\n\t}\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\tvar activeMipMapLevel = _renderer.getActiveMipMapLevel();\n\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipMapLevel );\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar uboBindings = new WeakMap();\n\tvar uboProgamMap = new WeakMap();\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlendingEnabled = null;\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( 35661 );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( 7938 );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, 10241, 9728 );\n\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( 2929 );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( 2884 );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( 34467 );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\tdisable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\tenable( 3042 );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = null;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( 2884 )\n\t\t\t: enable( 2884 );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( 2884 );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 2884 );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( 32823 );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( 32823 );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( 3089 );\n\n\t\t} else {\n\n\t\t\tdisable( 3089 );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = 33984 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tvar mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tvar blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tvar mapping = uboProgamMap.get( program );\n\t\tvar blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined';\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tvar scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n\n\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tvar internalFormat = glFormat;\n\n\t\tif ( glFormat === 6403 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 33326;\n\t\t\tif ( glType === 5131 ) internalFormat = 33325;\n\t\t\tif ( glType === 5121 ) internalFormat = 33321;\n\n\t\t}\n\n\t\tif ( glFormat === 6407 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34837;\n\t\t\tif ( glType === 5131 ) internalFormat = 34843;\n\t\t\tif ( glType === 5121 ) internalFormat = 32849;\n\n\t\t}\n\n\t\tif ( glFormat === 6408 ) {\n\n\t\t\tif ( glType === 5126 ) internalFormat = 34836;\n\t\t\tif ( glType === 5131 ) internalFormat = 34842;\n\t\t\tif ( glType === 5121 ) internalFormat = 32856;\n\n\t\t}\n\n\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn 9728;\n\n\t\t}\n\n\t\treturn 9729;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tvar textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tvar textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture.image[ 0 ] && texture.image[ 0 ].isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tvar extension;\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, 10242, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, 10243, utils.convert( texture.wrapT ) );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, utils.convert( texture.wrapR ) );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tvar textureType = 3553;\n\n\t\tif ( texture.isDataTexture2DArray ) textureType = 35866;\n\t\tif ( texture.isDataTexture3D ) textureType = 32879;\n\n\t\tinitTexture( textureProperties, texture );\n\n\t\tstate.activeTexture( 33984 + slot );\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, capabilities.maxTextureSize );\n\n\t\tvar supportsMips = isPowerOfTwo( image ) || capabilities.isWebGL2,\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = 6402;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t\t// if ( window.ImageBitmap && texture.image instanceof ImageBitmap ) {\n\n\t\t\t// \tconsole.info( \"upload texture\", \"ImageBitmap\", texture.id );\n\n\t\t\t// } else if ( texture.image instanceof HTMLImageElement ) {\n\n\t\t\t// \tconsole.info( \"upload texture\", \"HTMLImageElement\", texture.id, texture.image.src );\n\n\t\t\t// }\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t} else {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( 36160, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\tif ( isMultisample ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 34067, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( 3553, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || capabilities.isWebGL2;\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\tvar width = renderTarget.width;\n\t\t\t\tvar height = renderTarget.height;\n\t\t\t\tvar mask = 16384;\n\n\t\t\t\tif ( renderTarget.depthBuffer ) mask |= 256;\n\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= 1024;\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn ( capabilities.isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\tMath.min( capabilities.maxSamples, renderTarget.samples ) : 0;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\t// backwards compatibility\n\n\tvar warnedTexture2D = false;\n\tvar warnedTextureCube = false;\n\n\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTexture2D = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\tsetTexture2D( texture, slot );\n\n\t}\n\n\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\twarnedTextureCube = true;\n\n\t\t\t}\n\n\t\t\ttexture = texture.texture;\n\n\t\t}\n\n\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t// TODO: unify these code paths\n\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t// this function alone should take care of cube textures\n\t\t\tsetTextureCube( texture, slot );\n\n\t\t} else {\n\n\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\tthis.safeSetTexture2D = safeSetTexture2D;\n\tthis.safeSetTextureCube = safeSetTextureCube;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tvar buffers = {};\n\tvar updateList = {};\n\n\tvar allocatedBindingPoints = [];\n\tvar maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( 35375 ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tstate.uniformBlockBinding( uniformsGroup, program );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tvar buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tstate.updateUBOMapping( uniformsGroup, program );\n\n\t\t// update UBO once per frame\n\n\t\tvar frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tvar bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tvar buffer = gl.createBuffer();\n\t\tvar size = uniformsGroup.isRawUniformsGroup ? uniformsGroup.data.byteLength : uniformsGroup.__size;\n\t\tvar usage = uniformsGroup.dynamic ? 35048 : 35044;\n\n\t\tgl.bindBuffer( 35345, buffer );\n\t\tgl.bufferData( 35345, size, usage );\n\t\tgl.bindBuffer( 35345, null );\n\t\tgl.bindBufferBase( 35345, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( var i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tvar buffer = buffers[ uniformsGroup.id ];\n\t\tvar uniforms = uniformsGroup.uniforms;\n\t\tvar cache = uniformsGroup.__cache;\n\n\t\tif ( uniformsGroup.isRawUniformsGroup ) {\n\n\t\t\tif ( uniformsGroup.autoUpdate || uniformsGroup.needsUpdate ) {\n\n\t\t\t\tgl.bindBuffer( 35345, buffer );\n\n\t\t\t\tgl.bufferSubData( 35345, 0, uniformsGroup.data );\n\n\t\t\t\tgl.bindBuffer( 35345, null );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, buffer );\n\n\t\tfor ( var i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tvar uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tvar value = uniform.value;\n\t\t\t\tvar offset = uniform.__offset;\n\n\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( uniform.value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = uniform.value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = uniform.value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = uniform.value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = uniform.value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = uniform.value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = uniform.value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = uniform.value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = uniform.value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = uniform.value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = uniform.value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgl.bufferSubData( 35345, offset, uniform.__data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( 35345, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tvar value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tcache[ index ] = value.clone();\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar cachedObject = cache[ index ];\n\n\t\t\t\tif ( cachedObject.equals( value ) === false ) {\n\n\t\t\t\t\tcachedObject.copy( value );\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tif ( uniformsGroup.isRawUniformsGroup ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar uniforms = uniformsGroup.uniforms;\n\n\t\tvar offset = 0; // global buffer offset in bytes\n\t\tvar chunkSize = 16; // size of a chunk in bytes\n\t\tvar chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( var i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tvar uniform = uniforms[ i ];\n\t\t\tvar info = getUniformSize( uniform );\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( info.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tvar remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - info.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += info.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( uniform ) {\n\n\t\tvar value = uniform.value;\n\n\t\tvar info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tvar uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tvar index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( var id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return 10497;\n\t\tif ( p === ClampToEdgeWrapping ) return 33071;\n\t\tif ( p === MirroredRepeatWrapping ) return 33648;\n\n\t\tif ( p === NearestFilter ) return 9728;\n\t\tif ( p === NearestMipMapNearestFilter ) return 9984;\n\t\tif ( p === NearestMipMapLinearFilter ) return 9986;\n\n\t\tif ( p === LinearFilter ) return 9729;\n\t\tif ( p === LinearMipMapNearestFilter ) return 9985;\n\t\tif ( p === LinearMipMapLinearFilter ) return 9987;\n\n\t\tif ( p === UnsignedByteType ) return 5121;\n\t\tif ( p === UnsignedShort4444Type ) return 32819;\n\t\tif ( p === UnsignedShort5551Type ) return 32820;\n\t\tif ( p === UnsignedShort565Type ) return 33635;\n\n\t\tif ( p === ByteType ) return 5120;\n\t\tif ( p === ShortType ) return 5122;\n\t\tif ( p === UnsignedShortType ) return 5123;\n\t\tif ( p === IntType ) return 5124;\n\t\tif ( p === UnsignedIntType ) return 5125;\n\t\tif ( p === FloatType ) return 5126;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 5131;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return 6406;\n\t\tif ( p === RGBFormat ) return 6407;\n\t\tif ( p === RGBAFormat ) return 6408;\n\t\tif ( p === LuminanceFormat ) return 6409;\n\t\tif ( p === LuminanceAlphaFormat ) return 6410;\n\t\tif ( p === DepthFormat ) return 6402;\n\t\tif ( p === DepthStencilFormat ) return 34041;\n\t\tif ( p === RedFormat ) return 6403;\n\n\t\tif ( p === AddEquation ) return 32774;\n\t\tif ( p === SubtractEquation ) return 32778;\n\t\tif ( p === ReverseSubtractEquation ) return 32779;\n\n\t\tif ( p === ZeroFactor ) return 0;\n\t\tif ( p === OneFactor ) return 1;\n\t\tif ( p === SrcColorFactor ) return 768;\n\t\tif ( p === OneMinusSrcColorFactor ) return 769;\n\t\tif ( p === SrcAlphaFactor ) return 770;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return 771;\n\t\tif ( p === DstAlphaFactor ) return 772;\n\t\tif ( p === OneMinusDstAlphaFactor ) return 773;\n\n\t\tif ( p === DstColorFactor ) return 774;\n\t\tif ( p === OneMinusDstColorFactor ) return 775;\n\t\tif ( p === SrcAlphaSaturateFactor ) return 776;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return 32775;\n\t\t\t\tif ( p === MaxEquation ) return 32776;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return 34042;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\n\tthis.projectionMatrix = new Matrix4();\n\tthis.projectionMatrixInverse = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\tvar e = this.matrixWorld.elements;\n\n\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author jsantell / https://www.jsantell.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar cameraLPos = new Vector3();\nvar cameraRPos = new Vector3();\n\n/**\n * Assumes 2 cameras that are parallel and share an X-axis, and that\n * the cameras' projection and world matrices have already been set.\n * And that near and far planes are identical for both cameras.\n * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n */\nfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\tvar projL = cameraL.projectionMatrix.elements;\n\tvar projR = cameraR.projectionMatrix.elements;\n\n\t// VR systems will have identical far and near planes, and\n\t// most likely identical top and bottom frustum extents.\n\t// Use the left camera for these values.\n\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\tvar left = near * leftFov;\n\tvar right = near * rightFov;\n\n\t// Calculate the new camera's position offset from the\n\t// left camera. xOffset should be roughly half `ipd`.\n\tvar zOffset = ipd / ( - leftFov + rightFov );\n\tvar xOffset = zOffset * - leftFov;\n\n\t// TODO: Better way to apply this offset?\n\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\tcamera.translateX( xOffset );\n\tcamera.translateZ( zOffset );\n\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t// Find the union of the frustum values of the cameras and scale\n\t// the values so that the near plane's position does not change in world space,\n\t// although must now be relative to the new union camera.\n\tvar near2 = near + zOffset;\n\tvar far2 = far + zOffset;\n\tvar left2 = left - xOffset;\n\tvar right2 = right + ( ipd - xOffset );\n\tvar top2 = topFov * far / far2 * near2;\n\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar renderWidth, renderHeight;\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar referenceSpaceType = 'local-floor';\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.viewport = new Vector4();\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.viewport = new Vector4();\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t// Multiview with opaque framebuffer approach\n\n\tthis.multiview = false;\n\n\tvar multiviewAvailability = null;\n\n\tfunction checkMultiviewAvailability() {\n\n\t\tif ( ! device.getViews ) return false;\n\n\t\tvar views = device.getViews();\n\t\treturn !! views && views.length === 1 && !! views[ 0 ].getAttributes().multiview;\n\n\t}\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize = new Vector2(), currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\trenderWidth = 2 * eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\trenderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\trenderer.getSize( currentSize );\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth, renderHeight, 1 );\n\n\t\t\tcameraL.viewport.set( 0, 0, renderWidth / 2, renderHeight );\n\t\t\tcameraR.viewport.set( renderWidth / 2, 0, renderWidth / 2, renderHeight );\n\n\t\t\tmultiviewAvailability = checkMultiviewAvailability();\n\n\t\t\tif ( multiviewAvailability ) {\n\n\t\t\t\trenderer.setFramebuffer( device.getViews()[ 0 ].framebuffer );\n\t\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\t}\n\n\t\t\trenderer.animation.stop();\n\t\t\tanimation.start();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t} else {\n\n\t\t\tif ( scope.enabled ) {\n\n\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t\tif ( multiviewAvailability ) {\n\n\t\t\t\t\trenderer.setFramebuffer( null );\n\t\t\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\t\t\trenderer.animation.start();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t// Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t// Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] === undefined ) triggers[ i ] = false;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateViewportFromBounds( viewport, bounds ) {\n\n\t\tif ( bounds !== null && bounds.length === 4 ) {\n\n\t\t\tviewport.set( bounds[ 0 ] * renderWidth, bounds[ 1 ] * renderHeight, bounds[ 2 ] * renderWidth, bounds[ 3 ] * renderHeight );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tvar userHeight = referenceSpaceType === 'local-floor' ? 1.6 : 0;\n\n\t\tif ( isPresenting() === false ) {\n\n\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\tcamera.rotation.set( 0, 0, 0 );\n\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\tif ( stageParameters ) {\n\n\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t} else {\n\n\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tupdateViewportFromBounds( cameraL.viewport, layer.leftBounds );\n\t\t\tupdateViewportFromBounds( cameraR.viewport, layer.rightBounds );\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t\tif ( isPresenting() ) animation.start();\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n\t// DEPRECATED\n\n\tthis.setFrameOfReferenceType = function () {\n\n\t\tconsole.warn( 'THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t};\n\n}\n\nObject.assign( WebVRManager.prototype, EventDispatcher.prototype );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar gl = renderer.context;\n\n\tvar session = null;\n\n\tvar framebufferScaleFactor = 1.0;\n\n\tvar referenceSpace = null;\n\tvar referenceSpaceType = 'local-floor';\n\n\tvar pose = null;\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && referenceSpace !== null;\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t// Multiview with opaque framebuffer approach\n\n\tthis.multiview = false;\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tif ( inputSources[ i ] === event.inputSource ) {\n\n\t\t\t\tcontrollers[ i ].dispatchEvent( { type: event.type } );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\tanimation.stop();\n\t\trenderer.animation.start();\n\n\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t}\n\n\tfunction onRequestReferenceSpace( value ) {\n\n\t\treferenceSpace = value;\n\n\t\tanimation.setContext( session );\n\t\tanimation.start();\n\n\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t}\n\n\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\tframebufferScaleFactor = value;\n\n\t};\n\n\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\treferenceSpaceType = value;\n\n\t};\n\n\tthis.getSession = function () {\n\n\t\treturn session;\n\n\t};\n\n\tthis.setSession = function ( value ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.updateRenderState( { baseLayer: new XRWebGLLayer( session, gl, { framebufferScaleFactor: framebufferScaleFactor, multiview: this.multiview } ) } );\n\n\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t//\n\n\t\t\tinputSources = session.inputSources;\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.inputSources;\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\tvar controller = controllers[ i ];\n\t\t\t\t\tcontroller.userData.inputSource = inputSources[ i ];\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\t\t\tvar object = poseTarget || camera;\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\t\t\tobject.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.getCameraPose = function ( ) {\n\n\t\treturn pose;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar views = pose.views;\n\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\t\t\t\tvar viewMatrix = view.transform.inverse.matrix;\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new Matrix4();\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getDevice() has been deprecated.' );\n\n\t};\n\n\tthis.setDevice = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: setDevice() has been deprecated.' );\n\n\t};\n\n\tthis.setFrameOfReferenceType = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\nObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false,\n\t\t_forceWebVR = parameters.forceWebVR !== undefined ? parameters.forceWebVR : false;\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// Debug configuration container\n\tthis.debug = {\n\n\t\t/**\n\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t * @type {boolean}\n\t\t */\n\t\tcheckShaderErrors: true\n\t};\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentActiveCubeFace = 0,\n\t\t_currentActiveMipmapLevel = 0,\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference,\n\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n\t\t\txrCompatible: true\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\tthrow error;\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates, uniformsGroups;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils, bindingStates;\n\n\tvar videoTextures;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'OES_vertex_array_object' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities, textures, bindingStates );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\tvideoTextures = [];\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( ! _forceWebVR && typeof navigator !== 'undefined' && 'xr' in navigator && 'supportsSession' in navigator.xr ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// For right eye in VR multiview\n\n\tvar multiview = {\n\t\tinProgress: false,\n\t\tmodelViewMatrix: new Matrix4(),\n\t\tnormalMatrix: new Matrix3(),\n\t\tprojectionMatrix: new Matrix4(),\n\t\tcamera: null\n\t};\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width, _height );\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio );\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\ttarget = new Vector4();\n\n\t\t}\n\n\t\treturn target.copy( _currentViewport );\n\n\t};\n\n\tthis.getViewport = function ( target ) {\n\n\t\treturn target.copy( _viewport );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_viewport.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissor = function ( target ) {\n\n\t\treturn target.copy( _scissor );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\tif ( x.isVector4 ) {\n\n\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t} else {\n\n\t\t\t_scissor.set( x, y, width, height );\n\n\t\t}\n\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.getScissorTest = function () {\n\n\t\treturn _scissorTest;\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= 16384;\n\t\tif ( depth === undefined || depth ) bits |= 256;\n\t\tif ( stencil === undefined || stencil ) bits |= 1024;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\t\tbindingStates.dispose();\n\t\tuniformsGroups.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tbindingStates.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\tbindingStates.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t}\n\n\t\tbindingStates.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t}\n\n\t\tbindingStates.setup( material, program, geometry, index );\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( 0 );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( 4 );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tthis.compileAndUploadMaterials = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t}\n\n\t\t\tif ( object.castShadow ) {\n\n\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tstate.setMaterial( object.material[ i ] );\n\t\t\t\t\t\tsetProgram( camera, scene.fog, object.material[ i ], object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.setMaterial( object.material );\n\t\t\t\t\tsetProgram( camera, scene.fog, object.material, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\tthis.animation = animation;\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tvar renderTarget, forceClear;\n\n\t\t/*if ( arguments[ 2 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t}\n\n\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\tforceClear = arguments[ 3 ];\n\n\t\t}*/\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\tbindingStates.resetDefaultState();\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tvideoTextures.length = 0;\n\n\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget !== undefined ) {\n\n\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\t// Pre-upload all video textures on Oculus Browser\n\t\tif ( parameters.preuploadVideos ) {\n\n\t\t\tfor ( var i = 0, l = videoTextures.length; i < l; i ++ ) {\n\n\t\t\t\ttextures.setTexture2D( videoTextures[ i ], 0 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t//\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t//\n\n\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isGroup ) {\n\n\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tif ( parameters.preuploadVideos && material.map && material.map.isVideoTexture ) {\n\n\t\t\t\t\t\t\tvideoTextures.push( material.map );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t// Multiview with opaque framebuffer approach\n\n\t\t\t\tif ( vr.multiview && ! capabilities.multiview ) {\n\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: Use WebGL 2.0 and WEBGL/OVR_multiview extension support browser for VR multiview with opaque framebuffer approach.' );\n\t\t\t\t\tvr.multiview = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( vr.multiview ) {\n\n\t\t\t\t\tmultiview.camera = cameras[ 1 ];\n\n\t\t\t\t\tmultiview.inProgress = true;\n\n\t\t\t\t\tif ( 'getSession' in vr ) { // WebXR\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( cameras[ 0 ].viewport ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar viewport = vr.getDevice().getViews()[ 0 ].getViewport();\n\t\t\t\t\t\tstate.viewport( _currentViewport.set( viewport.x, viewport.y, viewport.width, viewport.height ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderState.setupLights( multiview.camera );\n\t\t\t\t\trenderObject( object, scene, cameras[ 0 ], geometry, material, group );\n\n\t\t\t\t\tmultiview.inProgress = false;\n\t\t\t\t\tmultiview.camera = null;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( multiview.inProgress ) {\n\n\t\t\tmultiview.modelViewMatrix.multiplyMatrices( multiview.camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tmultiview.normalMatrix.getNormalMatrix( multiview.modelViewMatrix );\n\n\t\t}\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\tbindingStates.reset();\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsStateVersion = lights.state.version;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tuniformsGroups: material.uniformsGroups,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\ttextures.resetTextureUnits();\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsStateVersion !== lights.state.version ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( multiview.inProgress ) p_uniforms.setValue( _gl, 'projectionMatrix2', multiview.camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( multiview.inProgress ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition2;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( multiview.camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tif ( multiview.inProgress ) p_uniforms.setValue( _gl, 'viewMatrix2', multiview.camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value.copy( material.color );\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\tif ( multiview.inProgress ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix2', multiview.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix2', multiview.normalMatrix );\n\n\t\t}\n\n\t\t// UBOs\n\n\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\tvar groups = materialProperties.shader.uniformsGroups;\n\t\t\tvar webglProgram = materialProperties.program.program;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tuniformsGroups.update( group, webglProgram );\n\t\t\t\t\tuniformsGroups.bind( group, webglProgram );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t//\n\tthis.setFramebuffer = function ( value ) {\n\n\t\tif ( _framebuffer !== value ) _gl.bindFramebuffer( 36160, value );\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getActiveCubeFace = function () {\n\n\t\treturn _currentActiveCubeFace;\n\n\t};\n\n\tthis.getActiveMipMapLevel = function () {\n\n\t\treturn _currentActiveMipmapLevel;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipMapLevel ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t_currentActiveMipmapLevel = activeMipMapLevel;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipMapLevel || 0 );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube && activeCubeFaceIndex !== undefined ) {\n\n\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t}\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( 3553, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n\t/*\n\tif ( typeof __THREE_DEVTOOLS__ !== undefined ) {\n\t\t__THREE_DEVTOOLS__.dispatchEvent( { type: 'renderer', value: this } );\n\t}\n\t*/\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nObject.assign( FogExp2.prototype, {\n\n\tisFogExp2: true,\n\n\tclone: function () {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nObject.assign( Fog.prototype, {\n\n\tisFog: true,\n\n\tclone: function () {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n\t/*\n\tif ( typeof __THREE_DEVTOOLS__ !== undefined ) {\n\t\t__THREE_DEVTOOLS__.dispatchEvent( { type: 'scene', value: this } );\n\t}\n\t*/\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tisScene: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis._array = array;\n\tthis._stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( InterleavedBuffer.prototype, {\n\n\tneedsUpdate: {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) this.version ++;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this._array;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._array = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tstride: {\n\n\t\tget: function () {\n\n\t\t\treturn this._stride;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._stride = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis._data = interleavedBuffer;\n\tthis._itemSize = itemSize;\n\tthis._offset = offset;\n\n\tthis._normalized = normalized === true;\n\n\tthis.versionVAO = 0;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t},\n\n\tdata: {\n\n\t\tget: function () {\n\n\t\t\treturn this._data;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._data = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\titemSize: {\n\n\t\tget: function () {\n\n\t\t\treturn this._itemSize;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._itemSize = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\toffset: {\n\n\t\tget: function () {\n\n\t\t\treturn this._offset;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._offset = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t},\n\n\tnormalized: {\n\n\t\tget: function () {\n\n\t\t\treturn this._normalized;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._normalized = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  map: new THREE.Texture( <Image> ),\n *  rotation: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t\tviewWorldMatrix.copy( raycaster._camera.matrixWorld );\n\t\t\tthis.modelViewMatrix.multiplyMatrices( raycaster._camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tif ( raycaster._camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t\tworldScale.multiplyScalar( - mvPosition.z );\n\n\t\t\t}\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\tuvA.set( 0, 0 );\n\t\t\tuvB.set( 1, 0 );\n\t\t\tuvC.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tuvB.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( intersectPoint, vA, vB, vC, uvA, uvB, uvC, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tisLOD: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t}\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar vector = new Vector4();\n\n\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.x = skinWeight.getX( i );\n\t\t\tvector.y = skinWeight.getY( i );\n\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.format = format !== undefined ? format : RGBFormat;\n\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\nTubeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tdata.path = this.parameters.path.toJSON();\n\n\treturn data;\n\n};\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\t\t\tbevelOffset = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize + bevelOffset;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n *  bevelOffset: <float> // how far from text outline does bevel start\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\t// special case for the poles\n\n\t\tvar uOffset = 0;\n\n\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t}\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.copy( vertex ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t}\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n *  clearCoat: <float>\n *  clearCoatRoughness: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  matcap: new THREE.Texture( <Image> ),\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshMatcapMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.type = 'MeshMatcapMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.matcap = null;\n\n\tthis.map = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.alphaMap = null;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshMatcapMaterial.prototype = Object.create( Material.prototype );\nMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\nMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\nMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'MATCAP': '' };\n\n\tthis.color.copy( source.color );\n\n\tthis.matcap = source.matcap;\n\n\tthis.map = source.map;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tMeshMatcapMaterial: MeshMatcapMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\tvar TypedKeyframeTrack = this.constructor;\n\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tclone: function () {\n\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\t// Refer to #5689 for the reason why we don't set .onStart\n\t// in the constructor\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io/\n */\n\nfunction AnimationLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AnimationLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = ( left !== undefined ) ? left : - 1;\n\tthis.right = ( right !== undefined ) ? right : 1;\n\tthis.top = ( top !== undefined ) ? top : 1;\n\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.maxInstancedCount = this.maxInstancedCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\tmeshPerAttribute = normalized;\n\n\t\tnormalized = false;\n\n\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t}\n\n\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\tthis._meshPerAttribute = meshPerAttribute || 1;\n\n\tthis.versionVAO = 0;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ()\t{\n\n\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n} );\n\nObject.defineProperties( InstancedBufferAttribute.prototype, {\n\n\tmeshPerAttribute: {\n\n\t\tget: function () {\n\n\t\t\treturn this._meshPerAttribute;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._meshPerAttribute = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\tvar bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tgeometry.addAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.resourcePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar path = ( this.path === undefined ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResourcePath: function ( value ) {\n\n\t\tthis.resourcePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar cache = {}; // MultiMaterial\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.drawMode !== undefined ) object.setDrawMode( data.drawMode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t} else {\n\n\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t}\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nfunction SphericalHarmonics3() {\n\n\tthis.coefficients = [];\n\n\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\tthis.coefficients.push( new Vector3() );\n\n\t}\n\n}\n\nObject.assign( SphericalHarmonics3.prototype, {\n\n\tisSphericalHarmonics3: true,\n\n\tset: function ( coefficients ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tzero: function () {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget = coeff[ 0 ] * 0.282095;\n\n\t\t// band 1\n\t\ttarget += coeff[ 1 ] * 0.488603 * y;\n\t\ttarget += coeff[ 2 ] * 0.488603 * z;\n\t\ttarget += coeff[ 3 ] * 0.488603 * x;\n\n\t\t// band 2\n\t\ttarget += coeff[ 4 ] * 1.092548 * ( x * y );\n\t\ttarget += coeff[ 5 ] * 1.092548 * ( y * z );\n\t\ttarget += coeff[ 6 ] * 0.315392 * ( 3.0 * z * z - 1.0 );\n\t\ttarget += coeff[ 7 ] * 1.092548 * ( x * z );\n\t\ttarget += coeff[ 8 ] * 0.546274 * ( x * x - y * y );\n\n\t\treturn target;\n\n\t},\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\tvar coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget = coeff[ 0 ] * 0.886227; // π * 0.282095\n\n\t\t// band 1\n\t\ttarget += coeff[ 1 ] * 2.0 * 0.511664 * y; // ( 2 * π / 3 ) * 0.488603\n\t\ttarget += coeff[ 2 ] * 2.0 * 0.511664 * z;\n\t\ttarget += coeff[ 3 ] * 2.0 * 0.511664 * x;\n\n\t\t// band 2\n\t\ttarget += coeff[ 4 ] * 2.0 * 0.429043 * x * y; // ( π / 4 ) * 1.092548\n\t\ttarget += coeff[ 5 ] * 2.0 * 0.429043 * y * z;\n\t\ttarget += coeff[ 6 ] * ( 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget += coeff[ 7 ] * 2.0 * 0.429043 * x * z;\n\t\ttarget += coeff[ 8 ] * 0.429043 * ( x * x - y * y ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t},\n\n\tadd: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\n\tscale: function ( s ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( sh, alpha ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sh ) {\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tcopy: function ( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, i * 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function () {\n\n\t\tvar array = [];\n\t\tvar coefficients = this.coefficients;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, i * 3 );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n} );\n\nObject.assign( SphericalHarmonics3, {\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * A LightProbe is a source of indirect-diffuse light\n */\n\nfunction LightProbe( sh, intensity ) {\n\n\tLight.call( this, undefined, intensity );\n\n\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n}\n\nLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: LightProbe,\n\n\tisLightProbe: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.sh.copy( source.sh );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( skyColor );\n\tvar color2 = new Color().set( groundColor );\n\n\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\tvar c0 = Math.sqrt( Math.PI );\n\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n}\n\nHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: HemisphereLightProbe,\n\n\tisHemisphereLightProbe: true,\n\n\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction AmbientLightProbe( color, intensity ) {\n\n\tLightProbe.call( this, undefined, intensity );\n\n\tvar color1 = new Color().set( color );\n\n\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n}\n\nAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\tconstructor: AmbientLightProbe,\n\n\tisAmbientLightProbe: true,\n\n\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar fov = 90, aspect = 1;\n\nfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n\tthis.timeDelta = 0;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\t\tvar clock = new Clock();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.listener = listener;\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.detune = 0;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetDetune: function ( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetDetune: function () {\n\n\t\treturn this.detune;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.panningModel = 'HRTF';\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( position.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( position.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( position.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( orientation.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( orientation.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( orientation.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0; // threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices; // for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = []; // inside: string\n\tthis._parsedPaths = []; // inside: { we don't care, here }\n\tthis._bindings = []; // inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants; // bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null; // for the memory manager\n\tthis._byClipCacheIndex = null; // for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\tthis.paused = false; // true -> zero effective time scale\n\tthis.enabled = true; // false -> zero effective weight\n\n\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nvar id = 0;\n\nfunction UniformsGroup() {\n\n\tObject.defineProperty( this, 'id', { value: id ++ } );\n\n\tthis.name = '';\n\n\tthis.dynamic = false;\n\tthis.uniforms = [];\n\n}\n\nUniformsGroup.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: UniformsGroup,\n\n\tisUniformsGroup: true,\n\n\tadd: function ( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( uniform ) {\n\n\t\tvar index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t},\n\n\tsetName: function ( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.dynamic = source.dynamic;\n\n\t\tvar uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( var i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author robertlong / https://github.com/robertlong\n */\n\nfunction RawUniformsGroup( data ) {\n\n\tUniformsGroup.call( this );\n\n\tthis.data = data;\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n}\n\nRawUniformsGroup.prototype = Object.assign( Object.create( UniformsGroup.prototype ), {\n\n\tconstructor: RawUniformsGroup,\n\n\tisRawUniformsGroup: true,\n\n\tadd: function ( _uniform ) {\n\n\t\tconsole.warn( 'THREE.RawUniformsGroup: .add() is unimplemented. Modify .data manually instead.' );\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( _uniform ) {\n\n\t\tconsole.warn( 'THREE.RawUniformsGroup: .add() is unimplemented. Modify .data manually instead.' );\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tUniformsGroup.prototype.copy.call( this );\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.data = source.data.slice( 0 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis._meshPerAttribute = meshPerAttribute || 1;\n\n\tthis.versionVAO = 0;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nObject.defineProperties( InstancedInterleavedBuffer.prototype, {\n\n\tmeshPerAttribute: {\n\n\t\tget: function () {\n\n\t\t\treturn this._meshPerAttribute;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._meshPerAttribute = value;\n\t\t\tthis.versionVAO ++;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis._camera = camera;\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis._camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axiz.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t},\n\n\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n *\n *  This helper must be added as a child of the light\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tthis.type = 'RectAreaLightHelper';\n\n\tthis.light = light;\n\n\tthis.color = color; // optional hardwired color for the helper\n\n\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tLine.call( this, geometry, material );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Line.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.update = function () {\n\n\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t// prevent hue shift\n\t\tvar c = this.material.color;\n\t\tvar max = Math.max( c.r, c.g, c.b );\n\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t}\n\n};\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction LightProbeHelper( lightProbe, size ) {\n\n\tthis.lightProbe = lightProbe;\n\n\tthis.size = size;\n\n\tvar defines = {};\n\tdefines[ 'GAMMA_OUTPUT' ] = \"\";\n\n\t// material\n\tvar material = new ShaderMaterial( {\n\n\t\tdefines: defines,\n\n\t\tuniforms: {\n\n\t\t\tsh: { value: this.lightProbe.sh.coefficients }, // by reference\n\n\t\t\tintensity: { value: this.lightProbe.intensity }\n\n\t\t},\n\n\t\tvertexShader: [\n\n\t\t\t'varying vec3 vNormal;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvNormal = normalize( normalMatrix * normal );',\n\n\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t'}',\n\n\t\t].join( '\\n' ),\n\n\t\tfragmentShader: [\n\n\t\t\t'#define RECIPROCAL_PI 0.318309886',\n\n\t\t\t'vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {',\n\n\t\t\t'\t// matrix is assumed to be orthogonal',\n\n\t\t\t'\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );',\n\n\t\t\t'}',\n\n\t\t\t'vec3 linearToOutput( in vec3 a ) {',\n\n\t\t\t'\t#ifdef GAMMA_OUTPUT',\n\n\t\t\t'\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\treturn a;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'}',\n\n\t\t\t'// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf',\n\t\t\t'vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {',\n\n\t\t\t'\t// normal is assumed to have unit length',\n\n\t\t\t'\tfloat x = normal.x, y = normal.y, z = normal.z;',\n\n\t\t\t'\t// band 0',\n\t\t\t'\tvec3 result = shCoefficients[ 0 ] * 0.886227;',\n\n\t\t\t'\t// band 1',\n\t\t\t'\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;',\n\t\t\t'\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;',\n\t\t\t'\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;',\n\n\t\t\t'\t// band 2',\n\t\t\t'\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;',\n\t\t\t'\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;',\n\t\t\t'\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );',\n\t\t\t'\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;',\n\t\t\t'\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );',\n\n\t\t\t'\treturn result;',\n\n\t\t\t'}',\n\n\t\t\t'uniform vec3 sh[ 9 ]; // sh coefficients',\n\n\t\t\t'uniform float intensity; // light probe intensity',\n\n\t\t\t'varying vec3 vNormal;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec3 normal = normalize( vNormal );',\n\n\t\t\t'\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );',\n\n\t\t\t'\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );',\n\n\t\t\t'\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;',\n\n\t\t\t'\toutgoingLight = linearToOutput( outgoingLight );',\n\n\t\t\t'\tgl_FragColor = vec4( outgoingLight, 1.0 );',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' )\n\n\t} );\n\n\tvar geometry = new SphereBufferGeometry( 1, 32, 16 );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.onBeforeRender();\n\n}\n\nLightProbeHelper.prototype = Object.create( Mesh.prototype );\nLightProbeHelper.prototype.constructor = LightProbeHelper;\n\nLightProbeHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nLightProbeHelper.prototype.onBeforeRender = function () {\n\n\treturn function update() {\n\n\t\tthis.position.copy( this.lightProbe.position );\n\n\t\tthis.scale.set( 1, 1, 1 ).multiplyScalar( this.size );\n\n\t\tthis.material.uniforms.intensity.value = this.lightProbe.intensity;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\tconstructor: GridHelper,\n\n\tcopy: function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.geometry.copy( source.geometry );\n\t\tthis.material.copy( source.material );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\tthis.audio = audio;\n\tthis.range = range || 1;\n\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\tvar geometry = new BufferGeometry();\n\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\tthis.update();\n\n}\n\nPositionalAudioHelper.prototype = Object.create( Line.prototype );\nPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\nPositionalAudioHelper.prototype.update = function () {\n\n\tvar audio = this.audio;\n\tvar range = this.range;\n\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\n\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\n\n\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\tvar start = 0;\n\tvar count = 0;\n\tvar i, stride;\n\n\tvar geometry = this.geometry;\n\tvar positionAttribute = geometry.attributes.position;\n\n\tgeometry.clearGroups();\n\n\t//\n\n\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\tvar step = ( to - from ) / divisions;\n\n\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\tcount ++;\n\n\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\tstride = start + count;\n\n\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\tcount += 3;\n\n\t\t}\n\n\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\tstart += count;\n\t\tcount = 0;\n\n\t}\n\n\t//\n\n\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t//\n\n\tpositionAttribute.needsUpdate = true;\n\n\tif ( coneInnerAngle === coneOuterAngle ) this.material[ 0 ].visible = false;\n\n};\n\nPositionalAudioHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material[ 0 ].dispose();\n\tthis.material[ 1 ].dispose();\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v2 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.copy = function ( source ) {\n\n\tLineSegments.prototype.copy.call( this, source );\n\n\tthis.object = source.object;\n\n\treturn this;\n\n};\n\nBoxHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( dir === undefined ) dir = new Vector3( 0, 0, 1 );\n\tif ( origin === undefined ) origin = new Vector3( 0, 0, 0 );\n\tif ( length === undefined ) length = 1;\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\nArrowHelper.prototype.copy = function ( source ) {\n\n\tObject3D.prototype.copy.call( this, source, false );\n\n\tthis.line.copy( source.line );\n\tthis.cone.copy( source.cone );\n\n\treturn this;\n\n};\n\nArrowHelper.prototype.clone = function () {\n\n\treturn new this.constructor().copy( this );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tsetTexturePath: function ( value ) {\n\n\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\treturn this.setResourcePath( value );\n\n\t}\n\n} );\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nSkinnedMesh.prototype.initBones = function () {\n\n\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n};\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\n\toverdraw: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t}\n\t},\n\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t},\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t},\n\tallocTextureUnit: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t},\n\tsetTexture: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t},\n\tsetTexture2D: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t},\n\tsetTextureCube: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTargetCube.prototype, {\n\n\tactiveCubeFace: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t},\n\tactiveMipMapLevel: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t},\n\tuserHeight: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n}\n\n//\n\nfunction JSONLoader() {\n\n\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveBlending, AlphaFormat, AlwaysDepth, AmbientLight, AmbientLightProbe, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, AxisHelper, BackSide, BasicDepthPacking, BasicShadowMap, BinaryTextureLoader, Bone, BooleanKeyframeTrack, BoundingBoxHelper, Box2, Box3, Box3Helper, BoxBufferGeometry, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasRenderer, CanvasTexture, CatmullRomCurve3, CineonToneMapping, CircleBufferGeometry, CircleGeometry, ClampToEdgeWrapping, Clock, ClosedSplineCurve3, Color, ColorKeyframeTrack, CompressedTexture, CompressedTextureLoader, ConeBufferGeometry, ConeGeometry, CubeCamera, BoxGeometry as CubeGeometry, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubeUVRefractionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CylinderBufferGeometry, CylinderGeometry, Cylindrical, DataTexture, DataTexture2DArray, DataTexture3D, DataTextureLoader, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DirectionalLight, DirectionalLightHelper, DirectionalLightShadow, DiscreteInterpolant, DodecahedronBufferGeometry, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicBufferAttribute, EdgesGeometry, EdgesHelper, EllipseCurve, EqualDepth, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeBufferGeometry, ExtrudeGeometry, Face3, Face4, FaceColors, FaceNormalsHelper, FileLoader, FlatShading, Float32Attribute, Float32BufferAttribute, Float64Attribute, Float64BufferAttribute, FloatType, Fog, FogExp2, Font, FontLoader, FrontFaceDirectionCCW, FrontFaceDirectionCW, FrontSide, Frustum, GammaEncoding, Geometry, GeometryUtils, GreaterDepth, GreaterEqualDepth, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, HemisphereLightProbe, IcosahedronBufferGeometry, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, ImmediateRenderObject, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, Int16Attribute, Int16BufferAttribute, Int32Attribute, Int32BufferAttribute, Int8Attribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, JSONLoader, KeyframeTrack, LOD, LatheBufferGeometry, LatheGeometry, Layers, LensFlare, LessDepth, LessEqualDepth, Light, LightProbe, LightProbeHelper, LightShadow, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LinePieces, LineSegments, LineStrip, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearToneMapping, Loader, LoaderUtils, LoadingManager, LogLuvEncoding, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, _Math as Math, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshFaceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiMaterial, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NeverDepth, NoBlending, NoColors, NoToneMapping, NormalBlending, NotEqualDepth, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronBufferGeometry, OctahedronGeometry, OneFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, ParametricBufferGeometry, ParametricGeometry, Particle, ParticleBasicMaterial, ParticleSystem, ParticleSystemMaterial, Path, PerspectiveCamera, Plane, PlaneBufferGeometry, PlaneGeometry, PlaneHelper, PointCloud, PointCloudMaterial, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronBufferGeometry, PolyhedronGeometry, PositionalAudio, PositionalAudioHelper, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, REVISION, RGBADepthPacking, RGBAFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDEncoding, RGBEEncoding, RGBEFormat, RGBFormat, RGBM16Encoding, RGBM7Encoding, RGB_ETC1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RawShaderMaterial, RawUniformsGroup, Ray, Raycaster, RectAreaLight, RectAreaLightHelper, RedFormat, ReinhardToneMapping, RepeatWrapping, ReverseSubtractEquation, RingBufferGeometry, RingGeometry, Scene, SceneUtils, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeBufferGeometry, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, SmoothShading, Sphere, SphereBufferGeometry, SphereGeometry, Spherical, SphericalHarmonics3, SphericalReflectionMapping, Spline, SplineCurve, SplineCurve3, SpotLight, SpotLightHelper, SpotLightShadow, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StereoCamera, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TangentSpaceNormalMap, TetrahedronBufferGeometry, TetrahedronGeometry, TextBufferGeometry, TextGeometry, Texture, TextureLoader, TorusBufferGeometry, TorusGeometry, TorusKnotBufferGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeBufferGeometry, TubeGeometry, UVMapping, Uint16Attribute, Uint16BufferAttribute, Uint32Attribute, Uint32BufferAttribute, Uint8Attribute, Uint8BufferAttribute, Uint8ClampedAttribute, Uint8ClampedBufferAttribute, Uncharted2ToneMapping, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedShortType, Vector2, Vector3, Vector4, VectorKeyframeTrack, Vertex, VertexColors, VertexNormalsHelper, VideoTexture, WebGLMultisampleRenderTarget, WebGLRenderTarget, WebGLRenderTargetCube, WebGLRenderer, WebGLUtils, WireframeGeometry, WireframeHelper, WrapAroundEnding, XHRLoader, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, sRGBEncoding };\n","/* global Ammo */\n\nexport const DefaultBufferSize = 3 * 1000000;\n\nexport const AmmoDebugConstants = {\n  NoDebug: 0,\n  DrawWireframe: 1,\n  DrawAabb: 2,\n  DrawFeaturesText: 4,\n  DrawContactPoints: 8,\n  NoDeactivation: 16,\n  NoHelpText: 32,\n  DrawText: 64,\n  ProfileTimings: 128,\n  EnableSatComparison: 256,\n  DisableBulletLCP: 512,\n  EnableCCD: 1024,\n  DrawConstraints: 1 << 11, //2048\n  DrawConstraintLimits: 1 << 12, //4096\n  FastWireframe: 1 << 13, //8192\n  DrawNormals: 1 << 14, //16384\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\n};\n\nconst setXYZ = function(array, index, x, y, z) {\n  index *= 3;\n  array[index + 0] = x;\n  array[index + 1] = y;\n  array[index + 2] = z;\n};\n\n/**\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\n * @class AmmoDebugDrawer\n * @param {Uint32Array} indexArray\n * @param {Float32Array} verticessArray\n * @param {Float32Array} colorsArray\n * @param {Ammo.btCollisionWorld} world\n * @param {object} [options]\n */\nexport const AmmoDebugDrawer = function(indexArray, verticesArray, colorsArray, world, options) {\n  this.world = world;\n  options = options || {};\n\n  this.verticesArray = verticesArray;\n  this.colorsArray = colorsArray;\n  this.indexArray = indexArray;\n\n  this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe;\n\n  this.index = 0;\n  if (this.indexArray) {\n    Atomics.store(this.indexArray, 0, this.index);\n  }\n\n  this.enabled = false;\n\n  this.debugDrawer = new Ammo.DebugDrawer();\n  this.debugDrawer.drawLine = this.drawLine.bind(this);\n  this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this);\n  this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this);\n  this.debugDrawer.draw3dText = this.draw3dText.bind(this);\n  this.debugDrawer.setDebugMode = this.setDebugMode.bind(this);\n  this.debugDrawer.getDebugMode = this.getDebugMode.bind(this);\n  this.debugDrawer.enable = this.enable.bind(this);\n  this.debugDrawer.disable = this.disable.bind(this);\n  this.debugDrawer.update = this.update.bind(this);\n\n  this.world.setDebugDrawer(this.debugDrawer);\n};\n\nAmmoDebugDrawer.prototype = function() {\n  return this.debugDrawer;\n};\n\nAmmoDebugDrawer.prototype.enable = function() {\n  this.enabled = true;\n};\n\nAmmoDebugDrawer.prototype.disable = function() {\n  this.enabled = false;\n};\n\nAmmoDebugDrawer.prototype.update = function() {\n  if (!this.enabled) {\n    return;\n  }\n\n  if (this.indexArray) {\n    if (Atomics.load(this.indexArray, 0) === 0) {\n      this.index = 0;\n      this.world.debugDrawWorld();\n      Atomics.store(this.indexArray, 0, this.index);\n    }\n  } else {\n    this.index = 0;\n    this.world.debugDrawWorld();\n  }\n};\n\nAmmoDebugDrawer.prototype.drawLine = function(from, to, color) {\n  const heap = Ammo.HEAPF32;\n  const r = heap[(color + 0) / 4];\n  const g = heap[(color + 4) / 4];\n  const b = heap[(color + 8) / 4];\n\n  const fromX = heap[(from + 0) / 4];\n  const fromY = heap[(from + 4) / 4];\n  const fromZ = heap[(from + 8) / 4];\n  setXYZ(this.verticesArray, this.index, fromX, fromY, fromZ);\n  setXYZ(this.colorsArray, this.index++, r, g, b);\n\n  const toX = heap[(to + 0) / 4];\n  const toY = heap[(to + 4) / 4];\n  const toZ = heap[(to + 8) / 4];\n  setXYZ(this.verticesArray, this.index, toX, toY, toZ);\n  setXYZ(this.colorsArray, this.index++, r, g, b);\n};\n\n//TODO: figure out how to make lifeTime work\nAmmoDebugDrawer.prototype.drawContactPoint = function(pointOnB, normalOnB, distance, lifeTime, color) {\n  const heap = Ammo.HEAPF32;\n  const r = heap[(color + 0) / 4];\n  const g = heap[(color + 4) / 4];\n  const b = heap[(color + 8) / 4];\n\n  const x = heap[(pointOnB + 0) / 4];\n  const y = heap[(pointOnB + 4) / 4];\n  const z = heap[(pointOnB + 8) / 4];\n  setXYZ(this.verticesArray, this.index, x, y, z);\n  setXYZ(this.colorsArray, this.index++, r, g, b);\n\n  const dx = heap[(normalOnB + 0) / 4] * distance;\n  const dy = heap[(normalOnB + 4) / 4] * distance;\n  const dz = heap[(normalOnB + 8) / 4] * distance;\n  setXYZ(this.verticesArray, this.index, x + dx, y + dy, z + dz);\n  setXYZ(this.colorsArray, this.index++, r, g, b);\n};\n\nAmmoDebugDrawer.prototype.reportErrorWarning = function(warningString) {\n  if (Ammo.hasOwnProperty(\"UTF8ToString\")) {\n    console.warn(Ammo.UTF8ToString(warningString));\n  } else if (!this.warnedOnce) {\n    this.warnedOnce = true;\n    console.warn(\"Cannot print warningString, please export UTF8ToString from Ammo.js in make.py\");\n  }\n};\n\nAmmoDebugDrawer.prototype.draw3dText = function(location, textString) {\n  //TODO\n  console.warn(\"TODO: draw3dText\");\n};\n\nAmmoDebugDrawer.prototype.setDebugMode = function(debugMode) {\n  this.debugDrawMode = debugMode;\n};\n\nAmmoDebugDrawer.prototype.getDebugMode = function() {\n  return this.debugDrawMode;\n};\n","/* global Ammo */\n\nconst EPS = 10e-6;\n\nimport { AmmoDebugDrawer, AmmoDebugConstants } from \"ammo-debug-drawer\";\nimport CONSTANTS from \"../constants.js\";\nimport * as THREE from \"three\";\n\n/* @param {object} worldConfig */\nconst World = function(worldConfig) {\n  this.collisionConfiguration = null;\n  this.dispatcher = null;\n  this.broadphase = null;\n  this.solver = null;\n  this.physicsWorld = null;\n  this.debugDrawer = null;\n\n  this.object3Ds = new Map();\n  this.collisions = new Map();\n  this.collisionKeys = [];\n\n  this.epsilon = worldConfig.epsilon || EPS;\n  this.debugDrawMode = worldConfig.debugDrawMode || AmmoDebugConstants.NoDebug;\n  this.maxSubSteps = worldConfig.maxSubSteps || 4;\n  this.fixedTimeStep = worldConfig.fixedTimeStep || 1 / 60;\n  this.collisionConfiguration = new Ammo.btDefaultCollisionConfiguration();\n  this.dispatcher = new Ammo.btCollisionDispatcher(this.collisionConfiguration);\n  this.broadphase = new Ammo.btDbvtBroadphase();\n  this.solver = new Ammo.btSequentialImpulseConstraintSolver();\n  this.physicsWorld = new Ammo.btDiscreteDynamicsWorld(\n    this.dispatcher,\n    this.broadphase,\n    this.solver,\n    this.collisionConfiguration\n  );\n  this.physicsWorld.setForceUpdateAllAabbs(false);\n  const gravity = new Ammo.btVector3(0, CONSTANTS.GRAVITY, 0);\n  if (worldConfig.hasOwnProperty(\"gravity\")) {\n    gravity.setValue(worldConfig.gravity.x, worldConfig.gravity.y, worldConfig.gravity.z);\n  }\n  this.physicsWorld.setGravity(gravity);\n  Ammo.destroy(gravity);\n  this.physicsWorld.getSolverInfo().set_m_numIterations(worldConfig.solverIterations || 10);\n};\n\nWorld.prototype.isDebugEnabled = function() {\n  return this.debugDrawMode !== AmmoDebugConstants.NoDebug;\n};\n\n/* @param {Ammo.btCollisionObject} body */\nWorld.prototype.addBody = function(body, object3D, group, mask) {\n  this.physicsWorld.addRigidBody(body, group, mask);\n  this.object3Ds.set(Ammo.getPointer(body), object3D);\n};\n\n/* @param {Ammo.btCollisionObject} body */\nWorld.prototype.removeBody = function(body) {\n  this.physicsWorld.removeRigidBody(body);\n  const bodyptr = Ammo.getPointer(body);\n  this.object3Ds.delete(bodyptr);\n  this.collisions.delete(bodyptr);\n  if (this.collisionKeys.indexOf(bodyptr) !== -1) {\n    this.collisionKeys.splice(this.collisionKeys.indexOf(bodyptr), 1);\n  }\n};\n\nWorld.prototype.updateBody = function(body) {\n  if (this.object3Ds.has(Ammo.getPointer(body))) {\n    this.physicsWorld.updateSingleAabb(body);\n  }\n};\n\n/* @param {number} deltaTime */\nWorld.prototype.step = function(deltaTime) {\n  this.physicsWorld.stepSimulation(deltaTime, this.maxSubSteps, this.fixedTimeStep);\n\n  for (let k = 0; k < this.collisionKeys.length; k++) {\n    this.collisions.get(this.collisionKeys[k]).length = 0;\n  }\n\n  const numManifolds = this.dispatcher.getNumManifolds();\n  for (let i = 0; i < numManifolds; i++) {\n    const persistentManifold = this.dispatcher.getManifoldByIndexInternal(i);\n    const numContacts = persistentManifold.getNumContacts();\n    const body0ptr = Ammo.getPointer(persistentManifold.getBody0());\n    const body1ptr = Ammo.getPointer(persistentManifold.getBody1());\n\n    for (let j = 0; j < numContacts; j++) {\n      const manifoldPoint = persistentManifold.getContactPoint(j);\n      const distance = manifoldPoint.getDistance();\n      if (distance <= this.epsilon) {\n        if (!this.collisions.has(body0ptr)) {\n          this.collisions.set(body0ptr, []);\n          this.collisionKeys.push(body0ptr);\n        }\n        if (this.collisions.get(body0ptr).indexOf(body1ptr) === -1) {\n          this.collisions.get(body0ptr).push(body1ptr);\n        }\n        break;\n      }\n    }\n  }\n\n  if (this.debugDrawer) {\n    this.debugDrawer.update();\n  }\n};\n\nWorld.prototype.destroy = function() {\n  Ammo.destroy(this.collisionConfiguration);\n  Ammo.destroy(this.dispatcher);\n  Ammo.destroy(this.broadphase);\n  Ammo.destroy(this.solver);\n  Ammo.destroy(this.physicsWorld);\n  Ammo.destroy(this.debugDrawer);\n};\n\n/**\n * @param {THREE.Scene} scene\n * @param {object} options\n */\nWorld.prototype.getDebugDrawer = function(debugIndexArray, debugMatricesArray, debugColorsArray, options) {\n  if (!this.debugDrawer) {\n    options = options || {};\n    options.debugDrawMode = options.debugDrawMode || this.debugDrawMode;\n    this.debugDrawer = new AmmoDebugDrawer(\n      debugIndexArray,\n      debugMatricesArray,\n      debugColorsArray,\n      this.physicsWorld,\n      options\n    );\n  }\n\n  return this.debugDrawer;\n};\n\nexport default World;\n","/* global Ammo */\nimport * as THREE from \"three\";\n\nimport CONSTANTS from \"../constants.js\";\nconst ACTIVATION_STATE = CONSTANTS.ACTIVATION_STATE,\n  COLLISION_FLAG = CONSTANTS.COLLISION_FLAG,\n  SHAPE = CONSTANTS.SHAPE,\n  TYPE = CONSTANTS.TYPE,\n  FIT = CONSTANTS.FIT;\n\nconst ACTIVATION_STATES = [\n  ACTIVATION_STATE.ACTIVE_TAG,\n  ACTIVATION_STATE.ISLAND_SLEEPING,\n  ACTIVATION_STATE.WANTS_DEACTIVATION,\n  ACTIVATION_STATE.DISABLE_DEACTIVATION,\n  ACTIVATION_STATE.DISABLE_SIMULATION\n];\n\nconst RIGID_BODY_FLAGS = {\n  NONE: 0,\n  DISABLE_WORLD_GRAVITY: 1\n};\n\nfunction almostEqualsVector3(epsilon, u, v) {\n  return Math.abs(u.x - v.x) < epsilon && Math.abs(u.y - v.y) < epsilon && Math.abs(u.z - v.z) < epsilon;\n}\n\nfunction almostEqualsBtVector3(epsilon, u, v) {\n  return Math.abs(u.x() - v.x()) < epsilon && Math.abs(u.y() - v.y()) < epsilon && Math.abs(u.z() - v.z()) < epsilon;\n}\n\nfunction almostEqualsQuaternion(epsilon, u, v) {\n  return (\n    (Math.abs(u.x - v.x) < epsilon &&\n      Math.abs(u.y - v.y) < epsilon &&\n      Math.abs(u.z - v.z) < epsilon &&\n      Math.abs(u.w - v.w) < epsilon) ||\n    (Math.abs(u.x + v.x) < epsilon &&\n      Math.abs(u.y + v.y) < epsilon &&\n      Math.abs(u.z + v.z) < epsilon &&\n      Math.abs(u.w + v.w) < epsilon)\n  );\n}\n\n/**\n * Initializes a body component, assigning it to the physics system and binding listeners for\n * parsing the elements geometry.\n */\nfunction Body(bodyConfig, matrix, world) {\n  this.loadedEvent = bodyConfig.loadedEvent ? bodyConfig.loadedEvent : \"\";\n  this.mass = bodyConfig.hasOwnProperty(\"mass\") ? bodyConfig.mass : 1;\n  const worldGravity = world.physicsWorld.getGravity();\n  this.gravity = new Ammo.btVector3(worldGravity.x(), worldGravity.y(), worldGravity.z());\n  if (bodyConfig.gravity) {\n    this.gravity.setValue(bodyConfig.gravity.x, bodyConfig.gravity.y, bodyConfig.gravity.z);\n  }\n  this.linearDamping = bodyConfig.hasOwnProperty(\"linearDamping\") ? bodyConfig.linearDamping : 0.01;\n  this.angularDamping = bodyConfig.hasOwnProperty(\"angularDamping\") ? bodyConfig.angularDamping : 0.01;\n  this.linearSleepingThreshold = bodyConfig.hasOwnProperty(\"linearSleepingThreshold\")\n    ? bodyConfig.linearSleepingThreshold\n    : 1.6;\n  this.angularSleepingThreshold = bodyConfig.hasOwnProperty(\"angularSleepingThreshold\")\n    ? bodyConfig.angularSleepingThreshold\n    : 2.5;\n  this.angularFactor = new THREE.Vector3(1, 1, 1);\n  if (bodyConfig.angularFactor) {\n    this.angularFactor.copy(bodyConfig.angularFactor);\n  }\n  this.activationState =\n    bodyConfig.activationState && ACTIVATION_STATES.indexOf(bodyConfig.activationState) !== -1\n      ? bodyConfig.activationState\n      : ACTIVATION_STATE.ACTIVE_TAG;\n  this.type = bodyConfig.type ? bodyConfig.type : TYPE.DYNAMIC;\n  this.emitCollisionEvents = bodyConfig.hasOwnProperty(\"emitCollisionEvents\") ? bodyConfig.emitCollisionEvents : false;\n  this.disableCollision = bodyConfig.hasOwnProperty(\"disableCollision\") ? bodyConfig.disableCollision : false;\n  this.collisionFilterGroup = bodyConfig.hasOwnProperty(\"collisionFilterGroup\") ? bodyConfig.collisionFilterGroup : 1; //32-bit mask\n  this.collisionFilterMask = bodyConfig.hasOwnProperty(\"collisionFilterMask\") ? bodyConfig.collisionFilterMask : 1; //32-bit mask\n  this.scaleAutoUpdate = bodyConfig.hasOwnProperty(\"scaleAutoUpdate\") ? bodyConfig.scaleAutoUpdate : true;\n\n  this.matrix = matrix;\n  this.world = world;\n  this.shapes = [];\n\n  this._initBody();\n}\n\n/**\n * Parses an element's geometry and component metadata to create an Ammo body instance for the component.\n */\nBody.prototype._initBody = (function() {\n  const pos = new THREE.Vector3();\n  const quat = new THREE.Quaternion();\n  const scale = new THREE.Vector3();\n  return function() {\n    this.localScaling = new Ammo.btVector3();\n\n    this.matrix.decompose(pos, quat, scale);\n\n    this.localScaling.setValue(scale.x, scale.y, scale.z);\n    this.prevScale = new THREE.Vector3(1, 1, 1);\n    this.prevNumChildShapes = 0;\n\n    this.msTransform = new Ammo.btTransform();\n    this.msTransform.setIdentity();\n    this.rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w);\n\n    this.msTransform.getOrigin().setValue(pos.x, pos.y, pos.z);\n    this.msTransform.setRotation(this.rotation);\n\n    this.motionState = new Ammo.btDefaultMotionState(this.msTransform);\n\n    this.localInertia = new Ammo.btVector3(0, 0, 0);\n\n    this.compoundShape = new Ammo.btCompoundShape(true);\n    this.compoundShape.setLocalScaling(this.localScaling);\n\n    this.rbInfo = new Ammo.btRigidBodyConstructionInfo(\n      this.mass,\n      this.motionState,\n      this.compoundShape,\n      this.localInertia\n    );\n    this.physicsBody = new Ammo.btRigidBody(this.rbInfo);\n    this.physicsBody.setActivationState(ACTIVATION_STATES.indexOf(this.activationState) + 1);\n    this.physicsBody.setSleepingThresholds(this.linearSleepingThreshold, this.angularSleepingThreshold);\n\n    this.physicsBody.setDamping(this.linearDamping, this.angularDamping);\n\n    const angularFactor = new Ammo.btVector3(this.angularFactor.x, this.angularFactor.y, this.angularFactor.z);\n    this.physicsBody.setAngularFactor(angularFactor);\n    Ammo.destroy(angularFactor);\n\n    if (!almostEqualsBtVector3(0.001, this.gravity, this.world.physicsWorld.getGravity())) {\n      this.physicsBody.setGravity(this.gravity);\n      this.physicsBody.setFlags(RIGID_BODY_FLAGS.DISABLE_WORLD_GRAVITY);\n    }\n\n    this.updateCollisionFlags();\n\n    this.world.addBody(this.physicsBody, this.matrix, this.collisionFilterGroup, this.collisionFilterMask);\n\n    if (this.emitCollisionEvents) {\n      this.world.addEventListener(this.physicsBody);\n    }\n  };\n})();\n\n/**\n * Updates the body when shapes have changed. Should be called whenever shapes are added/removed or scale is changed.\n */\nBody.prototype.updateShapes = (function() {\n  const needsPolyhedralInitialization = [SHAPE.HULL, SHAPE.HACD, SHAPE.VHACD];\n  const pos = new THREE.Vector3();\n  const quat = new THREE.Quaternion();\n  const scale = new THREE.Vector3();\n  return function() {\n    let updated = false;\n    this.matrix.decompose(pos, quat, scale);\n    if (this.scaleAutoUpdate && this.prevScale && !almostEqualsVector3(0.001, scale, this.prevScale)) {\n      this.prevScale.copy(scale);\n      updated = true;\n\n      this.localScaling.setValue(this.prevScale.x, this.prevScale.y, this.prevScale.z);\n      this.compoundShape.setLocalScaling(this.localScaling);\n    }\n\n    if (this.shapesChanged) {\n      this.shapesChanged = false;\n      updated = true;\n      if (this.type === TYPE.DYNAMIC) {\n        this.updateMass();\n      }\n\n      this.world.updateBody(this.physicsBody);\n    }\n\n    //call initializePolyhedralFeatures for hull shapes if debug is turned on and/or scale changes\n    if (this.world.isDebugEnabled() && (updated || !this.polyHedralFeaturesInitialized)) {\n      for (let i = 0; i < this.shapes.length; i++) {\n        const collisionShape = this.shapes[i];\n        if (needsPolyhedralInitialization.indexOf(collisionShape.type) !== -1) {\n          collisionShape.initializePolyhedralFeatures(0);\n        }\n      }\n      this.polyHedralFeaturesInitialized = true;\n    }\n  };\n})();\n\n/**\n * Update the configuration of the body.\n */\nBody.prototype.update = function(bodyConfig) {\n  if (\n    (bodyConfig.type && bodyConfig.type !== this.type) ||\n    (bodyConfig.disableCollision && bodyConfig.disableCollision !== this.disableCollision)\n  ) {\n    if (bodyConfig.type) this.type = bodyConfig.type;\n    if (bodyConfig.disableCollision) this.disableCollision = bodyConfig.disableCollision;\n    this.updateCollisionFlags();\n  }\n\n  if (bodyConfig.activationState && bodyConfig.activationState !== this.activationState) {\n    this.activationState = bodyConfig.activationState;\n    this.physicsBody.forceActivationState(ACTIVATION_STATES.indexOf(this.activationState) + 1);\n    if (this.activationState === ACTIVATION_STATE.ACTIVE_TAG) {\n      this.physicsBody.activate(true);\n    }\n  }\n\n  if (\n    (bodyConfig.collisionFilterGroup && bodyConfig.collisionFilterGroup !== this.collisionFilterGroup) ||\n    (bodyConfig.collisionFilterMask && bodyConfig.collisionFilterMask !== this.collisionFilterMask)\n  ) {\n    if (bodyConfig.collisionFilterGroup) this.collisionFilterGroup = bodyConfig.collisionFilterGroup;\n    if (bodyConfig.collisionFilterMask) this.collisionFilterMask = bodyConfig.collisionFilterMask;\n    const broadphaseProxy = this.physicsBody.getBroadphaseProxy();\n    broadphaseProxy.set_m_collisionFilterGroup(this.collisionFilterGroup);\n    broadphaseProxy.set_m_collisionFilterMask(this.collisionFilterMask);\n    this.world.broadphase\n      .getOverlappingPairCache()\n      .removeOverlappingPairsContainingProxy(broadphaseProxy, this.world.dispatcher);\n  }\n\n  if (\n    (bodyConfig.linearDamping && bodyConfig.linearDamping != this.linearDamping) ||\n    (bodyConfig.angularDamping && bodyConfig.angularDamping != this.angularDamping)\n  ) {\n    if (bodyConfig.linearDamping) this.linearDamping = bodyConfig.linearDamping;\n    if (bodyConfig.angularDamping) this.angularDamping = bodyConfig.angularDamping;\n    this.physicsBody.setDamping(this.linearDamping, this.angularDamping);\n  }\n\n  if (bodyConfig.gravity) {\n    this.gravity.setValue(bodyConfig.gravity.x, bodyConfig.gravity.y, bodyConfig.gravity.z);\n    if (!almostEqualsBtVector3(0.001, this.gravity, this.physicsBody.getGravity())) {\n      if (!almostEqualsBtVector3(0.001, this.gravity, this.world.physicsWorld.getGravity())) {\n        this.physicsBody.setFlags(RIGID_BODY_FLAGS.DISABLE_WORLD_GRAVITY);\n      } else {\n        this.physicsBody.setFlags(RIGID_BODY_FLAGS.NONE);\n      }\n      this.physicsBody.setGravity(this.gravity);\n    }\n  }\n\n  if (\n    (bodyConfig.linearSleepingThreshold && bodyConfig.linearSleepingThreshold != this.linearSleepingThreshold) ||\n    (bodyConfig.angularSleepingThreshold && bodyConfig.angularSleepingThreshold != this.angularSleepingThreshold)\n  ) {\n    if (bodyConfig.linearSleepingThreshold) this.linearSleepingThreshold = bodyConfig.linearSleepingThreshold;\n    if (bodyConfig.angularSleepingThreshold) this.angularSleepingThreshold = bodyConfig.angularSleepingThreshold;\n    this.physicsBody.setSleepingThresholds(this.linearSleepingThreshold, this.angularSleepingThreshold);\n  }\n\n  if (bodyConfig.angularFactor && !almostEqualsVector3(0.001, bodyConfig.angularFactor, this.angularFactor)) {\n    this.angularFactor.copy(bodyConfig.angularFactor);\n    const angularFactor = new Ammo.btVector3(this.angularFactor.x, this.angularFactor.y, this.angularFactor.z);\n    this.physicsBody.setAngularFactor(angularFactor);\n    Ammo.destroy(angularFactor);\n  }\n\n  //TODO: support dynamic update for other properties\n};\n\n/**\n * Removes the component and all physics and scene side effects.\n */\nBody.prototype.destroy = function() {\n  if (this.triMesh) Ammo.destroy(this.triMesh);\n  if (this.localScaling) Ammo.destroy(this.localScaling);\n\n  for (let i = 0; i < this.shapes.length; i++) {\n    this.compoundShape.removeChildShape([i]);\n  }\n  if (this.compoundShape) Ammo.destroy(this.compoundShape);\n\n  this.world.removeBody(this.physicsBody);\n  Ammo.destroy(this.physicsBody);\n  delete this.physicsBody;\n  Ammo.destroy(this.rbInfo);\n  Ammo.destroy(this.msTransform);\n  Ammo.destroy(this.motionState);\n  Ammo.destroy(this.localInertia);\n  Ammo.destroy(this.rotation);\n  Ammo.destroy(this.gravity);\n};\n\n/**\n * Updates the rigid body's position, velocity, and rotation, based on the scene.\n */\nBody.prototype.syncToPhysics = (function() {\n  const pos = new THREE.Vector3(),\n    quat = new THREE.Quaternion(),\n    scale = new THREE.Vector3(),\n    q = new THREE.Vector3(),\n    v = new THREE.Vector3();\n  return function(setCenterOfMassTransform) {\n    const body = this.physicsBody;\n    if (!body) return;\n\n    this.motionState.getWorldTransform(this.msTransform);\n\n    this.matrix.decompose(pos, quat, scale);\n\n    const position = this.msTransform.getOrigin();\n    v.set(position.x(), position.y(), position.z());\n\n    const quaternion = this.msTransform.getRotation();\n    q.set(quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w());\n\n    if (!almostEqualsVector3(0.001, pos, v) || !almostEqualsQuaternion(0.001, quat, q)) {\n      if (!this.physicsBody.isActive()) {\n        this.physicsBody.activate(true);\n      }\n      this.msTransform.getOrigin().setValue(pos.x, pos.y, pos.z);\n      this.rotation.setValue(quat.x, quat.y, quat.z, quat.w);\n      this.msTransform.setRotation(this.rotation);\n      this.motionState.setWorldTransform(this.msTransform);\n\n      if (this.type === TYPE.STATIC || setCenterOfMassTransform) {\n        this.physicsBody.setCenterOfMassTransform(this.msTransform);\n      }\n    }\n  };\n})();\n\n/**\n * Updates the scene object's position and rotation, based on the physics simulation.\n */\nBody.prototype.syncFromPhysics = (function() {\n  const pos = new THREE.Vector3(),\n    quat = new THREE.Quaternion(),\n    scale = new THREE.Vector3();\n  return function() {\n    this.motionState.getWorldTransform(this.msTransform);\n    const position = this.msTransform.getOrigin();\n    const quaternion = this.msTransform.getRotation();\n\n    const body = this.physicsBody;\n\n    if (!body) return;\n    this.matrix.decompose(pos, quat, scale);\n    pos.set(position.x(), position.y(), position.z());\n    quat.set(quaternion.x(), quaternion.y(), quaternion.z(), quaternion.w());\n    this.matrix.compose(pos, quat, scale);\n  };\n})();\n\nBody.prototype.addShape = function(collisionShape) {\n  if (collisionShape.type === SHAPE.MESH && this.type !== TYPE.STATIC) {\n    console.warn(\"non-static mesh colliders not supported\");\n    return;\n  }\n\n  this.shapes.push(collisionShape);\n  this.compoundShape.addChildShape(collisionShape.localTransform, collisionShape);\n  this.shapesChanged = true;\n  this.updateShapes();\n};\n\nBody.prototype.removeShape = function(collisionShape) {\n  const index = this.shapes.indexOf(collisionShape);\n  if (this.compoundShape && index !== -1) {\n    this.compoundShape.removeChildShape(this.shapes[index]);\n    this.shapesChanged = true;\n    this.shapes.splice(index, 1);\n    this.updateShapes();\n  }\n};\n\nBody.prototype.updateMass = function() {\n  const mass = this.type === TYPE.STATIC ? 0 : this.mass;\n  this.compoundShape.calculateLocalInertia(mass, this.localInertia);\n  this.physicsBody.setMassProps(mass, this.localInertia);\n  this.physicsBody.updateInertiaTensor();\n};\n\nBody.prototype.updateCollisionFlags = function() {\n  let flags = this.disableCollision ? 4 : 0;\n  switch (this.type) {\n    case TYPE.STATIC:\n      flags |= COLLISION_FLAG.STATIC_OBJECT;\n      break;\n    case TYPE.KINEMATIC:\n      flags |= COLLISION_FLAG.KINEMATIC_OBJECT;\n      break;\n    default:\n      this.physicsBody.applyGravity();\n      break;\n  }\n  this.physicsBody.setCollisionFlags(flags);\n\n  this.updateMass();\n\n  // TODO: enable CCD if dynamic?\n  // this.physicsBody.setCcdMotionThreshold(0.001);\n  // this.physicsBody.setCcdSweptSphereRadius(0.001);\n\n  this.world.updateBody(this.physicsBody);\n};\n\nBody.prototype.getVelocity = function() {\n  return this.physicsBody.getLinearVelocity();\n};\n\nexport default Body;\n","/* global Ammo */\nimport CONSTANTS from \"../constants.js\";\nconst CONSTRAINT = CONSTANTS.CONSTRAINT;\nconst CONSTRAINTS = [\n  CONSTRAINT.LOCK,\n  CONSTRAINT.FIXED,\n  CONSTRAINT.SPRING,\n  CONSTRAINT.SLIDER,\n  CONSTRAINT.HINGE,\n  CONSTRAINT.CONE_TWIST,\n  CONSTRAINT.POINT_TO_POINT\n];\n\n/**\n * @return {Ammo.btTypedConstraint}\n */\nconst Constraint = function(constraintConfig, body, targetBody, world) {\n  this.physicsConstraint;\n\n  this.world = world;\n\n  const type =\n    constraintConfig.type && CONSTRAINTS.indexOf(constraintConfig.type) ? constraintConfig.type : CONSTRAINT.LOCK;\n\n  const bodyTransform = body.physicsBody\n    .getCenterOfMassTransform()\n    .inverse()\n    .op_mul(targetBody.physicsBody.getWorldTransform());\n  const targetTransform = new Ammo.btTransform();\n  targetTransform.setIdentity();\n\n  switch (type) {\n    case CONSTRAINT.LOCK: {\n      this.physicsConstraint = new Ammo.btGeneric6DofConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      const zero = new Ammo.btVector3(0, 0, 0);\n      //TODO: allow these to be configurable\n      this.physicsConstraint.setLinearLowerLimit(zero);\n      this.physicsConstraint.setLinearUpperLimit(zero);\n      this.physicsConstraint.setAngularLowerLimit(zero);\n      this.physicsConstraint.setAngularUpperLimit(zero);\n      Ammo.destroy(zero);\n      break;\n    }\n    //TODO: test and verify all other constraint types\n    case CONSTRAINT.FIXED: {\n      //btFixedConstraint does not seem to debug render\n      bodyTransform.setRotation(body.physicsBody.getWorldTransform().getRotation());\n      targetTransform.setRotation(targetBody.physicsBody.getWorldTransform().getRotation());\n      this.physicsConstraint = new Ammo.btFixedConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform\n      );\n      break;\n    }\n    case CONSTRAINT.SPRING: {\n      this.physicsConstraint = new Ammo.btGeneric6DofSpringConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      //TODO: enableSpring, setStiffness and setDamping\n      break;\n    }\n    case CONSTRAINT.SLIDER: {\n      //TODO: support setting linear and angular limits\n      this.physicsConstraint = new Ammo.btSliderConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        bodyTransform,\n        targetTransform,\n        true\n      );\n      this.physicsConstraint.setLowerLinLimit(-1);\n      this.physicsConstraint.setUpperLinLimit(1);\n      // this.physicsConstraint.setLowerAngLimit();\n      // this.physicsConstraint.setUpperAngLimit();\n      break;\n    }\n    case CONSTRAINT.HINGE: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: hinge\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: hinge\");\n      }\n      if (!constraintConfig.axis) {\n        throw new Error(\"axis must be defined for type: hinge\");\n      }\n      if (!constraintConfig.targetAxis) {\n        throw new Error(\"targetAxis must be defined for type: hinge\");\n      }\n\n      const pivot = new Ammo.btVector3(constraintConfig.pivot.x, constraintConfig.pivot.y, constraintConfig.pivot.z);\n      const targetPivot = new Ammo.btVector3(\n        constraintConfig.targetPivot.x,\n        constraintConfig.targetPivot.y,\n        constraintConfig.targetPivot.z\n      );\n\n      const axis = new Ammo.btVector3(constraintConfig.axis.x, constraintConfig.axis.y, constraintConfig.axis.z);\n      const targetAxis = new Ammo.btVector3(\n        constraintConfig.targetAxis.x,\n        constraintConfig.targetAxis.y,\n        constraintConfig.targetAxis.z\n      );\n\n      this.physicsConstraint = new Ammo.btHingeConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        pivot,\n        targetPivot,\n        axis,\n        targetAxis,\n        true\n      );\n\n      Ammo.destroy(pivot);\n      Ammo.destroy(targetPivot);\n      Ammo.destroy(axis);\n      Ammo.destroy(targetAxis);\n      break;\n    }\n    case CONSTRAINT.CONE_TWIST: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: cone-twist\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: cone-twist\");\n      }\n\n      const pivotTransform = new Ammo.btTransform();\n      pivotTransform.setIdentity();\n      pivotTransform\n        .getOrigin()\n        .setValue(constraintConfig.targetPivot.x, constraintConfig.targetPivot.y, constraintConfig.targetPivot.z);\n      this.physicsConstraint = new Ammo.btConeTwistConstraint(body.physicsBody, pivotTransform);\n      Ammo.destroy(pivotTransform);\n      break;\n    }\n    case CONSTRAINT.POINT_TO_POINT: {\n      if (!constraintConfig.pivot) {\n        throw new Error(\"pivot must be defined for type: point-to-point\");\n      }\n      if (!constraintConfig.targetPivot) {\n        throw new Error(\"targetPivot must be defined for type: point-to-point\");\n      }\n\n      const pivot = new Ammo.btVector3(constraintConfig.pivot.x, constraintConfig.pivot.y, constraintConfig.pivot.z);\n      const targetPivot = new Ammo.btVector3(\n        constraintConfig.targetPivot.x,\n        constraintConfig.targetPivot.y,\n        constraintConfig.targetPivot.z\n      );\n\n      this.physicsConstraint = new Ammo.btPoint2PointConstraint(\n        body.physicsBody,\n        targetBody.physicsBody,\n        pivot,\n        targetPivot\n      );\n\n      Ammo.destroy(pivot);\n      Ammo.destroy(targetPivot);\n      break;\n    }\n  }\n\n  Ammo.destroy(targetTransform);\n\n  this.world.physicsWorld.addConstraint(this.physicsConstraint, false);\n};\n\nConstraint.prototype.destroy = function() {\n  if (!this.physicsConstraint) return;\n\n  this.world.physicsWorld.removeConstraint(this.physicsConstraint);\n  Ammo.destroy(this.physicsConstraint);\n  this.physicsConstraint = null;\n};\n\nexport default Constraint;\n","\"use strict\";\n/* global Ammo */\nimport * as THREE from \"three\";\n\nexport const TYPE = {\n  BOX: \"box\",\n  CYLINDER: \"cylinder\",\n  SPHERE: \"sphere\",\n  CAPSULE: \"capsule\",\n  CONE: \"cone\",\n  HULL: \"hull\",\n  HACD: \"hacd\", //Hierarchical Approximate Convex Decomposition\n  VHACD: \"vhacd\", //Volumetric Hierarchical Approximate Convex Decomposition\n  MESH: \"mesh\",\n  HEIGHTFIELD: \"heightfield\"\n};\n\nexport const FIT = {\n  ALL: \"all\", //A single shape is automatically sized to bound all meshes within the entity.\n  MANUAL: \"manual\" //A single shape is sized manually. Requires halfExtents or sphereRadius.\n};\n\nexport const HEIGHTFIELD_DATA_TYPE = {\n  short: \"short\",\n  float: \"float\"\n};\n\nexport const createCollisionShapes = function(vertices, matrices, indexes, matrixWorld, options = {}) {\n  switch (options.type) {\n    case TYPE.BOX:\n      return [createBoxShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.CYLINDER:\n      return [createCylinderShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.CAPSULE:\n      return [createCapsuleShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.CONE:\n      return [createConeShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.SPHERE:\n      return [createSphereShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.HULL:\n      return [createHullShape(vertices, matrices, matrixWorld, options)];\n    case TYPE.HACD:\n      return createHACDShapes(vertices, matrices, indexes, matrixWorld, options);\n    case TYPE.VHACD:\n      return createVHACDShapes(vertices, matrices, indexes, matrixWorld, options);\n    case TYPE.MESH:\n      return [createTriMeshShape(vertices, matrices, indexes, matrixWorld, options)];\n    case TYPE.HEIGHTFIELD:\n      return [createHeightfieldTerrainShape(options)];\n    default:\n      console.warn(options.type + \" is not currently supported\");\n      return [];\n  }\n};\n\n//TODO: support gimpact (dynamic trimesh) and heightmap\n\nexport const createBoxShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.BOX;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z);\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents);\n  Ammo.destroy(btHalfExtents);\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n  return collisionShape;\n};\n\nexport const createCylinderShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CYLINDER;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z);\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btCylinderShape(btHalfExtents);\n      case \"x\":\n        return new Ammo.btCylinderShapeX(btHalfExtents);\n      case \"z\":\n        return new Ammo.btCylinderShapeZ(btHalfExtents);\n    }\n    return null;\n  })();\n  Ammo.destroy(btHalfExtents);\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n  return collisionShape;\n};\n\nexport const createCapsuleShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CAPSULE;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const { x, y, z } = options.halfExtents;\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2);\n      case \"x\":\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2);\n      case \"z\":\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2);\n    }\n    return null;\n  })();\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n  return collisionShape;\n};\n\nexport const createConeShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.CONE;\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    options.halfExtents = _computeHalfExtents(\n      _computeBounds(vertices, matrices),\n      options.minHalfExtent,\n      options.maxHalfExtent\n    );\n  }\n\n  const { x, y, z } = options.halfExtents;\n  const collisionShape = (() => {\n    switch (options.cylinderAxis) {\n      case \"y\":\n        return new Ammo.btConeShape(Math.max(x, z), y * 2);\n      case \"x\":\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2);\n      case \"z\":\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2);\n    }\n    return null;\n  })();\n\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n  return collisionShape;\n};\n\nexport const createSphereShape = function(vertices, matrices, matrixWorld, options = {}) {\n  options.type = TYPE.SPHERE;\n  _setOptions(options);\n\n  let radius;\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\n    radius = options.sphereRadius;\n  } else {\n    radius = _computeRadius(vertices, matrices, _computeBounds(vertices, matrices));\n  }\n\n  const collisionShape = new Ammo.btSphereShape(radius);\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n\n  return collisionShape;\n};\n\nexport const createHullShape = (function() {\n  const vertex = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, matrixWorld, options = {}) {\n    options.type = TYPE.HULL;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: hull\");\n      return null;\n    }\n\n    const bounds = _computeBounds(vertices, matrices);\n\n    const btVertex = new Ammo.btVector3();\n    const originalHull = new Ammo.btConvexHullShape();\n    originalHull.setMargin(options.margin);\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    let vertexCount = 0;\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3;\n    }\n\n    const maxVertices = options.hullMaxVertices || 100000;\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\n    if (vertexCount > maxVertices) {\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`);\n    }\n    const p = Math.min(1, maxVertices / vertexCount);\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i];\n      matrix.fromArray(matrices[i]);\n      for (let j = 0; j < components.length; j += 3) {\n        const isLastVertex = i === vertices.length - 1 && j === components.length - 3;\n        if (Math.random() <= p || isLastVertex) {\n          // always include the last vertex\n          vertex\n            .set(components[j], components[j + 1], components[j + 2])\n            .applyMatrix4(matrix)\n            .sub(center);\n          btVertex.setValue(vertex.x, vertex.y, vertex.z);\n          originalHull.addPoint(btVertex, isLastVertex); // recalc AABB only on last geometry\n        }\n      }\n    }\n\n    let collisionShape = originalHull;\n    if (originalHull.getNumVertices() >= 100) {\n      //Bullet documentation says don't use convexHulls with 100 verts or more\n      const shapeHull = new Ammo.btShapeHull(originalHull);\n      shapeHull.buildHull(options.margin);\n      Ammo.destroy(originalHull);\n      collisionShape = new Ammo.btConvexHullShape(\n        Ammo.getPointer(shapeHull.getVertexPointer()),\n        shapeHull.numVertices()\n      );\n      Ammo.destroy(shapeHull); // btConvexHullShape makes a copy\n    }\n\n    Ammo.destroy(btVertex);\n\n    _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options));\n    return collisionShape;\n  };\n})();\n\nexport const createHACDShapes = (function() {\n  const vector = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.HACD;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: hacd\");\n      return [];\n    }\n\n    if (!Ammo.hasOwnProperty(\"HACD\")) {\n      console.warn(\n        \"HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.\"\n      );\n      return [];\n    }\n\n    const bounds = _computeBounds(vertices, matrices);\n    const scale = _computeScale(matrixWorld, options);\n\n    let vertexCount = 0;\n    let triCount = 0;\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3;\n      if (indexes && indexes[i]) {\n        triCount += indexes[i].length / 3;\n      } else {\n        triCount += vertices[i].length / 9;\n      }\n    }\n\n    const hacd = new Ammo.HACD();\n    if (options.hasOwnProperty(\"compacityWeight\")) hacd.SetCompacityWeight(options.compacityWeight);\n    if (options.hasOwnProperty(\"volumeWeight\")) hacd.SetVolumeWeight(options.volumeWeight);\n    if (options.hasOwnProperty(\"nClusters\")) hacd.SetNClusters(options.nClusters);\n    if (options.hasOwnProperty(\"nVerticesPerCH\")) hacd.SetNVerticesPerCH(options.nVerticesPerCH);\n    if (options.hasOwnProperty(\"concavity\")) hacd.SetConcavity(options.concavity);\n\n    const points = Ammo._malloc(vertexCount * 3 * 8);\n    const triangles = Ammo._malloc(triCount * 3 * 4);\n    hacd.SetPoints(points);\n    hacd.SetTriangles(triangles);\n    hacd.SetNPoints(vertexCount);\n    hacd.SetNTriangles(triCount);\n\n    let pptr = points / 8,\n      tptr = triangles / 4;\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i];\n      matrix.fromArray(matrices[i]);\n      for (let j = 0; j < components.length; j += 3) {\n        vector\n          .set(components[j + 0], components[j + 1], components[j + 2])\n          .applyMatrix4(matrix)\n          .sub(center);\n        Ammo.HEAPF64[pptr + 0] = vector.x;\n        Ammo.HEAPF64[pptr + 1] = vector.y;\n        Ammo.HEAPF64[pptr + 2] = vector.z;\n        pptr += 3;\n      }\n      if (indexes[i]) {\n        const indices = indexes[i];\n        for (let j = 0; j < indices.length; j++) {\n          Ammo.HEAP32[tptr] = indices[j];\n          tptr++;\n        }\n      } else {\n        for (let j = 0; j < components.length / 3; j++) {\n          Ammo.HEAP32[tptr] = j;\n          tptr++;\n        }\n      }\n    }\n\n    hacd.Compute();\n    Ammo._free(points);\n    Ammo._free(triangles);\n    const nClusters = hacd.GetNClusters();\n\n    const shapes = [];\n    for (let i = 0; i < nClusters; i++) {\n      const hull = new Ammo.btConvexHullShape();\n      hull.setMargin(options.margin);\n      const nPoints = hacd.GetNPointsCH(i);\n      const nTriangles = hacd.GetNTrianglesCH(i);\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8);\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4);\n      hacd.GetCH(i, hullPoints, hullTriangles);\n\n      const pptr = hullPoints / 8;\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3();\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0];\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1];\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2];\n        btVertex.setValue(px, py, pz);\n        hull.addPoint(btVertex, pi === nPoints - 1);\n        Ammo.destroy(btVertex);\n      }\n\n      _finishCollisionShape(hull, options, scale);\n      shapes.push(hull);\n    }\n\n    return shapes;\n  };\n})();\n\nexport const createVHACDShapes = (function() {\n  const vector = new THREE.Vector3();\n  const center = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.VHACD;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: vhacd\");\n      return [];\n    }\n\n    if (!Ammo.hasOwnProperty(\"VHACD\")) {\n      console.warn(\n        \"VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.\"\n      );\n      return [];\n    }\n\n    const bounds = _computeBounds(vertices, matrices);\n    const scale = _computeScale(matrixWorld, options);\n\n    let vertexCount = 0;\n    let triCount = 0;\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5);\n\n    for (let i = 0; i < vertices.length; i++) {\n      vertexCount += vertices[i].length / 3;\n      if (indexes && indexes[i]) {\n        triCount += indexes[i].length / 3;\n      } else {\n        triCount += vertices[i].length / 9;\n      }\n    }\n\n    const vhacd = new Ammo.VHACD();\n    const params = new Ammo.Parameters();\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\n    if (options.hasOwnProperty(\"resolution\")) params.set_m_resolution(options.resolution);\n    if (options.hasOwnProperty(\"depth\")) params.set_m_depth(options.depth);\n    if (options.hasOwnProperty(\"concavity\")) params.set_m_concavity(options.concavity);\n    if (options.hasOwnProperty(\"planeDownsampling\")) params.set_m_planeDownsampling(options.planeDownsampling);\n    if (options.hasOwnProperty(\"convexhullDownsampling\"))\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling);\n    if (options.hasOwnProperty(\"alpha\")) params.set_m_alpha(options.alpha);\n    if (options.hasOwnProperty(\"beta\")) params.set_m_beta(options.beta);\n    if (options.hasOwnProperty(\"gamma\")) params.set_m_gamma(options.gamma);\n    if (options.hasOwnProperty(\"pca\")) params.set_m_pca(options.pca);\n    if (options.hasOwnProperty(\"mode\")) params.set_m_mode(options.mode);\n    if (options.hasOwnProperty(\"maxNumVerticesPerCH\")) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH);\n    if (options.hasOwnProperty(\"minVolumePerCH\")) params.set_m_minVolumePerCH(options.minVolumePerCH);\n    if (options.hasOwnProperty(\"convexhullApproximation\"))\n      params.set_m_convexhullApproximation(options.convexhullApproximation);\n    if (options.hasOwnProperty(\"oclAcceleration\")) params.set_m_oclAcceleration(options.oclAcceleration);\n\n    const points = Ammo._malloc(vertexCount * 3 * 8 + 3);\n    const triangles = Ammo._malloc(triCount * 3 * 4);\n\n    let pptr = points / 8,\n      tptr = triangles / 4;\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i];\n      matrix.fromArray(matrices[i]);\n      for (let j = 0; j < components.length; j += 3) {\n        vector\n          .set(components[j + 0], components[j + 1], components[j + 2])\n          .applyMatrix4(matrix)\n          .sub(center);\n        Ammo.HEAPF64[pptr + 0] = vector.x;\n        Ammo.HEAPF64[pptr + 1] = vector.y;\n        Ammo.HEAPF64[pptr + 2] = vector.z;\n        pptr += 3;\n      }\n      if (indexes[i]) {\n        const indices = indexes[i];\n        for (let j = 0; j < indices.length; j++) {\n          Ammo.HEAP32[tptr] = indices[j];\n          tptr++;\n        }\n      } else {\n        for (let j = 0; j < components.length / 3; j++) {\n          Ammo.HEAP32[tptr] = j;\n          tptr++;\n        }\n      }\n    }\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params);\n    Ammo._free(points);\n    Ammo._free(triangles);\n    const nHulls = vhacd.GetNConvexHulls();\n\n    const shapes = [];\n    const ch = new Ammo.ConvexHull();\n    for (let i = 0; i < nHulls; i++) {\n      vhacd.GetConvexHull(i, ch);\n      const nPoints = ch.get_m_nPoints();\n      const hullPoints = ch.get_m_points();\n\n      const hull = new Ammo.btConvexHullShape();\n      hull.setMargin(options.margin);\n\n      for (let pi = 0; pi < nPoints; pi++) {\n        const btVertex = new Ammo.btVector3();\n        const px = ch.get_m_points(pi * 3 + 0);\n        const py = ch.get_m_points(pi * 3 + 1);\n        const pz = ch.get_m_points(pi * 3 + 2);\n        btVertex.setValue(px, py, pz);\n        hull.addPoint(btVertex, pi === nPoints - 1);\n        Ammo.destroy(btVertex);\n      }\n\n      _finishCollisionShape(hull, options, scale);\n      shapes.push(hull);\n    }\n    Ammo.destroy(ch);\n    Ammo.destroy(vhacd);\n\n    return shapes;\n  };\n})();\n\nexport const createTriMeshShape = (function() {\n  const va = new THREE.Vector3();\n  const vb = new THREE.Vector3();\n  const vc = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, indexes, matrixWorld, options = {}) {\n    options.type = TYPE.MESH;\n    _setOptions(options);\n\n    if (options.fit === FIT.MANUAL) {\n      console.warn(\"cannot use fit: manual with type: mesh\");\n      return null;\n    }\n\n    const scale = _computeScale(matrixWorld, options);\n\n    const bta = new Ammo.btVector3();\n    const btb = new Ammo.btVector3();\n    const btc = new Ammo.btVector3();\n    const triMesh = new Ammo.btTriangleMesh(true, false);\n\n    for (let i = 0; i < vertices.length; i++) {\n      const components = vertices[i];\n      const index = indexes[i] ? indexes[i] : null;\n      matrix.fromArray(matrices[i]);\n      if (index) {\n        for (let j = 0; j < index.length; j += 3) {\n          const ai = index[j] * 3;\n          const bi = index[j + 1] * 3;\n          const ci = index[j + 2] * 3;\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(matrix);\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(matrix);\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(matrix);\n          bta.setValue(va.x, va.y, va.z);\n          btb.setValue(vb.x, vb.y, vb.z);\n          btc.setValue(vc.x, vc.y, vc.z);\n          triMesh.addTriangle(bta, btb, btc, false);\n        }\n      } else {\n        for (let j = 0; j < components.length; j += 9) {\n          va.set(components[j + 0], components[j + 1], components[j + 2]).applyMatrix4(matrix);\n          vb.set(components[j + 3], components[j + 4], components[j + 5]).applyMatrix4(matrix);\n          vc.set(components[j + 6], components[j + 7], components[j + 8]).applyMatrix4(matrix);\n          bta.setValue(va.x, va.y, va.z);\n          btb.setValue(vb.x, vb.y, vb.z);\n          btc.setValue(vc.x, vc.y, vc.z);\n          triMesh.addTriangle(bta, btb, btc, false);\n        }\n      }\n    }\n\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z);\n    triMesh.setScaling(localScale);\n    Ammo.destroy(localScale);\n\n    const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true);\n    collisionShape.resources = [triMesh];\n\n    Ammo.destroy(bta);\n    Ammo.destroy(btb);\n    Ammo.destroy(btc);\n\n    _finishCollisionShape(collisionShape, options);\n    return collisionShape;\n  };\n})();\n\nexport const createHeightfieldTerrainShape = function(options = {}) {\n  _setOptions(options);\n\n  if (options.fit === FIT.ALL) {\n    console.warn(\"cannot use fit: all with type: heightfield\");\n    return null;\n  }\n  const heightfieldDistance = options.heightfieldDistance || 1;\n  const heightfieldData = options.heightfieldData || [];\n  const heightScale = options.heightScale || 0;\n  const upAxis = options.hasOwnProperty(\"upAxis\") ? options.upAxis : 1; // x = 0; y = 1; z = 2\n  const hdt = (() => {\n    switch (options.heightDataType) {\n      case \"short\":\n        return Ammo.PHY_SHORT;\n      case \"float\":\n        return Ammo.PHY_FLOAT;\n      default:\n        return Ammo.PHY_FLOAT;\n    }\n  })();\n  const flipQuadEdges = options.hasOwnProperty(\"flipQuadEdges\") ? options.flipQuadEdges : true;\n\n  const heightStickLength = heightfieldData.length;\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0;\n\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4);\n  const ptr = data / 4;\n\n  let minHeight = Number.POSITIVE_INFINITY;\n  let maxHeight = Number.NEGATIVE_INFINITY;\n  let index = 0;\n  for (let l = 0; l < heightStickLength; l++) {\n    for (let w = 0; w < heightStickWidth; w++) {\n      const height = heightfieldData[l][w];\n      Ammo.HEAPF32[ptr + index] = height;\n      index++;\n      minHeight = Math.min(minHeight, height);\n      maxHeight = Math.max(maxHeight, height);\n    }\n  }\n\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\n    heightStickWidth,\n    heightStickLength,\n    data,\n    heightScale,\n    minHeight,\n    maxHeight,\n    upAxis,\n    hdt,\n    flipQuadEdges\n  );\n\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance);\n  collisionShape.setLocalScaling(scale);\n  Ammo.destroy(scale);\n\n  collisionShape.heightfieldData = data;\n\n  _finishCollisionShape(collisionShape, options);\n  return collisionShape;\n};\n\nfunction _setOptions(options) {\n  options.fit = options.hasOwnProperty(\"fit\") ? options.fit : FIT.ALL;\n  options.type = options.type || TYPE.HULL;\n  options.minHalfExtent = options.hasOwnProperty(\"minHalfExtent\") ? options.minHalfExtent : 0;\n  options.maxHalfExtent = options.hasOwnProperty(\"maxHalfExtent\") ? options.maxHalfExtent : Number.POSITIVE_INFINITY;\n  options.cylinderAxis = options.cylinderAxis || \"y\";\n  options.margin = options.hasOwnProperty(\"margin\") ? options.margin : 0.01;\n  options.includeInvisible = options.hasOwnProperty(\"includeInvisible\") ? options.includeInvisible : false;\n\n  if (!options.offset) {\n    options.offset = new THREE.Vector3();\n  }\n\n  if (!options.orientation) {\n    options.orientation = new THREE.Quaternion();\n  }\n}\n\nconst _finishCollisionShape = function(collisionShape, options, scale) {\n  collisionShape.type = options.type;\n  collisionShape.setMargin(options.margin);\n  collisionShape.destroy = () => {\n    for (let res of collisionShape.resources || []) {\n      Ammo.destroy(res);\n    }\n    if (collisionShape.heightfieldData) {\n      Ammo._free(collisionShape.heightfieldData);\n    }\n    Ammo.destroy(collisionShape);\n  };\n\n  const localTransform = new Ammo.btTransform();\n  const rotation = new Ammo.btQuaternion();\n  localTransform.setIdentity();\n\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z);\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w);\n\n  localTransform.setRotation(rotation);\n  Ammo.destroy(rotation);\n\n  if (scale) {\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z);\n    collisionShape.setLocalScaling(localScale);\n    Ammo.destroy(localScale);\n  }\n\n  collisionShape.localTransform = localTransform;\n};\n\nexport const iterateGeometries = (function() {\n  const inverse = new THREE.Matrix4();\n  return function(root, options, cb) {\n    inverse.getInverse(root.matrixWorld);\n    const scale = new THREE.Vector3();\n    scale.setFromMatrixScale(root.matrixWorld);\n    root.traverse(mesh => {\n      const transform = new THREE.Matrix4();\n      if (\n        mesh.isMesh &&\n        mesh.name !== \"Sky\" &&\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)\n      ) {\n        if (mesh === root) {\n          transform.identity();\n        } else {\n          mesh.updateWorldMatrix(true);\n          transform.multiplyMatrices(inverse, mesh.matrixWorld);\n        }\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\n        // things by the identity matrix\n        cb(\n          mesh.geometry.isBufferGeometry ? mesh.geometry.attributes.position.array : mesh.geometry.vertices,\n          transform.elements,\n          mesh.geometry.index ? mesh.geometry.index.array : null\n        );\n      }\n    });\n  };\n})();\n\nconst _computeScale = (function() {\n  const matrix = new THREE.Matrix4();\n  return function(matrixWorld, options = {}) {\n    const scale = new THREE.Vector3(1, 1, 1);\n    if (options.fit === FIT.ALL) {\n      matrix.fromArray(matrixWorld);\n      scale.setFromMatrixScale(matrix);\n    }\n    return scale;\n  };\n})();\n\nconst _computeRadius = (function() {\n  const center = new THREE.Vector3();\n  return function(vertices, matrices, bounds) {\n    let maxRadiusSq = 0;\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center);\n\n    _iterateVertices(vertices, matrices, v => {\n      const dx = cx - v.x;\n      const dy = cy - v.y;\n      const dz = cz - v.z;\n      maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz);\n    });\n    return Math.sqrt(maxRadiusSq);\n  };\n})();\n\nconst _computeHalfExtents = function(bounds, minHalfExtent, maxHalfExtent) {\n  const halfExtents = new THREE.Vector3();\n  return halfExtents\n    .subVectors(bounds.max, bounds.min)\n    .multiplyScalar(0.5)\n    .clampScalar(minHalfExtent, maxHalfExtent);\n};\n\nconst _computeLocalOffset = function(matrix, bounds, target) {\n  target\n    .addVectors(bounds.max, bounds.min)\n    .multiplyScalar(0.5)\n    .applyMatrix4(matrix);\n  return target;\n};\n\n// returns the bounding box for the geometries underneath `root`.\nconst _computeBounds = function(vertices, matrices) {\n  const bounds = new THREE.Box3();\n  let minX = +Infinity;\n  let minY = +Infinity;\n  let minZ = +Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n  let maxZ = -Infinity;\n  bounds.min.set(0, 0, 0);\n  bounds.max.set(0, 0, 0);\n\n  _iterateVertices(vertices, matrices, v => {\n    if (v.x < minX) minX = v.x;\n    if (v.y < minY) minY = v.y;\n    if (v.z < minZ) minZ = v.z;\n    if (v.x > maxX) maxX = v.x;\n    if (v.y > maxY) maxY = v.y;\n    if (v.z > maxZ) maxZ = v.z;\n  });\n\n  bounds.min.set(minX, minY, minZ);\n  bounds.max.set(maxX, maxY, maxZ);\n  return bounds;\n};\n\nconst _iterateVertices = (function() {\n  const vertex = new THREE.Vector3();\n  const matrix = new THREE.Matrix4();\n  return function(vertices, matrices, cb) {\n    for (let i = 0; i < vertices.length; i++) {\n      matrix.fromArray(matrices[i]);\n      for (let j = 0; j < vertices[i].length; j += 3) {\n        vertex.set(vertices[i][j], vertices[i][j + 1], vertices[i][j + 2]).applyMatrix4(matrix);\n        cb(vertex);\n      }\n    }\n  };\n})();\n","import CONSTANTS from \"../constants.js\";\nconst MESSAGE_TYPES = CONSTANTS.MESSAGE_TYPES;\nconst TYPE = CONSTANTS.TYPE;\nconst SHAPE = CONSTANTS.SHAPE;\nconst CONSTRAINT = CONSTANTS.CONSTRAINT;\nconst BUFFER_CONFIG = CONSTANTS.BUFFER_CONFIG;\nconst BUFFER_STATE = CONSTANTS.BUFFER_STATE;\nimport * as THREE from \"three\";\nimport World from \"./world\";\nimport Body from \"./body\";\nimport Constraint from \"./constraint\";\nimport { DefaultBufferSize } from \"ammo-debug-drawer\";\n\nimport { createCollisionShapes } from \"three-to-ammo\";\n\nimport Ammo from \"ammo.js/builds/ammo.wasm.js\";\nimport AmmoWasm from \"ammo.js/builds/ammo.wasm.wasm\";\n\nfunction initializeWasm(wasmUrl) {\n  return Ammo.bind(undefined, {\n    locateFile(path) {\n      if (path.endsWith(\".wasm\")) {\n        if (wasmUrl) {\n          return wasmUrl;\n        } else {\n          return new URL(AmmoWasm, location.origin).href;\n        }\n      }\n      return path;\n    }\n  });\n}\n\nconst uuids = [];\nconst bodies = {};\nconst shapes = {};\nconst constraints = {};\nconst matrices = {};\nconst indexes = {};\nconst ptrToIndex = {};\n\nconst messageQueue = [];\n\nlet stepDuration = 0;\n\nlet freeIndex = 0;\nconst freeIndexArray = new Int32Array(BUFFER_CONFIG.MAX_BODIES);\nfor (let i = 0; i < BUFFER_CONFIG.MAX_BODIES - 1; i++) {\n  freeIndexArray[i] = i + 1;\n}\nfreeIndexArray[BUFFER_CONFIG.MAX_BODIES - 1] = -1;\n\nlet world, headerIntArray, headerFloatArray, objectMatricesFloatArray, objectMatricesIntArray, lastTick, getPointer;\nlet usingSharedArrayBuffer = false;\n\nfunction isBufferConsumed() {\n  if (usingSharedArrayBuffer) {\n    return headerIntArray && Atomics.load(headerIntArray, 0) !== BUFFER_STATE.READY;\n  } else {\n    return objectMatricesFloatArray && objectMatricesFloatArray.buffer.byteLength !== 0;\n  }\n}\n\nfunction releaseBuffer() {\n  if (usingSharedArrayBuffer) {\n    headerFloatArray[1] = stepDuration;\n    Atomics.store(headerIntArray, 0, BUFFER_STATE.READY);\n  } else {\n    postMessage({ type: MESSAGE_TYPES.TRANSFER_DATA, objectMatricesFloatArray, stepDuration }, [\n      objectMatricesFloatArray.buffer\n    ]);\n  }\n}\n\nconst tick = () => {\n  if (isBufferConsumed()) {\n    const now = performance.now();\n    const dt = now - lastTick;\n    world.step(dt / 1000);\n    stepDuration = performance.now() - now;\n    lastTick = now;\n\n    while (messageQueue.length > 0) {\n      const message = messageQueue.shift();\n      switch (message.type) {\n        case MESSAGE_TYPES.ADD_BODY:\n          addBody(message);\n          break;\n        case MESSAGE_TYPES.UPDATE_BODY:\n          updateBody(message);\n          break;\n        case MESSAGE_TYPES.REMOVE_BODY:\n          removeBody(message);\n          break;\n        case MESSAGE_TYPES.ADD_SHAPES:\n          addShapes(message);\n          break;\n        case MESSAGE_TYPES.ADD_CONSTRAINT:\n          addConstraint(message);\n          break;\n        case MESSAGE_TYPES.RESET_DYNAMIC_BODY:\n          resetDynamicBody(message);\n          break;\n        case MESSAGE_TYPES.ACTIVATE_BODY:\n          activateBody(message);\n      }\n    }\n\n    /** Buffer Schema\n     * Every physics body has 26 * 4 bytes (64bit float/int) assigned in the buffer\n     * 0-15:  Matrix4 elements (floats)\n     * 16:    Linear Velocity (float)\n     * 17:    Angular Velocity (float)\n     * 18-25: first 8 Collisions (ints)\n     */\n\n    for (let i = 0; i < uuids.length; i++) {\n      const uuid = uuids[i];\n      const body = bodies[uuid];\n      const index = indexes[uuid];\n      const matrix = matrices[uuid];\n\n      matrix.fromArray(objectMatricesFloatArray, index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.MATRIX_OFFSET);\n      body.updateShapes();\n\n      if (body.type === TYPE.DYNAMIC) {\n        body.syncFromPhysics();\n      } else {\n        body.syncToPhysics(false);\n      }\n\n      objectMatricesFloatArray.set(matrix.elements, index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.MATRIX_OFFSET);\n\n      objectMatricesFloatArray[\n        index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.LINEAR_VELOCITY_OFFSET\n      ] = body.physicsBody.getLinearVelocity().length();\n      objectMatricesFloatArray[\n        index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.ANGULAR_VELOCITY_OFFSET\n      ] = body.physicsBody.getAngularVelocity().length();\n\n      const ptr = getPointer(body.physicsBody);\n      const collisions = world.collisions.get(ptr);\n      for (let j = 0; j < BUFFER_CONFIG.BODY_DATA_SIZE - BUFFER_CONFIG.COLLISIONS_OFFSET; j++) {\n        if (!collisions || j >= collisions.length) {\n          objectMatricesIntArray[index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.COLLISIONS_OFFSET + j] = -1;\n        } else {\n          const collidingPtr = collisions[j];\n          if (ptrToIndex[collidingPtr]) {\n            objectMatricesIntArray[index * BUFFER_CONFIG.BODY_DATA_SIZE + BUFFER_CONFIG.COLLISIONS_OFFSET + j] =\n              ptrToIndex[collidingPtr];\n          }\n        }\n      }\n    }\n\n    releaseBuffer();\n  }\n};\nconst initSharedArrayBuffer = sharedArrayBuffer => {\n  /** BUFFER HEADER\n   * When using SAB, the first 4 bytes (1 int) are reserved for signaling BUFFER_STATE\n   * This is used to determine which thread is currently allowed to modify the SAB.\n   * The second 4 bytes (1 float) is used for storing stepDuration for stats.\n   */\n  usingSharedArrayBuffer = true;\n  headerIntArray = new Int32Array(sharedArrayBuffer, 0, BUFFER_CONFIG.HEADER_LENGTH);\n  headerFloatArray = new Float32Array(sharedArrayBuffer, 0, BUFFER_CONFIG.HEADER_LENGTH);\n  objectMatricesFloatArray = new Float32Array(\n    sharedArrayBuffer,\n    BUFFER_CONFIG.HEADER_LENGTH * 4,\n    BUFFER_CONFIG.BODY_DATA_SIZE * BUFFER_CONFIG.MAX_BODIES\n  );\n  objectMatricesIntArray = new Int32Array(\n    sharedArrayBuffer,\n    BUFFER_CONFIG.HEADER_LENGTH * 4,\n    BUFFER_CONFIG.BODY_DATA_SIZE * BUFFER_CONFIG.MAX_BODIES\n  );\n};\n\nconst initTransferrables = arrayBuffer => {\n  objectMatricesFloatArray = new Float32Array(arrayBuffer);\n  objectMatricesIntArray = new Int32Array(arrayBuffer);\n};\n\nfunction initDebug(debugSharedArrayBuffer, world) {\n  const debugIndexArray = new Uint32Array(debugSharedArrayBuffer, 0, 1);\n  const debugVerticesArray = new Float32Array(debugSharedArrayBuffer, 4, DefaultBufferSize);\n  const debugColorsArray = new Float32Array(debugSharedArrayBuffer, 4 + DefaultBufferSize, DefaultBufferSize);\n  world.getDebugDrawer(debugIndexArray, debugVerticesArray, debugColorsArray);\n}\n\nfunction addBody({ uuid, matrix, options }) {\n  if (freeIndex !== -1) {\n    const nextFreeIndex = freeIndexArray[freeIndex];\n    freeIndexArray[freeIndex] = -1;\n\n    indexes[uuid] = freeIndex;\n    uuids.push(uuid);\n    const transform = new THREE.Matrix4();\n    transform.fromArray(matrix);\n    matrices[uuid] = transform;\n\n    objectMatricesFloatArray.set(transform.elements, freeIndex * BUFFER_CONFIG.BODY_DATA_SIZE);\n    bodies[uuid] = new Body(options || {}, transform, world);\n    const ptr = getPointer(bodies[uuid].physicsBody);\n    ptrToIndex[ptr] = freeIndex;\n\n    postMessage({ type: MESSAGE_TYPES.BODY_READY, uuid, index: freeIndex });\n    freeIndex = nextFreeIndex;\n  }\n}\n\nfunction updateBody({ uuid, options }) {\n  if (bodies[uuid]) {\n    bodies[uuid].update(options);\n    bodies[uuid].physicsBody.activate(true);\n  }\n}\n\nfunction removeBody({ uuid }) {\n  delete ptrToIndex[getPointer(bodies[uuid].physicsBody)];\n  bodies[uuid].destroy();\n  delete bodies[uuid];\n  delete matrices[uuid];\n  delete shapes[uuid];\n  const index = indexes[uuid];\n  freeIndexArray[index] = freeIndex;\n  freeIndex = index;\n  delete indexes[uuid];\n  uuids.splice(uuids.indexOf(uuid), 1);\n}\n\nconst IDENTITY_MATRIX = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\nfunction addShapes({ bodyUuid, shapesUuid, vertices, matrices, indexes, matrixWorld, options }) {\n  if (!bodies[bodyUuid]) return;\n\n  if (!matrixWorld) {\n    matrixWorld = IDENTITY_MATRIX;\n  }\n\n  const physicsShapes = createCollisionShapes(vertices, matrices, indexes, matrixWorld, options || { type: SHAPE.BOX });\n  for (let i = 0; i < physicsShapes.length; i++) {\n    const shape = physicsShapes[i];\n    bodies[bodyUuid].addShape(shape);\n  }\n  shapes[shapesUuid] = physicsShapes;\n}\n\nfunction addConstraint({ constraintId, bodyUuid, targetUuid, options }) {\n  if (bodies[bodyUuid] && bodies[targetUuid]) {\n    options = options || {};\n    if (!options.hasOwnProperty(\"type\")) {\n      options.type = CONSTRAINT.LOCK;\n    }\n    const constraint = new Constraint(options, bodies[bodyUuid], bodies[targetUuid], world);\n    constraints[constraintId] = constraint;\n  }\n}\n\nfunction resetDynamicBody({ uuid }) {\n  if (bodies[uuid]) {\n    const body = bodies[uuid];\n    const index = indexes[uuid];\n    matrices[uuid].fromArray(objectMatricesFloatArray, index * BUFFER_CONFIG.BODY_DATA_SIZE);\n    body.syncToPhysics(true);\n    body.physicsBody.getLinearVelocity().setValue(0, 0, 0);\n    body.physicsBody.getAngularVelocity().setValue(0, 0, 0);\n  }\n}\n\nfunction activateBody({ uuid }) {\n  if (bodies[uuid]) {\n    bodies[uuid].physicsBody.activate();\n  }\n}\n\nonmessage = async event => {\n  if (event.data.type === MESSAGE_TYPES.INIT) {\n    const AmmoModule = initializeWasm(event.data.wasmUrl);\n\n    AmmoModule().then(Ammo => {\n      getPointer = Ammo.getPointer;\n\n      if (event.data.sharedArrayBuffer) {\n        initSharedArrayBuffer(event.data.sharedArrayBuffer);\n      } else if (event.data.arrayBuffer) {\n        initTransferrables(event.data.arrayBuffer);\n      } else {\n        console.error(\"A valid ArrayBuffer or SharedArrayBuffer is required.\");\n      }\n\n      world = new World(event.data.worldConfig || {});\n      lastTick = performance.now();\n      self.setInterval(tick, 0);\n      postMessage({ type: MESSAGE_TYPES.READY });\n    });\n  } else if (event.data.type === MESSAGE_TYPES.TRANSFER_DATA) {\n    objectMatricesFloatArray = event.data.objectMatricesFloatArray;\n    objectMatricesIntArray = new Int32Array(objectMatricesFloatArray.buffer);\n  } else if (world) {\n    switch (event.data.type) {\n      case MESSAGE_TYPES.ADD_BODY: {\n        messageQueue.push(event.data);\n        break;\n      }\n\n      case MESSAGE_TYPES.UPDATE_BODY: {\n        messageQueue.push(event.data);\n        break;\n      }\n\n      case MESSAGE_TYPES.REMOVE_BODY: {\n        const uuid = event.data.uuid;\n        if (uuids.indexOf(uuid) !== -1) {\n          messageQueue.push(event.data);\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.ADD_SHAPES: {\n        const bodyUuid = event.data.bodyUuid;\n        if (bodies[bodyUuid]) {\n          addShapes(event.data);\n        } else {\n          messageQueue.push(event.data);\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.REMOVE_SHAPES: {\n        const bodyUuid = event.data.bodyUuid;\n        const shapesUuid = event.data.shapesUuid;\n        if (bodies[bodyUuid] && shapes[shapesUuid]) {\n          for (let i = 0; i < shapes[shapesUuid].length; i++) {\n            const shape = shapes[shapesUuid][i];\n            bodies[bodyUuid].removeShape(shape);\n          }\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.ADD_CONSTRAINT: {\n        const bodyUuid = event.data.bodyUuid;\n        const targetUuid = event.data.targetUuid;\n        if (bodies[bodyUuid] && bodies[targetUuid]) {\n          addConstraint(event.data);\n        } else {\n          messageQueue.push(event.data);\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.REMOVE_CONSTRAINT: {\n        const constraintId = event.data.constraintId;\n        if (constraints[constraintId]) {\n          constraints[constraintId].destroy();\n          delete constraints[constraintId];\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.ENABLE_DEBUG: {\n        const enable = event.data.enable;\n        if (!world.debugDrawer) {\n          initDebug(event.data.debugSharedArrayBuffer, world);\n        }\n\n        if (world.debugDrawer) {\n          if (enable) {\n            world.debugDrawer.enable();\n          } else {\n            world.debugDrawer.disable();\n          }\n        }\n        break;\n      }\n\n      case MESSAGE_TYPES.RESET_DYNAMIC_BODY: {\n        messageQueue.push(event.data);\n        break;\n      }\n\n      case MESSAGE_TYPES.ACTIVATE_BODY: {\n        messageQueue.push(event.data);\n        break;\n      }\n    }\n  } else {\n    console.error(\"Error: World Not Initialized\", event.data);\n  }\n};\n"],"sourceRoot":""}